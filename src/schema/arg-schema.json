{
  "tables": {
    "advisorresources": {
      "name": "advisorresources",
      "resourceTypes": [
        "microsoft.advisor/assessments",
        "microsoft.advisor/configurations",
        "microsoft.advisor/recommendations",
        "microsoft.advisor/recommendations/suppressions",
        "microsoft.advisor/resiliencyreviews",
        "microsoft.advisor/suppressions",
        "microsoft.advisor/triagerecommendations",
        "microsoft.advisor/triageresources"
      ],
      "examples": [
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'Cost'\n| extend\nresources = tostring(properties.resourceMetadata.resourceId),\nsavings = todouble(properties.extendedProperties.savingsAmount),\nsolution = tostring(properties.shortDescription.solution),\ncurrency = tostring(properties.extendedProperties.savingsCurrency)\n| summarize\ndcount(resources),\nbin(sum(savings), 0.01)\nby solution, currency\n| project solution, dcount_resources, sum_savings, currency\n| order by sum_savings desc",
          "source": "kql",
          "length": 533,
          "startsWithTable": true
        },
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'HighAvailability'\n| where properties.shortDescription.solution == 'Upgrade to the latest version of the Azure Connected Machine agent'\n| project\nid,\nJoinId = toupper(properties.resourceMetadata.resourceId),\nmachineName = tostring(properties.impactedValue),\nagentVersion = tostring(properties.extendedProperties.installedVersion),\nexpectedVersion = tostring(properties.extendedProperties.latestVersion)\n| join kind=leftouter(\nResources\n| where type == 'microsoft.hybridcompute/machines'\n| project\nmachineId = toupper(id),\nstatus = tostring (properties.status)\n) on $left.JoinId == $right.machineId\n| where status != 'Expired'\n| summarize by id, machineName, agentVersion, expectedVersion\n| order by tolower(machineName) asc",
          "source": "kql",
          "length": 823,
          "startsWithTable": true
        },
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'HighAvailability'\n| where properties.shortDescription.solution == 'Upgrade to the latest version of the Azure Connected Machine agent'\n| project  id,  JoinId = toupper(properties.resourceMetadata.resourceId),  machineName = tostring(properties.impactedValue),  agentVersion = tostring(properties.extendedProperties.installedVersion),  expectedVersion = tostring(properties.extendedProperties.latestVersion)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project  machineId = toupper(id),  status = tostring (properties.status) ) on \\$left.JoinId == \\$right.machineId\n| where status != 'Expired'\n| summarize by id, machineName, agentVersion, expectedVersion\n| order by tolower(machineName) asc",
          "source": "cli",
          "length": 832,
          "startsWithTable": true
        },
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'HighAvailability'\n| where properties.shortDescription.solution == 'Upgrade to the latest version of the Azure Connected Machine agent'\n| project  id,  JoinId = toupper(properties.resourceMetadata.resourceId),  machineName = tostring(properties.impactedValue),  agentVersion = tostring(properties.extendedProperties.installedVersion),  expectedVersion = tostring(properties.extendedProperties.latestVersion)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project  machineId = toupper(id),  status = tostring (properties.status) ) on $left.JoinId == $right.machineId\n| where status != 'Expired'\n| summarize by id, machineName, agentVersion, expectedVersion\n| order by tolower(machineName) asc",
          "source": "powershell",
          "length": 830,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Advisor"
    },
    "aksresources": {
      "name": "aksresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.containerservice/fleets/autoupgradeprofiles",
        "microsoft.containerservice/fleets/members",
        "microsoft.containerservice/fleets/updateruns",
        "microsoft.containerservice/fleets/updatestrategies"
      ]
    },
    "alertsmanagementresources": {
      "name": "alertsmanagementresources",
      "examples": [
        {
          "code": "alertsmanagementresources\n| where type =~ 'microsoft.alertsmanagement/alerts'\n| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()\n| project Severity = tostring(properties.essentials.severity)\n| summarize AlertsCount = count() by Severity",
          "source": "kql",
          "length": 312,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where type =~ 'microsoft.alertsmanagement/alerts'\n| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()\n| project Severity = tostring(properties.essentials.severity),\nAlertState= tostring(properties.essentials.alertState)\n| summarize AlertsCount = count() by Severity, AlertState",
          "source": "kql",
          "length": 380,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| project\nalertId = id,\nname,\nmonitorCondition = tostring(properties.essentials.monitorCondition),\nseverity = tostring(properties.essentials.severity),\nmonitorService = tostring(properties.essentials.monitorService),\nalertState = tostring(properties.essentials.alertState),\ntargetResourceType = tostring(properties.essentials.targetResourceType),\ntargetResource = tostring(properties.essentials.targetResource),\nsubscriptionId,\nstartDateTime = todatetime(properties.essentials.startDateTime),\nlastModifiedDateTime = todatetime(properties.essentials.lastModifiedDateTime),\ndimensions = properties.context.context.condition.allOf[0].dimensions, properties",
          "source": "kql",
          "length": 734,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where type =~ 'microsoft.alertsmanagement/alerts'\n| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()\n| project Severity = tostring(properties.essentials.severity),\nMonitorCondition = tostring(properties.essentials.monitorCondition),\nObjectState = tostring(properties.essentials.alertState),\nMonitorService = tostring(properties.essentials.monitorService),\nAlertRuleId = tostring(properties.essentials.alertRule),\nSignalType = tostring(properties.essentials.signalType),\nTargetResource = tostring(properties.essentials.targetResourceName),\nTargetResourceType = tostring(properties.essentials.targetResourceName), id\n| summarize AlertsCount = count() by Severity, MonitorService , TargetResourceType",
          "source": "kql",
          "length": 801,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| where tostring(properties.essentials.monitorService)  \"ActivityLog Administrative\"\n| project // converting extracted fields to string / datetime to allow grouping\nalertId = id,\nname,\nmonitorCondition = tostring(properties.essentials.monitorCondition),\nseverity = tostring(properties.essentials.severity),\nmonitorService = tostring(properties.essentials.monitorService),\nalertState = tostring(properties.essentials.alertState),\ntargetResourceType = tostring(properties.essentials.targetResourceType),\ntargetResource = tostring(properties.essentials.targetResource),\nsubscriptionId,\nstartDateTime = todatetime(properties.essentials.startDateTime),\nlastModifiedDateTime = todatetime(properties.essentials.lastModifiedDateTime),\ndimensions = properties.context.context.condition.allOf[0].dimensions, // usefor metric alerts and log search alerts\nproperties\n| extend targetResource = tolower(targetResource)\n| join kind=leftouter\n( resources | project targetResource = tolower(id), targetResourceTags = tags) on targetResource\n| project-away targetResource1",
          "source": "kql",
          "length": 1135,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| where tostring(properties.essentials.monitorService)",
          "source": "cli",
          "length": 135,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| project   alertId = id,   name,   monitorCondition = tostring(properties.essentials.monitorCondition),   severity = tostring(properties.essentials.severity),   monitorService = tostring(properties.essentials.monitorService),   alertState = tostring(properties.essentials.alertState),   targetResourceType = tostring(properties.essentials.targetResourceType),   targetResource = tostring(properties.essentials.targetResource),   subscriptionId,   startDateTime = todatetime(properties.essentials.startDateTime),   lastModifiedDateTime = todatetime(properties.essentials.lastModifiedDateTime),   dimensions = properties.context.context.condition.allOf[0].dimensions, properties",
          "source": "cli",
          "length": 758,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.AlertsManagement",
      "resourceTypes": [
        "microsoft.alertsmanagement/alerts"
      ]
    },
    "appserviceresources": {
      "name": "appserviceresources",
      "examples": [
        {
          "code": "AppServiceResources\n| where type =~ 'microsoft.web/sites/config'\n| project id, name, properties.MinTlsVersion",
          "source": "kql",
          "length": 109,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Web",
      "resourceTypes": [
        "microsoft.web/sites/config",
        "microsoft.web/sites/slots/config",
        "microsoft.web/sites/workflows"
      ]
    },
    "authorizationresources": {
      "name": "authorizationresources",
      "examples": [
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/classicadministrators'\n| extend state = properties.adminState\n| extend roles = split(properties.role, ';')\n| take 5",
          "source": "kql",
          "length": 179,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roledefinitions'\n| extend assignableScopes = properties.assignableScopes\n| extend permissionsList = properties.permissions\n| extend isServiceRole = properties.isServiceRole\n| take 5",
          "source": "kql",
          "length": 245,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roleassignments'\n| extend roleDefinitionId = properties.roleDefinitionId\n| extend principalType = properties.principalType\n| extend principalId = properties.principalId\n| extend scope = properties.scope\n| take 5",
          "source": "kql",
          "length": 275,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roledefinitions'\n| extend assignableScopes = properties.assignableScopes\n| extend permissionsList = properties.permissions\n| extend isServiceRole = properties.isServiceRole\n| mv-expand permissionsList\n| extend Actions = permissionsList.Actions\n| extend notActions = permissionsList.notActions\n| extend DataActions = permissionsList.DataActions\n| extend notDataActions = permissionsList.notDataActions\n| take 5",
          "source": "kql",
          "length": 473,
          "startsWithTable": true
        },
        {
          "code": "AuthorizationResources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| where tolower(properties.type) == \"customrole\"\n| extend rdId = tolower(id)\n| extend Scope = tolower(properties.assignableScopes)\n| join kind = leftouter (\nAuthorizationResources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| extend RoleId = tolower(tostring(properties.roleDefinitionId))\n| summarize RoleAssignmentCount = count() by RoleId\n) on $left.rdId == $right.RoleId\n| where isempty(RoleAssignmentCount)\n| project RoleDefinitionId = rdId, RoleDefinitionName = tostring(properties.roleName), Scope",
          "source": "kql",
          "length": 598,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roledefinitions'\n| extend assignableScopes = properties.assignableScopes\n| extend permissionsList = properties.permissions\n| extend isServiceRole = properties.isServiceRole\n| mv-expand permissionsList\n| extend Actions = permissionsList.Actions\n| extend notActions = permissionsList.notActions\n| extend DataActions = permissionsList.DataActions\n| extend notDataActions = permissionsList.notDataActions\n| summarize make_set(Actions), make_set(notActions), make_set(DataActions), make_set(notDataActions), any(assignableScopes, isServiceRole) by id",
          "source": "kql",
          "length": 609,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleId = tolower(tostring(properties.roleDefinitionId))\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| project RoleDefinitionName, RoleId\n) on $left.RoleId == $right.RoleId\n| extend principalId = tostring(properties.principalId)\n| extend principal_to_ra = pack(principalId, id)\n| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 756,
          "startsWithTable": true
        },
        {
          "code": "AuthorizationResources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend PrincipalId = tostring(properties.principalId)\n| extend Scope = tolower(properties.scope)\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| join kind = leftouter (\nAuthorizationResources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| extend RoleType = tostring(properties.type)\n| where RoleType == \"BuiltInRole\"\n| extend RoleId_RoleName = pack(RoleId, RoleName)\n) on $left.RoleDefinitionId == $right.RoleId\n| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 783,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleId = tolower(tostring(properties.roleDefinitionId))\n| extend condition = tostring(properties.condition)\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| project RoleDefinitionName, RoleId\n) on $left.RoleId == $right.RoleId\n| extend principalId = tostring(properties.principalId)\n| extend principal_to_ra = pack(principalId, id)\n| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName, condition\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 819,
          "startsWithTable": true
        },
        {
          "code": "AuthorizationResources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend PrincipalId = tostring(properties.principalId)\n| extend Scope = tolower(properties.scope)\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| extend condition = tostring(properties.condition)\n| join kind = leftouter (\nAuthorizationResources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| extend RoleType = tostring(properties.type)\n| where RoleType == \"BuiltInRole\"\n| extend RoleId_RoleName = pack(RoleId, RoleName)\n) on $left.RoleDefinitionId == $right.RoleId\n| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope, condition\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 846,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| extend PrincipalId = tolower(properties.principalId)\n| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, \"_\", PrincipalId)\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend rdId = tolower(id)\n| project RoleDefinitionName, rdId\n) on $left.RoleDefinitionId == $right.rdId\n| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName\n| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, \"_\", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, \"_\", 1)[0], count_, Scopes\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 947,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| extend PrincipalId = tolower(properties.principalId)\n| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, \"_\", PrincipalId)\n| extend condition = tostring(properties.condition)\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend rdId = tolower(id)\n| project RoleDefinitionName, rdId\n) on $left.RoleDefinitionId == $right.rdId\n| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName\n| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, \"_\", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, \"_\", 1)[0], count_, Scopes, condition\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 1010,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| summarize count()",
          "source": "powershell",
          "length": 42,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Authorization",
      "resourceTypes": [
        "microsoft.authorization/classicadministrators",
        "microsoft.authorization/roleassignments",
        "microsoft.authorization/roledefinitions"
      ]
    },
    "awsresources": {
      "name": "awsresources",
      "examples": [],
      "description": "Related to Microsoft.AwsConnector",
      "resourceTypes": [
        "microsoft.awsconnector/ec2instances",
        "microsoft.awsconnector/eksclusters"
      ]
    },
    "azurebusinesscontinuityresources": {
      "name": "azurebusinesscontinuityresources",
      "examples": [],
      "description": "Related to Microsoft.AzureBusinessContinuity",
      "resourceTypes": [
        "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems",
        "microsoft.azurebusinesscontinuity/unifiedprotecteditems"
      ]
    },
    "azuredevopsplatformresources": {
      "name": "azuredevopsplatformresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.azuredevopsplatform/organizations"
      ]
    },
    "batchresources": {
      "name": "batchresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.batch/batchaccounts/pools"
      ]
    },
    "capabilityresources": {
      "name": "capabilityresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.resources/capabilities"
      ]
    },
    "chaosresources": {
      "name": "chaosresources",
      "examples": [],
      "description": "Related to Microsoft.Chaos",
      "resourceTypes": [
        "microsoft.chaos/experiments/executions",
        "microsoft.chaos/experiments/statuses",
        "microsoft.chaos/targets",
        "microsoft.chaos/targets/capabilities"
      ]
    },
    "communitygalleryresources": {
      "name": "communitygalleryresources",
      "examples": [],
      "description": "Related to Microsoft.Compute",
      "resourceTypes": []
    },
    "computeresources": {
      "name": "computeresources",
      "examples": [
        {
          "code": "ComputeResources\n| where type =~ 'microsoft.compute/virtualmachinescalesets/virtualmachines'\n| extend powerState = properties.extended.instanceView.powerState.code\n| project name, powerState, id",
          "source": "kql",
          "length": 194,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Compute Virtual Machine Scale Sets",
      "resourceTypes": []
    },
    "containerserviceeventresources": {
      "name": "containerserviceeventresources",
      "resourceTypes": [
        "microsoft.containerservice/managedclusters/scheduledevents"
      ],
      "examples": []
    },
    "deploymentresources": {
      "name": "deploymentresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.resources/deploymentstacks"
      ]
    },
    "desktopvirtualizationresources": {
      "name": "desktopvirtualizationresources",
      "examples": [],
      "description": "Related to Microsoft.DesktopVirtualization",
      "resourceTypes": [
        "microsoft.desktopvirtualization/hostpools/sessionhosts"
      ]
    },
    "dnsresources": {
      "name": "dnsresources",
      "examples": [],
      "description": "Related to Microsoft.Network",
      "resourceTypes": [
        "microsoft.network/dnszones/a",
        "microsoft.network/dnszones/aaaa",
        "microsoft.network/dnszones/cname",
        "microsoft.network/dnszones/mx",
        "microsoft.network/dnszones/ptr",
        "microsoft.network/dnszones/soa",
        "microsoft.network/dnszones/srv",
        "microsoft.network/dnszones/txt",
        "microsoft.network/privatednszones/a",
        "microsoft.network/privatednszones/aaaa",
        "microsoft.network/privatednszones/cname",
        "microsoft.network/privatednszones/mx",
        "microsoft.network/privatednszones/ptr",
        "microsoft.network/privatednszones/soa",
        "microsoft.network/privatednszones/srv",
        "microsoft.network/privatednszones/txt"
      ]
    },
    "edgeorderresources": {
      "name": "edgeorderresources",
      "examples": [],
      "description": "Related to Microsoft.EdgeOrder",
      "resourceTypes": [
        "microsoft.edgeorder/orders"
      ]
    },
    "elasticsanresources": {
      "name": "elasticsanresources",
      "examples": [],
      "description": "Related to Microsoft.ElasticSan",
      "resourceTypes": [
        "microsoft.elasticsan/elasticsans",
        "microsoft.elasticsan/elasticsans/volumegroups",
        "microsoft.elasticsan/elasticsans/volumegroups/volumes"
      ]
    },
    "extendedlocationresources": {
      "name": "extendedlocationresources",
      "examples": [
        {
          "code": "ExtendedLocationResources\n| where type == 'microsoft.extendedlocation/customlocations/enabledresourcetypes'",
          "source": "kql",
          "length": 107,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.ExtendedLocation",
      "resourceTypes": [
        "microsoft.extendedlocation/customlocations/enabledresourcetypes"
      ]
    },
    "extensibilityresourcechanges": {
      "name": "extensibilityresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "featureresources": {
      "name": "featureresources",
      "resourceTypes": [
        "microsoft.features/featureprovidernamespaces/featureconfigurations",
        "microsoft.features/featureproviders/subscriptionfeatureregistrations"
      ],
      "examples": [],
      "description": "Related to Microsoft.Features"
    },
    "gcpresources": {
      "name": "gcpresources",
      "resourceTypes": [
        "microsoft.gcpconnector/computeinstances"
      ],
      "examples": []
    },
    "guestconfigurationresources": {
      "name": "guestconfigurationresources",
      "examples": [
        {
          "code": "GuestConfigurationResources\n| where type =~ 'microsoft.guestconfiguration/guestconfigurationassignments'\n| extend vmid = split(properties.targetResourceId,'/')\n| mvexpand properties.latestAssignmentReport.resources\n| where properties_latestAssignmentReport_resources.resourceId != 'Invalid assignment package.'\n| project machine = tostring(vmid[(-1)]),type = tostring(vmid[(-3)])\n| distinct machine, type\n| summarize count() by type",
          "source": "kql",
          "length": 432,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where name in ('installed_application_linux')\n| project id, name, resources = properties.latestAssignmentReport.resources, vmid = split(properties.targetResourceId,'/')[(-1)], status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| where reasons.phrase contains 'chrome'\n| project id, vmid, name, status, resource = resources.resourceId, reason = reasons.phrase",
          "source": "kql",
          "length": 601,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where type =~ 'microsoft.guestconfiguration/guestconfigurationassignments'\n| project id, name, resources = properties.latestAssignmentReport.resources, vmid = split(properties.targetResourceId,'/')[(-1)], status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| project id, vmid, name, status, resource = tostring(resources.resourceId), reason = reasons.phrase\n| summarize count() by resource, name\n| order by count_\n| limit 100",
          "source": "kql",
          "length": 667,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where type =~ 'microsoft.guestconfiguration/guestconfigurationassignments'\n| where properties.complianceStatus == 'NonCompliant'\n| project id, name, resources = properties.latestAssignmentReport.resources, machine = split(properties.targetResourceId,'/')[(-1)], status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| where machine == 'MACHINENAME'\n| project id, machine, name, status, resource = resources.resourceId, reason = reasons.phrase",
          "source": "kql",
          "length": 682,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where name in ('WindowsPendingReboot')\n| project id, name, resources = properties.latestAssignmentReport.resources, vmid = split(properties.targetResourceId,'/'), status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| project id, vmid, name, status, resource = resources.resourceId, reason = reasons.phrase\n| summarize name = any(name), status = any(status), vmid = any(vmid), resources = make_list_if(resource, isnotnull(resource)), reasons = make_list_if(reason, isnotnull(reason)) by id = tolower(id)\n| project id, machine = tostring(vmid[(-1)]), type = tostring(vmid[(-3)]), name, status, reasons",
          "source": "kql",
          "length": 841,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.GuestConfiguration",
      "resourceTypes": [
        "microsoft.guestconfiguration/guestconfigurationassignments",
        "microsoft.guestconfiguration/guestconfigurationassignments/reports"
      ]
    },
    "healthresourcechanges": {
      "name": "healthresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources"
    },
    "healthresources": {
      "name": "healthresources",
      "resourceTypes": [
        "microsoft.resourcehealth/availabilitystatuses",
        "microsoft.resourcehealth/resourceannotations"
      ],
      "examples": [
        {
          "code": "HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| summarize count() by subscriptionId, AvailabilityState = tostring(properties.availabilityState)",
          "source": "kql",
          "length": 177,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| summarize by ResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState)",
          "source": "kql",
          "length": 214,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| where tostring(properties.availabilityState) != 'Available'\n| summarize by ResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState)",
          "source": "kql",
          "length": 276,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])\n| where AvailabilityState != 'Available'\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| join kind = inner (\nHealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/resourceannotations'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))) on $left.VmId == $right.VmId\n| join kind = inner (Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId))\non $left.VmId1 == $right.VmId\n| extend AnnotationName = tostring(properties['annotationName']), ImpactType = tostring(properties['impactType']), Context = tostring(properties['context']), Summary = tostring(properties['summary']), Reason = tostring(properties['reason']), OccurredTime = todatetime(properties['occurredTime'])\n| project VmId, OccurredTime, AvailabilityState, AnnotationName, ImpactType, Context, Summary, Reason\n| project-rename ['Virtual Machine ID'] = VmId, ['Time Since Not Available'] = OccurredTime, ['Availability State'] = AvailabilityState, ['Annotation Name'] = AnnotationName, ['Impact Type'] = ImpactType",
          "source": "kql",
          "length": 1641,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])\n| where AvailabilityState != 'Available'\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/resourceannotations'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))) on \\$left.VmId == \\$right.VmId\n| join kind = inner (Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)) on \\$left.VmId1 == \\$right.VmId\n| extend AnnotationName = tostring(properties['annotationName']), ImpactType = tostring(properties['impactType']), Context = tostring(properties['context']), Summary = tostring(properties['summary']), Reason = tostring(properties['reason']), OccurredTime = todatetime(properties['occurredTime'])\n| project VmId, OccurredTime, AvailabilityState, AnnotationName, ImpactType, Context, Summary, Reason\n| project-rename ['Virtual Machine ID'] = VmId, ['Time Since Not Available'] = OccurredTime, ['Availability State'] = AvailabilityState, ['Annotation Name'] = AnnotationName, ['Impact Type'] = ImpactType",
          "source": "cli",
          "length": 1644,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])\n| where AvailabilityState != 'Available'\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/resourceannotations'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))) on $left.VmId == $right.VmId\n| join kind = inner (Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)) on $left.VmId1 == $right.VmId\n| extend AnnotationName = tostring(properties['annotationName']), ImpactType = tostring(properties['impactType']), Context = tostring(properties['context']), Summary = tostring(properties['summary']), Reason = tostring(properties['reason']), OccurredTime = todatetime(properties['occurredTime'])\n| project VmId, OccurredTime, AvailabilityState, AnnotationName, ImpactType, Context, Summary, Reason\n| project-rename ['Virtual Machine ID'] = VmId, ['Time Since Not Available'] = OccurredTime, ['Availability State'] = AvailabilityState, ['Annotation Name'] = AnnotationName, ['Impact Type'] = ImpactType",
          "source": "powershell",
          "length": 1640,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.ResourceHealth"
    },
    "impactreportresources": {
      "name": "impactreportresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.impact/connectors",
        "microsoft.impact/workloadimpacts",
        "microsoft.impact/workloadimpacts/insights"
      ]
    },
    "insightsresources": {
      "name": "insightsresources",
      "resourceTypes": [
        "microsoft.insights/datacollectionruleassociations",
        "microsoft.insights/tenantactiongroups"
      ],
      "examples": [
        {
          "code": "insightsresources\n| where type == 'microsoft.insights/datacollectionruleassociations'\n| where id contains 'microsoft.compute/virtualmachines/'\n| project id = trim_start('/', tolower(id)), properties\n| extend idComponents = split(id, '/')\n| extend subscription = tolower(tostring(idComponents[1])), resourceGroup = tolower(tostring(idComponents[3])), vmName = tolower(tostring(idComponents[7]))\n| extend dcrId = properties['dataCollectionRuleId']\n| where isnotnull(dcrId)\n| extend dcrId = tostring(dcrId)\n| summarize dcrList = make_list(dcrId), dcrCount = count() by subscription, resourceGroup, vmName\n| sort by dcrCount desc",
          "source": "kql",
          "length": 625,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Insights"
    },
    "iotsecurityresources": {
      "name": "iotsecurityresources",
      "examples": [
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/sites'\n| where properties.tags['key'] =~ 'value1'",
          "source": "kql",
          "length": 109,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/sensors'\n| summarize count() by tostring(properties.sensorType)",
          "source": "kql",
          "length": 123,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/locations/devicegroups/recommendations'\n| where properties.severity == 'High'",
          "source": "kql",
          "length": 137,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/locations/devicegroups/devices'\n| summarize count() by tostring(properties.operatingSystem.platform)",
          "source": "kql",
          "length": 160,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/locations/devicegroups/alerts'\n| where todatetime(properties.startTimeUtc) > ago(30d) and properties.status == 'New'",
          "source": "kql",
          "length": 176,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.IoTSecurity and Microsoft.IoTFirmwareDefense",
      "resourceTypes": [
        "microsoft.iotfirmwaredefense/firmwaregroups/firmwares",
        "microsoft.iotsecurity/locations/devicegroups/alerts",
        "microsoft.iotsecurity/locations/devicegroups/devices",
        "microsoft.iotsecurity/locations/devicegroups/recommendations",
        "microsoft.iotsecurity/locations/sites",
        "microsoft.iotsecurity/locations/sites/sensors",
        "microsoft.iotsecurity/onpremisesensors",
        "microsoft.iotsecurity/sensors",
        "microsoft.iotsecurity/sites"
      ]
    },
    "kubernetesconfigurationresources": {
      "name": "kubernetesconfigurationresources",
      "examples": [
        {
          "code": "kubernetesconfigurationresources\n| where type == 'microsoft.kubernetesconfiguration/fluxconfigurations'\n| where properties.complianceState == 'Non-Compliant'\n| project id",
          "source": "kql",
          "length": 170,
          "startsWithTable": true
        },
        {
          "code": "KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType  == 'microsoft.azuremonitor.containers'\n| parse id with connectedClusterId '/providers/Microsoft.KubernetesConfiguration/Extensions' *\n| project connectedClusterId",
          "source": "kql",
          "length": 292,
          "startsWithTable": true
        },
        {
          "code": "KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType == 'microsoft.azuremonitor.containers'\n| parse id with connectedClusterId '/providers/Microsoft.KubernetesConfiguration/Extensions' *\n| project connectedClusterId",
          "source": "cli",
          "length": 291,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.KubernetesConfiguration",
      "resourceTypes": [
        "microsoft.kubernetesconfiguration/extensions",
        "microsoft.kubernetesconfiguration/fluxconfigurations",
        "microsoft.kubernetesconfiguration/namespaces",
        "microsoft.kubernetesconfiguration/sourcecontrolconfigurations"
      ]
    },
    "kustoresources": {
      "name": "kustoresources",
      "examples": [],
      "description": "Related to Microsoft.Kusto",
      "resourceTypes": [
        "microsoft.kusto/clusters/databases/dataconnections"
      ]
    },
    "machinesinventoryinsightsresources": {
      "name": "machinesinventoryinsightsresources",
      "resourceTypes": [
        "microsoft.offazure/hypervsites/machines/inventoryinsights",
        "microsoft.offazure/hypervsites/machines/inventoryinsights/pendingupdates",
        "microsoft.offazure/serversites/machines/inventoryinsights",
        "microsoft.offazure/serversites/machines/inventoryinsights/pendingupdates",
        "microsoft.offazure/serversites/machines/inventoryinsights/software",
        "microsoft.offazure/serversites/machines/inventoryinsights/vulnerabilities",
        "microsoft.offazure/serversites/machines/pendingupdates",
        "microsoft.offazure/serversites/machines/software",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights/pendingupdates",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights/software",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights/vulnerabilities"
      ],
      "examples": []
    },
    "maintenanceresourcechanges": {
      "name": "maintenanceresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "maintenanceresources": {
      "name": "maintenanceresources",
      "resourceTypes": [
        "microsoft.containerservice/managedclusters/scheduledevents",
        "microsoft.maintenance/applyupdates",
        "microsoft.maintenance/computemrpresponse/applyupdates",
        "microsoft.maintenance/configurationassignments",
        "microsoft.maintenance/maintenanceconfigurations/applyupdates",
        "microsoft.maintenance/updates"
      ],
      "examples": [],
      "description": "Related to Microsoft.Maintenance"
    },
    "managedservicesresources": {
      "name": "managedservicesresources",
      "resourceTypes": [
        "microsoft.managedservices/registrationassignments",
        "microsoft.managedservices/registrationdefinitions"
      ],
      "examples": [],
      "description": "Related to Microsoft.ManagedServices"
    },
    "migrateresources": {
      "name": "migrateresources",
      "resourceTypes": [
        "microsoft.applicationmigration/discoveryhubs/applications",
        "microsoft.applicationmigration/discoveryhubs/applications/members",
        "microsoft.applicationmigration/pgsqlsites/agents",
        "microsoft.applicationmigration/pgsqlsites/pgsqldatabases",
        "microsoft.applicationmigration/pgsqlsites/pgsqlinstances",
        "microsoft.applicationmigration/storagesites/agents",
        "microsoft.applicationmigration/storagesites/fileshares",
        "microsoft.migrate/assessmentprojects/aksassessments",
        "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/aksassessments/clusters",
        "microsoft.migrate/assessmentprojects/aksassessments/costdetails",
        "microsoft.migrate/assessmentprojects/aksassessments/summaries",
        "microsoft.migrate/assessmentprojects/applicationassessments",
        "microsoft.migrate/assessmentprojects/applicationassessments/assessedapplications",
        "microsoft.migrate/assessmentprojects/assessments",
        "microsoft.migrate/assessmentprojects/assessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/assessments/summaries",
        "microsoft.migrate/assessmentprojects/avsassessments",
        "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines",
        "microsoft.migrate/assessmentprojects/avsassessments/summaries",
        "microsoft.migrate/assessmentprojects/businesscases",
        "microsoft.migrate/assessmentprojects/castconnections",
        "microsoft.migrate/assessmentprojects/groups",
        "microsoft.migrate/assessmentprojects/groups/assessments",
        "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/groups/avsassessments",
        "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups/webappassessments",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans",
        "microsoft.migrate/assessmentprojects/heterogeneousassessments",
        "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries",
        "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/mysqlassessments",
        "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances",
        "microsoft.migrate/assessmentprojects/mysqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/pgsqlassessments",
        "microsoft.migrate/assessmentprojects/pgsqlassessments/assessedinstances",
        "microsoft.migrate/assessmentprojects/pgsqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/sqlassessments",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines",
        "microsoft.migrate/assessmentprojects/sqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/webappassessments",
        "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/webappassessments/summaries",
        "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries",
        "microsoft.migrate/castscanreports",
        "microsoft.migrate/castscanreports/codescanissues",
        "microsoft.migrate/migrateprojects/migrationentities",
        "microsoft.migrate/migrateprojects/migrationentitygroups",
        "microsoft.migrate/migrateprojects/tasks",
        "microsoft.migrate/migrateprojects/waves",
        "microsoft.migrate/migrateprojects/waves/workloads",
        "microsoft.mysqldiscovery/mysqlsites/mysqlservers",
        "microsoft.offazure/hypervsites/clusters",
        "microsoft.offazure/hypervsites/hosts",
        "microsoft.offazure/hypervsites/machines",
        "microsoft.offazure/hypervsites/machines/softwareinventories",
        "microsoft.offazure/importsites/machines",
        "microsoft.offazure/mastersites/sqlsites/sqldatabases",
        "microsoft.offazure/mastersites/sqlsites/sqlservers",
        "microsoft.offazure/mastersites/webappsites/extendedmachines",
        "microsoft.offazure/mastersites/webappsites/iiswebapplications",
        "microsoft.offazure/mastersites/webappsites/iiswebservers",
        "microsoft.offazure/mastersites/webappsites/tomcatwebapplications",
        "microsoft.offazure/mastersites/webappsites/tomcatwebservers",
        "microsoft.offazure/serversites/machines",
        "microsoft.offazure/serversites/machines/softwareinventories",
        "microsoft.offazure/vmwaresites/hosts",
        "microsoft.offazure/vmwaresites/machines",
        "microsoft.offazure/vmwaresites/machines/softwareinventories",
        "microsoft.offazure/vmwaresites/vcenters",
        "microsoft.offazurespringboot/springbootsites/springbootapps",
        "microsoft.offazurespringboot/springbootsites/springbootservers"
      ],
      "examples": [],
      "description": "Related to Microsoft.OffAzure"
    },
    "networkresourcechanges": {
      "name": "networkresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "networkresources": {
      "name": "networkresources",
      "resourceTypes": [
        "microsoft.network/effectiveconnectivityconfigurations",
        "microsoft.network/effectivesecurityadminrules",
        "microsoft.network/firewallpolicies/rulecollectiongroups",
        "microsoft.network/networkgroupmemberships",
        "microsoft.network/networkmanagerconnections",
        "microsoft.network/networkmanagers/connectivityconfigurations",
        "microsoft.network/networkmanagers/connectivityconfigurations/snapshots",
        "microsoft.network/networkmanagers/connectivityregionalgoalstates",
        "microsoft.network/networkmanagers/networkgroups",
        "microsoft.network/networkmanagers/networkgroups/aggregatedipaddressspaces",
        "microsoft.network/networkmanagers/networkgroups/members",
        "microsoft.network/networkmanagers/networkgroups/staticmembers",
        "microsoft.network/networkmanagers/regionalgoalstates",
        "microsoft.network/networkmanagers/routingconfigurations",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules/snapshots",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections/snapshots",
        "microsoft.network/networkmanagers/routingconfigurations/snapshots",
        "microsoft.network/networkmanagers/routingregionalgoalstates",
        "microsoft.network/networkmanagers/securityadminconfigurations",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules/snapshots",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/snapshots",
        "microsoft.network/networkmanagers/securityadminconfigurations/snapshots",
        "microsoft.network/networkmanagers/securityadminregionalgoalstates",
        "microsoft.network/networkmanagers/securityuserconfigurations",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules/snapshots",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/snapshots",
        "microsoft.network/networkmanagers/securityuserconfigurations/snapshots",
        "microsoft.network/networkmanagers/securityuserregionalgoalstates",
        "microsoft.network/networkmanagers/verifierworkspaces/reachabilityanalysisintents",
        "microsoft.network/networksecurityperimeters/linkreferences",
        "microsoft.network/networksecurityperimeters/links",
        "microsoft.network/networksecurityperimeters/loggingconfigurations",
        "microsoft.network/networksecurityperimeters/profiles",
        "microsoft.network/networksecurityperimeters/profiles/accessrules",
        "microsoft.network/networksecurityperimeters/resourceassociations",
        "microsoft.network/rulecollectiongroups",
        "microsoft.network/virtualnetworks/subnets/effectiveroutingrules",
        "microsoft.network/virtualnetworks/subnets/effectivesecurityuserrules"
      ],
      "examples": [],
      "description": "Related to Microsoft.Network"
    },
    "orbitalresources": {
      "name": "orbitalresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.orbital/spacecrafts/contacts"
      ]
    },
    "patchassessmentresources": {
      "name": "patchassessmentresources",
      "examples": [
        {
          "code": "PatchAssessmentResources\n| where type has 'softwarepatches' and properties !has 'version'\n| extend machineName = tostring(split(id, '/', 8)), resourceType = tostring(split(type, '/', 0)), tostring(rgName = split(id, '/', 4)), tostring(RunID = split(id, '/', 10))\n| extend prop = parse_json(properties)\n| extend lTime = todatetime(prop.lastModifiedDateTime), patchName = tostring(prop.patchName), kbId = tostring(prop.kbId), installationState = tostring(prop.installationState), classifications = tostring(prop.classifications)\n| where lTime > ago(7d)\n| project lTime, RunID, machineName, rgName, resourceType, patchName, kbId, classifications, installationState\n| sort by RunID",
          "source": "kql",
          "length": 677,
          "startsWithTable": true
        },
        {
          "code": "PatchAssessmentResources\n| where type has 'softwarepatches' and properties has 'version'\n| extend machineName = tostring(split(id, '/', 8)), resourceType = tostring(split(type, '/', 0)), tostring(rgName = split(id, '/', 4)), tostring(RunID = split(id, '/', 10))\n| extend prop = parse_json(properties)\n| extend lTime = todatetime(prop.lastModifiedDateTime), patchName = tostring(prop.patchName), version = tostring(prop.version), installationState = tostring(prop.installationState), classifications = tostring(prop.classifications)\n| where lTime > ago(7d)\n| project lTime, RunID, machineName, rgName, resourceType, patchName, version, classifications, installationState\n| sort by RunID",
          "source": "kql",
          "length": 685,
          "startsWithTable": true
        },
        {
          "code": "PatchAssessmentResources\n| where type !has 'softwarepatches'\n| extend machineName = tostring(split(id, '/', 8)), resourceType = tostring(split(type, '/', 0)), tostring(rgName = split(id, '/', 4))\n| extend prop = parse_json(properties)\n| extend lTime = todatetime(prop.lastModifiedDateTime), OS = tostring(prop.osType), installedPatchCount = tostring(prop.installedPatchCount), failedPatchCount = tostring(prop.failedPatchCount), pendingPatchCount = tostring(prop.pendingPatchCount), excludedPatchCount = tostring(prop.excludedPatchCount), notSelectedPatchCount = tostring(prop.notSelectedPatchCount)\n| where lTime > ago(7d)\n| project lTime, RunID=name,machineName, rgName, resourceType, OS, installedPatchCount, failedPatchCount, pendingPatchCount, excludedPatchCount, notSelectedPatchCount",
          "source": "kql",
          "length": 790,
          "startsWithTable": true
        },
        {
          "code": "PatchAssessmentResources\n| where type !has 'softwarepatches'\n| extend prop = parse_json(properties)\n| extend lastTime = properties.lastModifiedDateTime\n| extend updateRollupCount = prop.availablePatchCountByClassification.updateRollup, featurePackCount = prop.availablePatchCountByClassification.featurePack, servicePackCount = prop.availablePatchCountByClassification.servicePack, definitionCount = prop.availablePatchCountByClassification.definition, securityCount = prop.availablePatchCountByClassification.security, criticalCount = prop.availablePatchCountByClassification.critical, updatesCount = prop.availablePatchCountByClassification.updates, toolsCount = prop.availablePatchCountByClassification.tools, otherCount = prop.availablePatchCountByClassification.other, OS = prop.osType\n| project lastTime, id, OS, updateRollupCount, featurePackCount, servicePackCount, definitionCount, securityCount, criticalCount, updatesCount, toolsCount, otherCount",
          "source": "kql",
          "length": 957,
          "startsWithTable": true
        }
      ],
      "description": "Related to Azure Virtual Machines patch assessment Microsoft.Compute and Microsoft.HybridCompute",
      "resourceTypes": [
        "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults",
        "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults/softwarepatches",
        "microsoft.hybridcompute/machines/patchassessmentresults",
        "microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches"
      ]
    },
    "patchinstallationresources": {
      "name": "patchinstallationresources",
      "examples": [],
      "description": "Related to Azure Virtual Machines patch installation Microsoft.Compute and Microsoft.HybridCompute",
      "resourceTypes": [
        "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults",
        "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults/softwarepatches",
        "microsoft.hybridcompute/machines/patchinstallationresults",
        "microsoft.hybridcompute/machines/patchinstallationresults/softwarepatches"
      ]
    },
    "policyresources": {
      "name": "policyresources",
      "examples": [
        {
          "code": "PolicyResources\n| where type == 'microsoft.authorization/policyexemptions'\n| summarize count() by tostring(properties.policyAssignmentId)",
          "source": "kql",
          "length": 137,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| extend complianceState = tostring(properties.complianceState)\n| summarize count() by complianceState",
          "source": "kql",
          "length": 174,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| where properties.complianceState == 'NonCompliant'\n| extend NonCompliantResourceId = properties.resourceId, PolicyAssignmentName = properties.policyAssignmentName",
          "source": "kql",
          "length": 236,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.authorization/policyexemptions'\n| extend expiresOnC = todatetime(properties.expiresOn)\n| where isnotnull(expiresOnC)\n| where expiresOnC >= now() and expiresOnC < now(+90d)\n| project name, expiresOnC",
          "source": "kql",
          "length": 241,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| extend complianceState = tostring(properties.complianceState)\n| extend resourceLocation = tostring(properties.resourceLocation)\n| summarize count() by resourceLocation, complianceState",
          "source": "kql",
          "length": 258,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\nresourceId = tostring(properties.resourceId),\nresourceType = tolower(tostring(properties.resourceType)),\npolicyAssignmentId = tostring(properties.policyAssignmentId),\npolicyDefinitionId = tostring(properties.policyDefinitionId),\npolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\nstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, resourceType\n| summarize counts = count() by resourceType, max_stateWeight\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by resourceType\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project resourceType,\noverAllComplianceState = iff(overallStateWeight == 300, 'noncompliant', iff(overallStateWeight == 200, 'compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount",
          "source": "kql",
          "length": 1632,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\nresourceId = tostring(properties.resourceId),\npolicyAssignmentId = tostring(properties.policyAssignmentId),\npolicyAssignmentScope = tostring(properties.policyAssignmentScope),\npolicyAssignmentName = tostring(properties.policyAssignmentName),\npolicyDefinitionId = tostring(properties.policyDefinitionId),\npolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\nstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,\ncomplianceState = iff(overallStateWeight == 300, 'noncompliant', iff(overallStateWeight == 200, 'compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount",
          "source": "kql",
          "length": 1892,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| where properties.complianceState == 'NonCompliant'",
          "source": "powershell",
          "length": 124,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.PolicyInsights",
      "resourceTypes": [
        "microsoft.authorization/policyassignments",
        "microsoft.authorization/policydefinitions",
        "microsoft.authorization/policydefinitions/versions",
        "microsoft.authorization/policyenrollments",
        "microsoft.authorization/policyexemptions",
        "microsoft.authorization/policysetdefinitions",
        "microsoft.authorization/policysetdefinitions/versions",
        "microsoft.policyinsights/componentpolicystates",
        "microsoft.policyinsights/policymetadata",
        "microsoft.policyinsights/policystates"
      ]
    },
    "quotaresourcechanges": {
      "name": "quotaresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "recoveryservicesresources": {
      "name": "recoveryservicesresources",
      "resourceTypes": [
        "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems",
        "microsoft.azurebusinesscontinuity/unifiedprotecteditems",
        "microsoft.dataprotection/backupvaults/backupinstances",
        "microsoft.dataprotection/backupvaults/backupjobs",
        "microsoft.dataprotection/backupvaults/backuppolicies",
        "microsoft.dataprotection/backupvaults/deletedbackupinstances",
        "microsoft.recoveryservices/locations/deletedvaults",
        "microsoft.recoveryservices/locations/deletedvaults/backupfabrics/protectioncontainers/protecteditems",
        "microsoft.recoveryservices/vaults",
        "microsoft.recoveryservices/vaults/alerts",
        "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protectableitems",
        "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems",
        "microsoft.recoveryservices/vaults/backupjobs",
        "microsoft.recoveryservices/vaults/backuppolicies",
        "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationmigrationitems",
        "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotectableitems",
        "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotecteditems",
        "microsoft.recoveryservices/vaults/replicationjobs",
        "microsoft.recoveryservices/vaults/replicationpolicies",
        "microsoft.recoveryservices/vaults/replicationrecoveryplans"
      ],
      "examples": [],
      "description": "Related to Microsoft.DataProtection and Microsoft.RecoveryServices"
    },
    "resourcechanges": {
      "name": "resourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources"
    },
    "resourcecontainerchanges": {
      "name": "resourcecontainerchanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources"
    },
    "resourcecontainers": {
      "name": "resourcecontainers",
      "resourceTypes": [
        "microsoft.management/managementgroups",
        "microsoft.management/servicegroups",
        "microsoft.resources/subscriptions",
        "microsoft.resources/subscriptions/resourcegroups"
      ],
      "examples": [
        {
          "code": "resourcecontainers\n| where type == \"microsoft.management/servicegroups\"",
          "source": "kql",
          "length": 71,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project subscriptionId, name",
          "source": "kql",
          "length": 101,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type=='microsoft.resources/subscriptions/resourcegroups' | project name, type  | limit 5\n| union  (Resources | project name, type | limit 5)",
          "source": "kql",
          "length": 167,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.resources/subscriptions'\n| extend  mgParent = properties.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project subscriptionId, name, mgParent, MGHierarchy, mgParent.name",
          "source": "kql",
          "length": 249,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| extend  mgParent = properties.details.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project name, properties.displayName, mgParent, MGHierarchy, mgParent.name",
          "source": "kql",
          "length": 269,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| project mgname = name\n| join kind=leftouter (resourcecontainers | where type=~ 'microsoft.resources/subscriptions'\n| extend  mgParent = properties.managementGroupAncestorsChain | project id, mgname = tostring(mgParent[0].name)) on mgname\n| summarize count() by mgname",
          "source": "kql",
          "length": 344,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| union (\nresources\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n)\n| distinct tagKey, tagValue\n| where tagKey !startswith \"hidden-\"",
          "source": "kql",
          "length": 395,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type=='microsoft.resources/subscriptions/resourcegroups'\n| project name, type\n| limit 5\n| union  (Resources\n| project name, type\n| limit 5)",
          "source": "cli",
          "length": 166,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.resources/subscriptions'\n| extend mgParent = properties.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project subscriptionId, name, mgParent, MGHierarchy, mgParent.name",
          "source": "cli",
          "length": 248,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| extend mgParent = properties.details.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project name, properties.displayName, mgParent, MGHierarchy, mgParent.name",
          "source": "cli",
          "length": 268,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| project mgname = name\n| join kind=leftouter (resourcecontainers\n| where type=~ 'microsoft.resources/subscriptions'\n| extend mgParent = properties.managementGroupAncestorsChain\n| project id, mgname = tostring(mgParent[0].name)) on mgname\n| summarize count() by mgname",
          "source": "cli",
          "length": 343,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| union (resources\n| where notempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey]) )\n| distinct tagKey, tagValue\n| where tagKey !startswith",
          "source": "cli",
          "length": 382,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| union ( resources\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey]) )\n| distinct tagKey, tagValue\n| where tagKey !startswith",
          "source": "cli",
          "length": 385,
          "startsWithTable": true
        }
      ],
      "description": "Includes management group (Microsoft.Management/managementGroups), subscription (Microsoft.Resources/subscriptions) and resource group (Microsoft.Resources/subscriptions/resourcegroups) resource types and data"
    },
    "resources": {
      "name": "resources",
      "examples": [
        {
          "code": "Resources\n| summarize count()",
          "source": "kql",
          "length": 29,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project tags\n| summarize buildschema(tags)",
          "source": "kql",
          "length": 54,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type contains 'storage' | distinct type",
          "source": "kql",
          "length": 57,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project name, type, location\n| order by name asc",
          "source": "kql",
          "length": 60,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.keyvault/vaults'\n| count",
          "source": "kql",
          "length": 61,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where tags.environment=~'internal'\n| project name, tags",
          "source": "kql",
          "length": 67,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| distinct type, apiVersion\n| where isnotnull(apiVersion)\n| order by type asc",
          "source": "kql",
          "length": 87,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Storage/storageAccounts'\n| where tags['tag with a space']=='Custom value'",
          "source": "kql",
          "length": 110,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project name, location, type\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| order by name desc",
          "source": "kql",
          "length": 113,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)\n| summarize count () by subscriptionId",
          "source": "kql",
          "length": 127,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)\n| project properties.ipAddress\n| limit 100",
          "source": "kql",
          "length": 131,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| summarize count() by tostring(properties.storageProfile.osDisk.osType)",
          "source": "kql",
          "length": 134,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| project name, properties.storageProfile.osDisk.osType\n| top 5 by name desc",
          "source": "kql",
          "length": 138,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines' and name matches regex @'^Contoso(.*)[0-9]+$'\n| project name\n| order by name asc",
          "source": "kql",
          "length": 142,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| summarize count() by tostring(properties.extended.instanceView.powerState.code)",
          "source": "kql",
          "length": 143,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| extend os = properties.storageProfile.osDisk.osType\n| summarize count() by tostring(os)",
          "source": "kql",
          "length": 151,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| summarize count() by PowerState = tostring(properties.extended.instanceView.powerState.code)",
          "source": "kql",
          "length": 156,
          "startsWithTable": true
        },
        {
          "code": "resources\n| where type == 'microsoft.insights/datacollectionrules'\n| summarize dcrCount = count() by subscriptionId, resourceGroup, location\n| sort by dcrCount desc",
          "source": "kql",
          "length": 164,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\n| project name, resourceGroup\n| sort by name asc",
          "source": "kql",
          "length": 188,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.network/virtualnetworks'\n| extend subnets = properties.subnets\n| mv-expand subnets\n| project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId",
          "source": "kql",
          "length": 223,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type=~ 'microsoft.compute/virtualmachinescalesets'\n| where name contains 'contoso'\n| project subscriptionId, name, location, resourceGroup, Capacity = toint(sku.capacity), Tier = sku.name\n| order by Capacity desc",
          "source": "kql",
          "length": 230,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| join kind=leftouter (ResourceContainers | where type=='microsoft.resources/subscriptions' | project SubName=name, subscriptionId) on subscriptionId\n| where type == 'microsoft.keyvault/vaults'\n| project type, name, SubName",
          "source": "kql",
          "length": 233,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| summarize resourceCount=count() by subscriptionId\n| join (ResourceContainers | where type=='microsoft.resources/subscriptions' | project SubName=name, subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
          "source": "kql",
          "length": 243,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend powerState = tostring(properties.extended.instanceView.powerState.code)\n| extend VMSS = tostring(properties.virtualMachineScaleSet.id)\n| where isnotempty(VMSS)\n| project name, powerState, id",
          "source": "kql",
          "length": 261,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project id, subscriptionId, location, type, properties.agentVersion, properties.kubernetesVersion, properties.distribution, properties.infrastructure, properties.totalNodeCount, properties.totalCoreCount\n| where type =~ 'Microsoft.Kubernetes/connectedClusters'",
          "source": "kql",
          "length": 272,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.documentdb/databaseaccounts'\n| project id, name, writeLocations = (properties.writeLocations)\n| mv-expand writeLocations\n| project id, name, writeLocation = tostring(writeLocations.locationName)\n| where writeLocation in ('East US', 'West US')\n| summarize by id, name",
          "source": "kql",
          "length": 303,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.storage/storageaccounts'\n| join kind=inner (\nResourceContainers\n| where type =~ 'microsoft.resources/subscriptions/resourcegroups'\n| where tags['Key1'] =~ 'Value1'\n| project subscriptionId, resourceGroup)\non subscriptionId, resourceGroup\n| project-away subscriptionId1, resourceGroup1",
          "source": "kql",
          "length": 321,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.network/networkinterfaces'\n| project id, ipConfigurations = properties.ipConfigurations\n| mvexpand ipConfigurations\n| project id, subnetId = tostring(ipConfigurations.properties.subnet.id)\n| parse kind=regex subnetId with '/virtualNetworks/' virtualNetwork '/subnets/' subnet\n| project id, virtualNetwork, subnet",
          "source": "kql",
          "length": 349,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type in (\n'microsoft.managedidentity/userassignedidentities',\n'microsoft.keyvault/vaults',\n'microsoft.sql/servers/databases',\n'microsoft.datalakestore/accounts',\n'microsoft.containerservice/managedclusters')\nor identity has 'SystemAssigned'\nor (type =~ 'microsoft.storage/storageaccounts' and properties['isHnsEnabled'] == true)\n| summarize count() by type",
          "source": "kql",
          "length": 374,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project domain=tostring(properties.domainName)\n| summarize Domains=make_list(domain), TotalMachineCount=sum(1)\n| mvexpand EachDomain = Domains\n| summarize PerDomainMachineCount = count() by tostring(EachDomain), TotalMachineCount\n| extend Pct = 100 * bin(todouble(PerDomainMachineCount) / todouble(TotalMachineCount), 0.001)",
          "source": "kql",
          "length": 387,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.storage/storageaccounts'\n| join kind=inner (\nResourceContainers\n| where type =~ 'microsoft.resources/subscriptions/resourcegroups'\n| mv-expand bagexpansion=array tags\n| where isnotempty(tags)\n| where tags[0] =~ 'key1' and tags[1] =~ 'value1'\n| project subscriptionId, resourceGroup)\non subscriptionId, resourceGroup\n| project-away subscriptionId1, resourceGroup1",
          "source": "kql",
          "length": 399,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.sql/servers/databases'\n| project databaseId = id, databaseName = name, elasticPoolId = tolower(tostring(properties.elasticPoolId))\n| join kind=leftouter (\nResources\n| where type =~ 'microsoft.sql/servers/elasticpools'\n| project elasticPoolId = tolower(id), elasticPoolName = name, elasticPoolState = properties.state)\non elasticPoolId\n| project-away elasticPoolId1",
          "source": "kql",
          "length": 401,
          "startsWithTable": true
        },
        {
          "code": "resources\n| where type =~ 'Microsoft.Kubernetes/connectedClusters' or type =~ 'Microsoft.ContainerService/managedClusters' | extend clusterId = tolower(id) | project clusterId\n| join\n( kubernetesconfigurationresources\n| where type == 'microsoft.kubernetesconfiguration/fluxconfigurations'\n| parse tolower(id) with clusterId '/providers/microsoft.kubernetesconfiguration/fluxconfigurations' *\n| project clusterId\n) on clusterId\n| project clusterId",
          "source": "kql",
          "length": 446,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| where properties.extended.instanceView.powerState.code != 'PowerState/running'\n| project vmName = name, power = properties.extended.instanceView.powerState.code\n| join kind = leftouter (GuestConfigurationResources\n| extend vmName = tostring(split(properties.targetResourceId,'/')[(-1)])\n| project vmName, name, compliance = properties.complianceStatus) on vmName | project-away vmName1",
          "source": "kql",
          "length": 449,
          "startsWithTable": true
        },
        {
          "code": "resources\n| where type == 'microsoft.insights/datacollectionrules'\n| extend destinations = properties['destinations']\n| extend logAnalyticsWorkspaces = destinations['logAnalytics']\n| where isnotnull(logAnalyticsWorkspaces)\n| mv-expand logAnalyticsWorkspace = logAnalyticsWorkspaces\n| extend logAnalyticsWorkspaceResourceId = tolower(tostring(logAnalyticsWorkspace['workspaceResourceId']))\n| summarize dcrList = make_list(id), dcrCount = count() by logAnalyticsWorkspaceResourceId\n| sort by dcrCount desc",
          "source": "kql",
          "length": 503,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project\nid,\nJoinID = toupper(id),\nComputerName = tostring(properties.osProfile.computerName),\nOSName = tostring(properties.osName)\n| join kind=leftouter(\nResources\n| where type == 'microsoft.hybridcompute/machines/extensions'\n| project\nMachineId = toupper(substring(id, 0, indexof(id, '/extensions'))),\nExtensionName = name\n) on $left.JoinID == $right.MachineId\n| summarize Extensions = make_list(ExtensionName) by id, ComputerName, OSName\n| order by tolower(OSName) asc",
          "source": "kql",
          "length": 533,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Kubernetes/connectedClusters' | extend connectedClusterId = tolower(id) | project connectedClusterId\n| join kind = leftouter\n(KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType  == 'microsoft.azuremonitor.containers'\n| parse tolower(id) with connectedClusterId '/providers/microsoft.kubernetesconfiguration/extensions' *\n| project connectedClusterId\n)  on connectedClusterId\n| where connectedClusterId1 == ''\n| project connectedClusterId",
          "source": "kql",
          "length": 552,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\nJoinID = toupper(id),\nOSName = tostring(properties.osProfile.computerName),\nOSType = tostring(properties.storageProfile.osDisk.osType),\nVMSize = tostring(properties.hardwareProfile.vmSize)\n| join kind=leftouter(\nResources\n| where type == 'microsoft.compute/virtualmachines/extensions'\n| extend\nVMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\nExtensionName = name\n) on $left.JoinID == $right.VMId\n| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize\n| order by tolower(OSName) asc",
          "source": "kql",
          "length": 591,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project resourceGroup, Id = tolower(id), PowerState = tostring( properties.extended.instanceView.powerState.code)\n| join kind=leftouter (\nHealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| where tostring(properties.targetResourceType) =~ 'microsoft.compute/virtualmachines'\n| project targetResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState))\non $left.Id == $right.targetResourceId\n| project-away targetResourceId\n| where PowerState != 'PowerState/deallocated'",
          "source": "kql",
          "length": 623,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.extendedlocation/customlocations' and properties.provisioningState =~ 'succeeded'\n| extend clusterExtensionIds=properties.clusterExtensionIds\n| mvexpand clusterExtensionIds\n| extend clusterExtensionId = tolower(clusterExtensionIds)\n| join kind=leftouter(\nExtendedLocationResources\n| where type =~ 'microsoft.extendedlocation/customLocations/enabledResourcetypes'\n| project clusterExtensionId = tolower(properties.clusterExtensionId), extensionType = tolower(properties.extensionType)\n| where extensionType in~ ('microsoft.scvmm','microsoft.vmware')\n) on clusterExtensionId\n| where extensionType in~ ('microsoft.scvmm','microsoft.vmware')\n| summarize virtualMachineKindsEnabled=make_set(extensionType) by id,name,location\n| sort by name asc",
          "source": "kql",
          "length": 776,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project vmId = tolower(id), vmNics = properties.networkProfile.networkInterfaces\n| join (\nResources |\nwhere type =~ 'microsoft.network/networkinterfaces' |\nproject nicVMId = tolower(tostring(properties.virtualMachine.id)), allVMNicID = tolower(id), nicIPConfigs = properties.ipConfigurations)\non $left.vmId == $right.nicVMId\n| join (\nResources\n| where type =~ 'microsoft.network/publicipaddresses' and isnotnull(properties.ipConfiguration.id)\n| where sku.name == 'Basic' // exclude to find all VMs with Public IPs\n| project pipId = id, pipSku = sku.name, pipAssociatedNicId = tolower(tostring(split(properties.ipConfiguration.id, '/ipConfigurations/')[0])))\non $left.allVMNicID == $right.pipAssociatedNicId\n| project vmId, pipId, pipSku",
          "source": "kql",
          "length": 800,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = inner (\nHealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState']))\non $left.VmId == $right.VmId\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| project-rename ['Virtual Machine ID'] = VmId, UTCTimeStamp = properties_occurredTime, ['Availability State'] = AvailabilityState",
          "source": "kql",
          "length": 823,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\n| mv-expand nic=properties.networkProfile.networkInterfaces\n| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)\n| project vmId = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId = tostring(nic.id)\n| join kind=leftouter (\nResources\n| where type =~ 'microsoft.network/networkinterfaces'\n| extend ipConfigsCount=array_length(properties.ipConfigurations)\n| mv-expand ipconfig=properties.ipConfigurations\n| where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true'\n| project nicId = id, publicIpId = tostring(ipconfig.properties.publicIPAddress.id))\non nicId\n| project-away nicId1\n| summarize by vmId, vmName, vmSize, nicId, publicIpId\n| join kind=leftouter (\nResources\n| where type =~ 'microsoft.network/publicipaddresses'\n| project publicIpId = id, publicIpAddress = properties.ipAddress)\non publicIpId\n| project-away publicIpId1",
          "source": "kql",
          "length": 1015,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = leftouter (\nHealthResourceChanges\n| where subscriptionId == 'mySubscriptionId'\n| where id !has '/virtualMachineScaleSets/'\n| where id has '/virtualMachines/'\n| extend timestamp = todatetime(properties.changeAttributes.timestamp)\n| extend VmId = tolower(tostring(split(id, '/providers/Microsoft.ResourceHealth/')[0]))\n| where properties has 'properties.availabilityState' or properties has 'properties.annotationName'\n| extend HealthChangeType = iff(properties has 'properties.availabilityState', 'Availability', 'Annotation')\n| extend ChangeType = tostring(properties.changeType)\n| where ChangeType == 'Update'  or ChangeType == 'Delete')\non $left.VmId == $right.VmId\n| extend Changes = parse_json(tostring(properties.changes))\n| extend AvailabilityStateJson = parse_json(tostring(Changes['properties.availabilityState']))\n| extend AnnotationNameJson = parse_json(tostring(Changes['properties.annotationName']))\n| extend AnnotationSummary = parse_json(tostring(Changes['properties.summary']))\n| extend AnnotationReason = parse_json(tostring(Changes['properties.reason']))\n| extend AnnotationImpactType = parse_json(tostring(Changes['properties.impactType']))\n| extend AnnotationContext = parse_json(tostring(Changes['properties.context']))\n| extend AnnotationCategory = parse_json(tostring(Changes['properties.category']))\n| extend AvailabilityStatePreviousValue = tostring(AvailabilityStateJson.previousValue)\n| extend AvailabilityStateCurrentValue = tostring(AvailabilityStateJson.newValue)\n| extend AnnotationNamePreviousValue = tostring(AnnotationNameJson.previousValue)\n| extend AnnotationNameCurrentValue = tostring(AnnotationNameJson.newValue)\n| extend AnnotationSummaryCurrentValue = tostring(AnnotationSummary.newValue)\n| extend AnnotationReasonCurrentValue = tostring(AnnotationReason.newValue)\n| extend AnnotationImpactTypeCurrentValue = tostring(AnnotationImpactType.newValue)\n| extend AnnotationContextCurrentValue = tostring(AnnotationContext.newValue)\n| extend AnnotationCategoryCurrentValue = tostring(AnnotationCategory.newValue)\n| project id = VmId, timestamp, ChangeType, AvailabilityStateCurrentValue, AnnotationNameCurrentValue, AnnotationSummaryCurrentValue, AnnotationReasonCurrentValue, AnnotationImpactTypeCurrentValue, AnnotationContextCurrentValue, AnnotationCategoryCurrentValue, Changes\n| order by id, timestamp asc\n| project-rename ['Virtual Machine ID'] = id, UTCTimeStamp = timestamp, ['Change Type'] = ChangeType, ['Availability State'] = AvailabilityStateCurrentValue, ['Summary'] = AnnotationSummaryCurrentValue, ['Reason'] = AnnotationReasonCurrentValue, ['Impact Type'] = AnnotationImpactTypeCurrentValue, Category = AnnotationCategoryCurrentValue, Context = AnnotationContextCurrentValue",
          "source": "kql",
          "length": 2980,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project id, JoinID = toupper(id), ComputerName = tostring(properties.osProfile.computerName), OSName = tostring(properties.osName)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines/extensions'\n| project  MachineId = toupper(substring(id, 0, indexof(id, '/extensions'))),  ExtensionName = name ) on \\$left.JoinID == \\$right.MachineId\n| summarize Extensions = make_list(ExtensionName) by id, ComputerName, OSName\n| order by tolower(OSName) asc",
          "source": "cli",
          "length": 537,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Kubernetes/connectedClusters'\n| extend connectedClusterId = tolower(id)\n| project connectedClusterId\n| join kind = leftouter (KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType == 'microsoft.azuremonitor.containers'\n| parse tolower(id) with connectedClusterId '/providers/microsoft.kubernetesconfiguration/extensions' *\n| project connectedClusterId ) on connectedClusterId\n| where connectedClusterId1 == ''\n| project connectedClusterId",
          "source": "cli",
          "length": 550,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend JoinID = toupper(id), OSName = tostring(properties.osProfile.computerName), OSType = tostring(properties.storageProfile.osDisk.osType), VMSize = tostring(properties.hardwareProfile.vmSize)\n| join kind=leftouter( Resources\n| where type == 'microsoft.compute/virtualmachines/extensions'\n| extend VMId = toupper(substring(id, 0, indexof(id, '/extensions'))), ExtensionName = name ) on \\$left.JoinID == \\$right.VMId\n| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize\n| order by tolower(OSName) asc",
          "source": "cli",
          "length": 593,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend JoinID = toupper(id), OSName = tostring(properties.osProfile.computerName), OSType = tostring(properties.storageProfile.osDisk.osType), VMSize = tostring(properties.hardwareProfile.vmSize)\n| join kind=leftouter( Resources\n| where type == 'microsoft.compute/virtualmachines/extensions'\n| extend  VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),  ExtensionName = name ) on \\$left.JoinID == \\$right.VMId\n| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize\n| order by tolower(OSName) asc",
          "source": "cli",
          "length": 595,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project resourceGroup, Id = tolower(id), PowerState = tostring( properties.extended.instanceView.powerState.code)\n| join kind=leftouter ( HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| where tostring(properties.targetResourceType) =~ 'microsoft.compute/virtualmachines'\n| project targetResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState)) on \\$left.Id == \\$right.targetResourceId\n| project-away targetResourceId\n| where PowerState != 'PowerState/deallocated'",
          "source": "cli",
          "length": 625,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project vmId = tolower(id), vmNics = properties.networkProfile.networkInterfaces\n| join (Resources\n| where type =~ 'microsoft.network/networkinterfaces'\n| project nicVMId = tolower(tostring(properties.virtualMachine.id)), allVMNicID = tolower(id), nicIPConfigs = properties.ipConfigurations) on \\$left.vmId == \\$right.nicVMId\n| join ( Resources\n| where type =~ 'microsoft.network/publicipaddresses' and isnotnull(properties.ipConfiguration.id)\n| where sku.name == 'Basic'\n| project pipId = id, pipSku = sku.name, pipAssociatedNicId = tolower(tostring(split(properties.ipConfiguration.id, '/ipConfigurations/')[0]))) on \\$left.allVMNicID == \\$right.pipAssociatedNicId\n| project vmId, pipId, pipSku",
          "source": "cli",
          "length": 760,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])) on \\$left.VmId == \\$right.VmId\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| project-rename ['Virtual Machine ID'] = VmId, UTCTimeStamp = properties_occurredTime, ['Availability State'] = AvailabilityState",
          "source": "cli",
          "length": 824,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project id, JoinID = toupper(id), ComputerName = tostring(properties.osProfile.computerName), OSName = tostring(properties.osName)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines/extensions'\n| project  MachineId = toupper(substring(id, 0, indexof(id, '/extensions'))),  ExtensionName = name ) on $left.JoinID == $right.MachineId\n| summarize Extensions = make_list(ExtensionName) by id, ComputerName, OSName\n| order by tolower(OSName) asc",
          "source": "powershell",
          "length": 535,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project vmId = tolower(id), vmNics = properties.networkProfile.networkInterfaces\n| join (Resources\n| where type =~ 'microsoft.network/networkinterfaces'\n| project nicVMId = tolower(tostring(properties.virtualMachine.id)), allVMNicID = tolower(id), nicIPConfigs = properties.ipConfigurations) on $left.vmId == $right.nicVMId\n| join ( Resources\n| where type =~ 'microsoft.network/publicipaddresses' and isnotnull(properties.ipConfiguration.id)\n| where sku.name == 'Basic'\n| project pipId = id, pipSku = sku.name, pipAssociatedNicId = tolower(tostring(split(properties.ipConfiguration.id, '/ipConfigurations/')[0]))) on $left.allVMNicID == $right.pipAssociatedNicId\n| project vmId, pipId, pipSku",
          "source": "powershell",
          "length": 756,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])) on $left.VmId == $right.VmId\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| project-rename ['Virtual Machine ID'] = VmId, UTCTimeStamp = properties_occurredTime, ['Availability State'] = AvailabilityState",
          "source": "powershell",
          "length": 822,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = leftouter (HealthResourceChanges\n| where subscriptionId == 'mySubscriptionId'\n| where id !has '/virtualMachineScaleSets/'\n| where id has '/virtualMachines/'\n| extend timestamp = todatetime(properties.changeAttributes.timestamp)\n| extend VmId = tolower(tostring(split(id, '/providers/Microsoft.ResourceHealth/')[0]))\n| where properties has 'properties.availabilityState' or properties has 'properties.annotationName'\n| extend HealthChangeType = iff(properties has 'properties.availabilityState', 'Availability', 'Annotation')\n| extend ChangeType = tostring(properties.changeType)\n| where ChangeType == 'Update' or ChangeType == 'Delete') on $left.VmId == $right.VmId\n| extend Changes = parse_json(tostring(properties.changes))\n| extend AvailabilityStateJson = parse_json(tostring(Changes['properties.availabilityState']))\n| extend AnnotationNameJson = parse_json(tostring(Changes['properties.annotationName']))\n| extend AnnotationSummary = parse_json(tostring(Changes['properties.summary']))\n| extend AnnotationReason = parse_json(tostring(Changes['properties.reason']))\n| extend AnnotationImpactType = parse_json(tostring(Changes['properties.impactType']))\n| extend AnnotationContext = parse_json(tostring(Changes['properties.context']))\n| extend AnnotationCategory = parse_json(tostring(Changes['properties.category']))\n| extend AvailabilityStatePreviousValue = tostring(AvailabilityStateJson.previousValue)\n| extend AvailabilityStateCurrentValue = tostring(AvailabilityStateJson.newValue)\n| extend AnnotationNamePreviousValue = tostring(AnnotationNameJson.previousValue)\n| extend AnnotationNameCurrentValue = tostring(AnnotationNameJson.newValue)\n| extend AnnotationSummaryCurrentValue = tostring(AnnotationSummary.newValue)\n| extend AnnotationReasonCurrentValue = tostring(AnnotationReason.newValue)\n| extend AnnotationImpactTypeCurrentValue = tostring(AnnotationImpactType.newValue)\n| extend AnnotationContextCurrentValue = tostring(AnnotationContext.newValue)\n| extend AnnotationCategoryCurrentValue = tostring(AnnotationCategory.newValue)\n| project id = VmId, timestamp, ChangeType, AvailabilityStateCurrentValue, AnnotationNameCurrentValue, AnnotationSummaryCurrentValue, AnnotationReasonCurrentValue, AnnotationImpactTypeCurrentValue, AnnotationContextCurrentValue, AnnotationCategoryCurrentValue, Changes\n| order by id, timestamp asc\n| project-rename ['Virtual Machine ID'] = id, UTCTimeStamp = timestamp, ['Change Type'] = ChangeType, ['Availability State'] = AvailabilityStateCurrentValue, ['Summary'] = AnnotationSummaryCurrentValue, ['Reason'] = AnnotationReasonCurrentValue, ['Impact Type'] = AnnotationImpactTypeCurrentValue, Category = AnnotationCategoryCurrentValue, Context = AnnotationContextCurrentValue",
          "source": "powershell",
          "length": 2978,
          "startsWithTable": true
        }
      ],
      "description": "\nThe default table if a table isn't defined in the query. Most Resource Manager resource types and properties are here",
      "resourceTypes": [
        "aka.ms/yourcaliforniaprivacychoices"
      ]
    },
    "securityresources": {
      "name": "securityresources",
      "examples": [
        {
          "code": "SecurityResources\n| where type =~ 'microsoft.security/iotalerts' and properties.systemAlertId contains '{system_Alert_Id}'",
          "source": "kql",
          "length": 122,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type =~ 'microsoft.security/iotalerts' and id contains '{hub_id}' and properties.alertType contains '{alert_type}'",
          "source": "kql",
          "length": 140,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/pricings'\n| project Subscription= subscriptionId, Azure_Defender_plan= name, Status= properties.pricingTier",
          "source": "kql",
          "length": 161,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/insights/classification'\n| where properties.associatedResource contains '$resource_id'\n| project SensitivityInsight = properties.insightProperties.purviewCatalogs[0].sensitivity",
          "source": "kql",
          "length": 231,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores'\n| extend percentageScore=properties.score.percentage,\ncurrentScore=properties.score.current,\nmaxScore=properties.score.max,\nweight=properties.weight\n| project tenantId, subscriptionId, percentageScore, currentScore, maxScore, weight",
          "source": "kql",
          "length": 300,
          "startsWithTable": true
        },
        {
          "code": "securityresources\n| where type =~ 'microsoft.security/locations/alerts'\n| where properties.Status in ('Active')\n| where properties.Severity in ('Low', 'Medium', 'High')\n| project alert_type = tostring(properties.AlertType), SystemAlertId = tostring(properties.SystemAlertId), ResourceIdentifiers = todynamic(properties.ResourceIdentifiers)",
          "source": "kql",
          "length": 339,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/regulatorycompliancestandards'\n| extend complianceStandard=name,\nstate=properties.state,\npassedControls=properties.passedControls,\nfailedControls=properties.failedControls,\nskippedControls=properties.skippedControls,\nunsupportedControls=properties.unsupportedControls\n| project tenantId, subscriptionId, complianceStandard, state, passedControls, failedControls, skippedControls, unsupportedControls",
          "source": "kql",
          "length": 453,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments'\n| extend assessmentName=properties.description,\ncomplianceStandard=extract(@'/regulatoryComplianceStandards/(.+)/regulatoryComplianceControls',1,id),\ncomplianceControl=extract(@'/regulatoryComplianceControls/(.+)/regulatoryComplianceAssessments',1,id),\nskippedResources=properties.skippedResources,\npassedResources=properties.passedResources,\nfailedResources=properties.failedResources,\nstate=properties.state\n| project tenantId, subscriptionId, id, complianceStandard, complianceControl, assessmentName, state, skippedResources, passedResources, failedResources",
          "source": "kql",
          "length": 708,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| extend resourceId=id,\nrecommendationId=name,\nresourceType=type,\nrecommendationName=properties.displayName,\nsource=properties.resourceDetails.Source,\nrecommendationState=properties.status.code,\ndescription=properties.metadata.description,\nassessmentType=properties.metadata.assessmentType,\nremediationDescription=properties.metadata.remediationDescription,\npolicyDefinitionId=properties.metadata.policyDefinitionId,\nimplementationEffort=properties.metadata.implementationEffort,\nrecommendationSeverity=properties.metadata.severity,\ncategory=properties.metadata.categories,\nuserImpact=properties.metadata.userImpact,\nthreats=properties.metadata.threats,\nportalLink=properties.links.azurePortal\n| summarize numberOfResources=count(resourceId) by tostring(recommendationName), tostring(recommendationState)",
          "source": "kql",
          "length": 871,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores/securescorecontrols'\n| extend controlName=properties.displayName,\ncontrolId=properties.definition.name,\nnotApplicableResourceCount=properties.notApplicableResourceCount,\nunhealthyResourceCount=properties.unhealthyResourceCount,\nhealthyResourceCount=properties.healthyResourceCount,\npercentageScore=properties.score.percentage,\ncurrentScore=properties.score.current,\nmaxScore=properties.definition.properties.maxScore,\nweight=properties.weight,\ncontrolType=properties.definition.properties.source.sourceType,\ncontrolRecommendationIds=properties.definition.properties.assessmentDefinitions\n| project tenantId, subscriptionId, controlName, controlId, unhealthyResourceCount, healthyResourceCount, notApplicableResourceCount, percentageScore, currentScore, maxScore, weight, controlType, controlRecommendationIds",
          "source": "kql",
          "length": 875,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores'\n| project subscriptionId,\nsubscriptionTotal = iff(properties.score.max == 0, 0.00, round(tolong(properties.weight) * todouble(properties.score.current)/tolong(properties.score.max),2)),\nweight = tolong(iff(properties.weight == 0, 1, properties.weight))\n| join kind=leftouter (\nResourceContainers\n| where type == 'microsoft.resources/subscriptions' and properties.state == 'Enabled'\n| project subscriptionId, mgChain=properties.managementGroupAncestorsChain )\non subscriptionId\n| mv-expand mg=mgChain\n| summarize sumSubs = sum(subscriptionTotal), sumWeight = sum(weight), resultsNum = count() by tostring(mg.displayName), mgId = tostring(mg.name)\n| extend secureScore = iff(tolong(resultsNum) == 0, 404.00, round(sumSubs/sumWeight*100,2))\n| project mgName=mg_displayName, mgId, sumSubs, sumWeight, resultsNum, secureScore\n| order by mgName asc",
          "source": "kql",
          "length": 910,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where * contains 'vulnerabilities in your virtual machines'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner (\nsecurityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.',1,  id)\n) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description,\ndisplayName = properties.displayName,\nresourceId = properties.resourceDetails.id,\nresourceSource = properties.resourceDetails.source,\ncategory = properties.category,\nseverity = properties.status.severity,\ncode = properties.status.code,\ntimeGenerated = properties.timeGenerated,\nremediation = properties.remediation,\nimpact = properties.impact,\nvulnId = properties.id,\nadditionalData = properties.additionalData",
          "source": "kql",
          "length": 948,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where properties.displayName contains 'Container registry images should have vulnerability findings resolved'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner (\nsecurityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.',1,  id)\n) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description,\ndisplayName = properties.displayName,\nresourceId = properties.resourceDetails.id,\nresourceSource = properties.resourceDetails.source,\ncategory = properties.category,\nseverity = properties.status.severity,\ncode = properties.status.code,\ntimeGenerated = properties.timeGenerated,\nremediation = properties.remediation,\nimpact = properties.impact,\nvulnId = properties.id,\nadditionalData = properties.additionalData",
          "source": "kql",
          "length": 998,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| extend resourceId=id,\nrecommendationId=name,\nrecommendationName=properties.displayName,\nsource=properties.resourceDetails.Source,\nrecommendationState=properties.status.code,\ndescription=properties.metadata.description,\nassessmentType=properties.metadata.assessmentType,\nremediationDescription=properties.metadata.remediationDescription,\npolicyDefinitionId=properties.metadata.policyDefinitionId,\nimplementationEffort=properties.metadata.implementationEffort,\nrecommendationSeverity=properties.metadata.severity,\ncategory=properties.metadata.categories,\nuserImpact=properties.metadata.userImpact,\nthreats=properties.metadata.threats,\nportalLink=properties.links.azurePortal\n| project tenantId, subscriptionId, resourceId, recommendationName, recommendationId, recommendationState, recommendationSeverity, description, remediationDescription, assessmentType, policyDefinitionId, implementationEffort, userImpact, category, threats, source, portalLink",
          "source": "kql",
          "length": 1017,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/insights/classification'\n| where properties.associatedResource contains '\\$resource_id'\n| project SensitivityInsight = properties.insightProperties.purviewCatalogs[0].sensitivity",
          "source": "cli",
          "length": 232,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores'\n| project subscriptionId, subscriptionTotal = iff(properties.score.max == 0, 0.00, round(tolong(properties.weight)  todouble(properties.score.current)/tolong(properties.score.max),2)), weight = tolong(iff(properties.weight == 0, 1, properties.weight))\n| join kind=leftouter ( ResourceContainers\n| where type == 'microsoft.resources/subscriptions' and properties.state == 'Enabled'\n| project subscriptionId, mgChain=properties.managementGroupAncestorsChain ) on subscriptionId\n| mv-expand mg=mgChain\n| summarize sumSubs = sum(subscriptionTotal), sumWeight = sum(weight), resultsNum = count() by tostring(mg.displayName), mgId = tostring(mg.name)\n| extend secureScore = iff(tolong(resultsNum) == 0, 404.00, round(sumSubs/sumWeight100,2))\n| project mgName=mg_displayName, mgId, sumSubs, sumWeight, resultsNum, secureScore\n| order by mgName asc",
          "source": "cli",
          "length": 908,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where  contains 'vulnerabilities in your virtual machines'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner ( securityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.*',1, id) ) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description, displayName = properties.displayName, resourceId = properties.resourceDetails.id, resourceSource = properties.resourceDetails.source, category = properties.category, severity = properties.status.severity, code = properties.status.code, timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, vulnId = properties.id, additionalData = properties.additionalData",
          "source": "cli",
          "length": 947,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where properties.displayName contains 'Container registry images should have vulnerability findings resolved'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner ( securityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.',1, id) ) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description, displayName = properties.displayName, resourceId = properties.resourceDetails.id, resourceSource = properties.resourceDetails.source, category = properties.category, severity = properties.status.severity, code = properties.status.code, timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, vulnId = properties.id, additionalData = properties.additionalData",
          "source": "cli",
          "length": 997,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Security",
      "resourceTypes": [
        "microsoft.authorization/locks/providers/assessments/governanceassignments",
        "microsoft.authorization/roleassignments/providers/assessments/governanceassignments",
        "microsoft.security/apicollections",
        "microsoft.security/apicollections/apiendpoints",
        "microsoft.security/assessments",
        "microsoft.security/assessments/governanceassignments",
        "microsoft.security/assessments/subassessments",
        "microsoft.security/attackpaths",
        "microsoft.security/governancerules",
        "microsoft.security/healthreports",
        "microsoft.security/insights",
        "microsoft.security/integrations",
        "microsoft.security/iotalerts",
        "microsoft.security/locations/alerts",
        "microsoft.security/locations/attackpaths",
        "microsoft.security/pricings",
        "microsoft.security/regulatorycompliancestandards",
        "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols",
        "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments",
        "microsoft.security/securescores",
        "microsoft.security/securescores/securescorecontrols",
        "microsoft.security/securityconnectors/devops",
        "microsoft.security/securityconnectors/devops/azuredevopsorgs",
        "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects/repos",
        "microsoft.security/securityconnectors/devops/githubowners",
        "microsoft.security/securityconnectors/devops/githubowners/repos",
        "microsoft.security/securityconnectors/devops/gitlabgroups",
        "microsoft.security/securityconnectors/devops/gitlabgroups/projects",
        "microsoft.security/softwareinventories",
        "microsoft.security/softwareinventory",
        "microsoft.security/standardassignments"
      ]
    },
    "servicefabricresources": {
      "name": "servicefabricresources",
      "examples": [],
      "description": "Related to Microsoft.ServiceFabric",
      "resourceTypes": [
        "microsoft.servicefabric/clusters/applications",
        "microsoft.servicefabric/clusters/applications/services",
        "microsoft.servicefabric/clusters/applicationtypes",
        "microsoft.servicefabric/clusters/applicationtypes/versions",
        "microsoft.servicefabric/managedclusters",
        "microsoft.servicefabric/managedclusters/applications",
        "microsoft.servicefabric/managedclusters/applications/services",
        "microsoft.servicefabric/managedclusters/applicationtypes",
        "microsoft.servicefabric/managedclusters/applicationtypes/versions",
        "microsoft.servicefabric/managedclusters/nodetypes"
      ]
    },
    "servicehealthresources": {
      "name": "servicehealthresources",
      "examples": [
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\n| where eventType == 'ServiceIssue' and status == 'Active'",
          "source": "kql",
          "length": 433,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))\n| where eventType == 'HealthAdvisory' and impactMitigationTime > now()",
          "source": "kql",
          "length": 465,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))\n| where eventType == 'PlannedMaintenance' and impactMitigationTime > now()",
          "source": "kql",
          "length": 469,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = tostring(properties.EventType), status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\n| where eventType == 'ServiceIssue' and status == 'Active'\n| summarize count(subscriptionId) by name",
          "source": "kql",
          "length": 485,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\n| where (eventType in ('HealthAdvisory', 'SecurityAdvisory', 'PlannedMaintenance') and impactMitigationTime > now()) or (eventType == 'ServiceIssue' and status == 'Active')",
          "source": "kql",
          "length": 547,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.ResourceHealth/events",
      "resourceTypes": [
        "microsoft.resourcehealth/events",
        "microsoft.resourcehealth/events/impactedresources"
      ]
    },
    "sharedgalleryresources": {
      "name": "sharedgalleryresources",
      "resourceTypes": [
        "microsoft.compute/locations/sharedgalleries"
      ],
      "examples": []
    },
    "spotresources": {
      "name": "spotresources",
      "resourceTypes": [
        "microsoft.compute/skualternativespotvmsize/location",
        "microsoft.compute/skuspotevictionrate/location",
        "microsoft.compute/skuspotpricehistory/ostype/location"
      ],
      "examples": [],
      "description": "Related to Microsoft.Compute"
    },
    "tagsresources": {
      "name": "tagsresources",
      "resourceTypes": [
        "microsoft.resources/tagnamespaces",
        "microsoft.resources/tagnamespaces/tagnames",
        "microsoft.resources/tagnamespaces/tags"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources/tagnamespaces"
    },
    "insightresources": {
      "name": "insightresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.insights/datacollectionruleassociations",
        "microsoft.insights/tenantactiongroups"
      ]
    },
    "managedserviceresources": {
      "name": "managedserviceresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.managedservices/registrationassignments",
        "microsoft.managedservices/registrationdefinitions"
      ]
    },
    "mirgateresources": {
      "name": "mirgateresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.migrate/assessmentprojects/aksassessments",
        "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/aksassessments/clusters",
        "microsoft.migrate/assessmentprojects/aksassessments/costdetails",
        "microsoft.migrate/assessmentprojects/aksassessments/summaries",
        "microsoft.migrate/assessmentprojects/assessments",
        "microsoft.migrate/assessmentprojects/assessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/assessments/summaries",
        "microsoft.migrate/assessmentprojects/avsassessments",
        "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines",
        "microsoft.migrate/assessmentprojects/avsassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups",
        "microsoft.migrate/assessmentprojects/groups/assessments",
        "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/groups/avsassessments",
        "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups/webappassessments",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans",
        "microsoft.migrate/assessmentprojects/heterogeneousassessments",
        "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries",
        "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/mysqlassessments",
        "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances",
        "microsoft.migrate/assessmentprojects/mysqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/sqlassessments",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines",
        "microsoft.migrate/assessmentprojects/sqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/webappassessments",
        "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/webappassessments/summaries",
        "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries",
        "microsoft.migrate/migrateprojects/waves",
        "microsoft.migrate/migrateprojects/waves/workloads",
        "microsoft.offazure/hypervsites/clusters",
        "microsoft.offazure/hypervsites/hosts",
        "microsoft.offazure/hypervsites/machines",
        "microsoft.offazure/hypervsites/machines/softwareinventories",
        "microsoft.offazure/importsites/machines",
        "microsoft.offazure/mastersites/sqlsites/sqldatabases",
        "microsoft.offazure/mastersites/sqlsites/sqlservers",
        "microsoft.offazure/mastersites/webappsites/extendedmachines",
        "microsoft.offazure/mastersites/webappsites/iiswebapplications",
        "microsoft.offazure/mastersites/webappsites/iiswebservers",
        "microsoft.offazure/mastersites/webappsites/tomcatwebapplications",
        "microsoft.offazure/mastersites/webappsites/tomcatwebservers",
        "microsoft.offazure/serversites/machines",
        "microsoft.offazure/serversites/machines/softwareinventories",
        "microsoft.offazure/vmwaresites/hosts",
        "microsoft.offazure/vmwaresites/machines",
        "microsoft.offazure/vmwaresites/machines/softwareinventories",
        "microsoft.offazure/vmwaresites/vcenters",
        "microsoft.offazurespringboot/springbootsites/springbootapps",
        "microsoft.offazurespringboot/springbootsites/springbootservers"
      ]
    },
    "sportresources": {
      "name": "sportresources",
      "examples": [],
      "resourceTypes": []
    },
    "tagresources": {
      "name": "tagresources",
      "examples": [],
      "resourceTypes": [
        "microsoft.resources/tagnamespaces",
        "microsoft.resources/tagnamespaces/tagnames",
        "microsoft.resources/tagnamespaces/tags"
      ]
    }
  },
  "resourceTypes": {
    "microsoft.advisor/assessments": {
      "name": "microsoft.advisor/assessments",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/configurations": {
      "name": "microsoft.advisor/configurations",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/recommendations": {
      "name": "microsoft.advisor/recommendations",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/recommendations/suppressions": {
      "name": "microsoft.advisor/recommendations/suppressions",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/resiliencyreviews": {
      "name": "microsoft.advisor/resiliencyreviews",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/suppressions": {
      "name": "microsoft.advisor/suppressions",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/triagerecommendations": {
      "name": "microsoft.advisor/triagerecommendations",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.advisor/triageresources": {
      "name": "microsoft.advisor/triageresources",
      "table": "advisorresources",
      "properties": []
    },
    "microsoft.containerservice/fleetmemberships": {
      "name": "microsoft.containerservice/fleetmemberships",
      "table": "aksresources",
      "properties": []
    },
    "microsoft.containerservice/fleets/autoupgradeprofiles": {
      "table": "aksresources",
      "type": "microsoft.containerservice/fleets/autoupgradeprofiles"
    },
    "microsoft.containerservice/fleets/gates": {
      "name": "microsoft.containerservice/fleets/gates",
      "table": "aksresources",
      "properties": []
    },
    "microsoft.containerservice/fleets/members": {
      "table": "aksresources",
      "type": "microsoft.containerservice/fleets/members"
    },
    "microsoft.containerservice/fleets/updateruns": {
      "table": "aksresources",
      "type": "microsoft.containerservice/fleets/updateruns"
    },
    "microsoft.containerservice/fleets/updatestrategies": {
      "table": "aksresources",
      "type": "microsoft.containerservice/fleets/updatestrategies"
    },
    "microsoft.alertsmanagement/alerts": {
      "table": "alertsmanagementresources",
      "type": "microsoft.alertsmanagement/alerts"
    },
    "microsoft.web/sites/config": {
      "table": "appserviceresources",
      "type": "microsoft.web/sites/config"
    },
    "microsoft.web/sites/slots/config": {
      "table": "appserviceresources",
      "type": "microsoft.web/sites/slots/config"
    },
    "microsoft.web/sites/workflows": {
      "table": "appserviceresources",
      "type": "microsoft.web/sites/workflows"
    },
    "microsoft.authorization/classicadministrators": {
      "table": "authorizationresources",
      "type": "microsoft.authorization/classicadministrators"
    },
    "microsoft.authorization/roleassignments": {
      "table": "authorizationresources",
      "type": "microsoft.authorization/roleassignments"
    },
    "microsoft.authorization/roledefinitions": {
      "table": "authorizationresources",
      "type": "microsoft.authorization/roledefinitions"
    },
    "microsoft.awsconnector/ec2instances": {
      "table": "awsresources",
      "type": "microsoft.awsconnector/ec2instances"
    },
    "microsoft.awsconnector/eksclusters": {
      "table": "awsresources",
      "type": "microsoft.awsconnector/eksclusters"
    },
    "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems": {
      "table": "resources",
      "type": "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems"
    },
    "microsoft.azurebusinesscontinuity/unifiedprotecteditems": {
      "table": "azurebusinesscontinuityresources",
      "type": "microsoft.azurebusinesscontinuity/unifiedprotecteditems"
    },
    "microsoft.azuredevopsplatform/organizations": {
      "table": "azuredevopsplatformresources",
      "type": "microsoft.azuredevopsplatform/organizations"
    },
    "microsoft.batch/batchaccounts/pools": {
      "table": "batchresources",
      "type": "microsoft.batch/batchaccounts/pools"
    },
    "microsoft.resources/capabilities": {
      "table": "capabilityresources",
      "type": "microsoft.resources/capabilities"
    },
    "microsoft.chaos/experiments/executions": {
      "table": "chaosresources",
      "type": "microsoft.chaos/experiments/executions"
    },
    "microsoft.chaos/experiments/statuses": {
      "table": "chaosresources",
      "type": "microsoft.chaos/experiments/statuses"
    },
    "microsoft.chaos/targets": {
      "table": "chaosresources",
      "type": "microsoft.chaos/targets"
    },
    "microsoft.chaos/targets/capabilities": {
      "table": "chaosresources",
      "type": "microsoft.chaos/targets/capabilities"
    },
    "microsoft.compute/locations/communitygalleries": {
      "name": "microsoft.compute/locations/communitygalleries",
      "table": "communitygalleryresources",
      "properties": []
    },
    "microsoft.compute/locations/communitygalleries/applications": {
      "name": "microsoft.compute/locations/communitygalleries/applications",
      "table": "communitygalleryresources",
      "properties": []
    },
    "microsoft.compute/locations/communitygalleries/applications/versions": {
      "name": "microsoft.compute/locations/communitygalleries/applications/versions",
      "table": "communitygalleryresources",
      "properties": []
    },
    "microsoft.compute/locations/communitygalleries/images": {
      "name": "microsoft.compute/locations/communitygalleries/images",
      "table": "communitygalleryresources",
      "properties": []
    },
    "microsoft.compute/locations/communitygalleries/images/versions": {
      "name": "microsoft.compute/locations/communitygalleries/images/versions",
      "table": "communitygalleryresources",
      "properties": []
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines",
      "table": "computeresources",
      "properties": []
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces",
      "table": "computeresources",
      "properties": []
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/managedclusters/scheduledevents": {
      "table": "resources",
      "type": "microsoft.containerservice/managedclusters/scheduledevents"
    },
    "microsoft.resources/deploymentstacks": {
      "table": "deploymentresources",
      "type": "microsoft.resources/deploymentstacks"
    },
    "microsoft.desktopvirtualization/hostpools/sessionhosts": {
      "table": "desktopvirtualizationresources",
      "type": "microsoft.desktopvirtualization/hostpools/sessionhosts"
    },
    "microsoft.network/dnszones/a": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/a"
    },
    "microsoft.network/dnszones/aaaa": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/aaaa"
    },
    "microsoft.network/dnszones/caa": {
      "name": "microsoft.network/dnszones/caa",
      "table": "dnsresources",
      "properties": []
    },
    "microsoft.network/dnszones/cname": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/cname"
    },
    "microsoft.network/dnszones/ds": {
      "name": "microsoft.network/dnszones/ds",
      "table": "dnsresources",
      "properties": []
    },
    "microsoft.network/dnszones/mx": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/mx"
    },
    "microsoft.network/dnszones/naptr": {
      "name": "microsoft.network/dnszones/naptr",
      "table": "dnsresources",
      "properties": []
    },
    "microsoft.network/dnszones/ns": {
      "name": "microsoft.network/dnszones/ns",
      "table": "dnsresources",
      "properties": []
    },
    "microsoft.network/dnszones/ptr": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/ptr"
    },
    "microsoft.network/dnszones/soa": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/soa"
    },
    "microsoft.network/dnszones/srv": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/srv"
    },
    "microsoft.network/dnszones/tlsa": {
      "name": "microsoft.network/dnszones/tlsa",
      "table": "dnsresources",
      "properties": []
    },
    "microsoft.network/dnszones/txt": {
      "table": "dnsresources",
      "type": "microsoft.network/dnszones/txt"
    },
    "microsoft.network/privatednszones/a": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/a"
    },
    "microsoft.network/privatednszones/aaaa": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/aaaa"
    },
    "microsoft.network/privatednszones/cname": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/cname"
    },
    "microsoft.network/privatednszones/mx": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/mx"
    },
    "microsoft.network/privatednszones/ptr": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/ptr"
    },
    "microsoft.network/privatednszones/soa": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/soa"
    },
    "microsoft.network/privatednszones/srv": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/srv"
    },
    "microsoft.network/privatednszones/txt": {
      "table": "dnsresources",
      "type": "microsoft.network/privatednszones/txt"
    },
    "microsoft.edgeorder/orders": {
      "table": "edgeorderresources",
      "type": "microsoft.edgeorder/orders"
    },
    "microsoft.elasticsan/elasticsans": {
      "table": "elasticsanresources",
      "type": "microsoft.elasticsan/elasticsans"
    },
    "microsoft.elasticsan/elasticsans/volumegroups": {
      "table": "elasticsanresources",
      "type": "microsoft.elasticsan/elasticsans/volumegroups"
    },
    "microsoft.elasticsan/elasticsans/volumegroups/volumes": {
      "table": "elasticsanresources",
      "type": "microsoft.elasticsan/elasticsans/volumegroups/volumes"
    },
    "microsoft.extendedlocation/customlocations/enabledresourcetypes": {
      "table": "extendedlocationresources",
      "type": "microsoft.extendedlocation/customlocations/enabledresourcetypes"
    },
    "microsoft.resources/changes": {
      "table": "resources",
      "type": "microsoft.resources/changes"
    },
    "microsoft.features/featureprovidernamespaces/featureconfigurations": {
      "table": "resources",
      "type": "microsoft.features/featureprovidernamespaces/featureconfigurations"
    },
    "microsoft.features/featureproviders/subscriptionfeatureregistrations": {
      "table": "resources",
      "type": "microsoft.features/featureproviders/subscriptionfeatureregistrations"
    },
    "microsoft.gcpconnector/computeinstances": {
      "name": "microsoft.gcpconnector/computeinstances",
      "table": "gcpresources",
      "properties": []
    },
    "microsoft.guestconfiguration/guestconfigurationassignments": {
      "table": "guestconfigurationresources",
      "type": "microsoft.guestconfiguration/guestconfigurationassignments"
    },
    "microsoft.guestconfiguration/guestconfigurationassignments/reports": {
      "table": "guestconfigurationresources",
      "type": "microsoft.guestconfiguration/guestconfigurationassignments/reports"
    },
    "microsoft.resourcehealth/availabilitystatuses": {
      "table": "resources",
      "type": "microsoft.resourcehealth/availabilitystatuses"
    },
    "microsoft.resourcehealth/resourceannotations": {
      "table": "resources",
      "type": "microsoft.resourcehealth/resourceannotations"
    },
    "microsoft.impact/connectors": {
      "table": "impactreportresources",
      "type": "microsoft.impact/connectors"
    },
    "microsoft.impact/workloadimpacts": {
      "table": "impactreportresources",
      "type": "microsoft.impact/workloadimpacts"
    },
    "microsoft.impact/workloadimpacts/insights": {
      "table": "impactreportresources",
      "type": "microsoft.impact/workloadimpacts/insights"
    },
    "microsoft.insights/datacollectionruleassociations": {
      "table": "insightresources",
      "type": "microsoft.insights/datacollectionruleassociations"
    },
    "microsoft.insights/tenantactiongroups": {
      "table": "insightresources",
      "type": "microsoft.insights/tenantactiongroups"
    },
    "microsoft.iotfirmwaredefense/firmwaregroups/firmwares": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotfirmwaredefense/firmwaregroups/firmwares"
    },
    "microsoft.iotfirmwaredefense/workspaces/firmwares": {
      "name": "microsoft.iotfirmwaredefense/workspaces/firmwares",
      "table": "iotsecurityresources",
      "properties": []
    },
    "microsoft.iotsecurity/locations/devicegroups/alerts": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/locations/devicegroups/alerts"
    },
    "microsoft.iotsecurity/locations/devicegroups/devices": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/locations/devicegroups/devices"
    },
    "microsoft.iotsecurity/locations/devicegroups/recommendations": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/locations/devicegroups/recommendations"
    },
    "microsoft.iotsecurity/locations/devicegroups/vulnerabilities": {
      "name": "microsoft.iotsecurity/locations/devicegroups/vulnerabilities",
      "table": "iotsecurityresources",
      "properties": []
    },
    "microsoft.iotsecurity/locations/sites": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/locations/sites"
    },
    "microsoft.iotsecurity/locations/sites/sensors": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/locations/sites/sensors"
    },
    "microsoft.iotsecurity/onpremisesensors": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/onpremisesensors"
    },
    "microsoft.iotsecurity/sensors": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/sensors"
    },
    "microsoft.iotsecurity/sites": {
      "table": "iotsecurityresources",
      "type": "microsoft.iotsecurity/sites"
    },
    "microsoft.kubernetesconfiguration/extensions": {
      "table": "kubernetesconfigurationresources",
      "type": "microsoft.kubernetesconfiguration/extensions"
    },
    "microsoft.kubernetesconfiguration/fluxconfigurations": {
      "table": "kubernetesconfigurationresources",
      "type": "microsoft.kubernetesconfiguration/fluxconfigurations"
    },
    "microsoft.kubernetesconfiguration/namespaces": {
      "table": "kubernetesconfigurationresources",
      "type": "microsoft.kubernetesconfiguration/namespaces"
    },
    "microsoft.kubernetesconfiguration/sourcecontrolconfigurations": {
      "table": "kubernetesconfigurationresources",
      "type": "microsoft.kubernetesconfiguration/sourcecontrolconfigurations"
    },
    "microsoft.kusto/clusters/databases/dataconnections": {
      "table": "kustoresources",
      "type": "microsoft.kusto/clusters/databases/dataconnections"
    },
    "microsoft.offazure/hypervsites/machines/inventoryinsights": {
      "name": "microsoft.offazure/hypervsites/machines/inventoryinsights",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/hypervsites/machines/inventoryinsights/pendingupdates": {
      "name": "microsoft.offazure/hypervsites/machines/inventoryinsights/pendingupdates",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/serversites/machines/inventoryinsights": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/serversites/machines/inventoryinsights/pendingupdates": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights/pendingupdates",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/serversites/machines/inventoryinsights/software": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights/software",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/serversites/machines/inventoryinsights/vulnerabilities": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights/vulnerabilities",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/serversites/machines/pendingupdates": {
      "name": "microsoft.offazure/serversites/machines/pendingupdates",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/serversites/machines/software": {
      "name": "microsoft.offazure/serversites/machines/software",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights/pendingupdates": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights/pendingupdates",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights/software": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights/software",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights/vulnerabilities": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights/vulnerabilities",
      "table": "machinesinventoryinsightsresources",
      "properties": []
    },
    "microsoft.maintenance/applyupdates": {
      "table": "resources",
      "type": "microsoft.maintenance/applyupdates"
    },
    "microsoft.maintenance/computemrpresponse/applyupdates": {
      "name": "microsoft.maintenance/computemrpresponse/applyupdates",
      "table": "maintenanceresources",
      "properties": []
    },
    "microsoft.maintenance/configurationassignments": {
      "table": "resources",
      "type": "microsoft.maintenance/configurationassignments"
    },
    "microsoft.maintenance/maintenanceconfigurations/applyupdates": {
      "table": "resources",
      "type": "microsoft.maintenance/maintenanceconfigurations/applyupdates"
    },
    "microsoft.maintenance/updates": {
      "table": "resources",
      "type": "microsoft.maintenance/updates"
    },
    "microsoft.managedservices/registrationassignments": {
      "table": "managedserviceresources",
      "type": "microsoft.managedservices/registrationassignments"
    },
    "microsoft.managedservices/registrationdefinitions": {
      "table": "managedserviceresources",
      "type": "microsoft.managedservices/registrationdefinitions"
    },
    "microsoft.applicationmigration/discoveryhubs/applications": {
      "name": "microsoft.applicationmigration/discoveryhubs/applications",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.applicationmigration/discoveryhubs/applications/members": {
      "name": "microsoft.applicationmigration/discoveryhubs/applications/members",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.applicationmigration/pgsqlsites/agents": {
      "name": "microsoft.applicationmigration/pgsqlsites/agents",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.applicationmigration/pgsqlsites/pgsqldatabases": {
      "name": "microsoft.applicationmigration/pgsqlsites/pgsqldatabases",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.applicationmigration/pgsqlsites/pgsqlinstances": {
      "name": "microsoft.applicationmigration/pgsqlsites/pgsqlinstances",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.applicationmigration/storagesites/agents": {
      "name": "microsoft.applicationmigration/storagesites/agents",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.applicationmigration/storagesites/fileshares": {
      "name": "microsoft.applicationmigration/storagesites/fileshares",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/aksassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/aksassessments"
    },
    "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps"
    },
    "microsoft.migrate/assessmentprojects/aksassessments/clusters": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/aksassessments/clusters"
    },
    "microsoft.migrate/assessmentprojects/aksassessments/costdetails": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/aksassessments/costdetails"
    },
    "microsoft.migrate/assessmentprojects/aksassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/aksassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/applicationassessments": {
      "name": "microsoft.migrate/assessmentprojects/applicationassessments",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/applicationassessments/assessedapplications": {
      "name": "microsoft.migrate/assessmentprojects/applicationassessments/assessedapplications",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/assessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/assessments"
    },
    "microsoft.migrate/assessmentprojects/assessments/assessedmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/assessments/assessedmachines"
    },
    "microsoft.migrate/assessmentprojects/assessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/assessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/avsassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/avsassessments"
    },
    "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines"
    },
    "microsoft.migrate/assessmentprojects/avsassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/avsassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/businesscases": {
      "name": "microsoft.migrate/assessmentprojects/businesscases",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/castconnections": {
      "name": "microsoft.migrate/assessmentprojects/castconnections",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/groups": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups"
    },
    "microsoft.migrate/assessmentprojects/groups/assessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/assessments"
    },
    "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines"
    },
    "microsoft.migrate/assessmentprojects/groups/avsassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/avsassessments"
    },
    "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines"
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/sqlassessments"
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases"
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances"
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines"
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities"
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/webappassessments"
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps"
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans"
    },
    "microsoft.migrate/assessmentprojects/heterogeneousassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/heterogeneousassessments"
    },
    "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines"
    },
    "microsoft.migrate/assessmentprojects/mysqlassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/mysqlassessments"
    },
    "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances"
    },
    "microsoft.migrate/assessmentprojects/mysqlassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/mysqlassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/pgsqlassessments": {
      "name": "microsoft.migrate/assessmentprojects/pgsqlassessments",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/pgsqlassessments/assessedinstances": {
      "name": "microsoft.migrate/assessmentprojects/pgsqlassessments/assessedinstances",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/pgsqlassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/pgsqlassessments/summaries",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/sqlassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/sqlassessments"
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases"
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances"
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines"
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/sqlassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/webappassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/webappassessments"
    },
    "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps"
    },
    "microsoft.migrate/assessmentprojects/webappassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/webappassessments/summaries"
    },
    "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans"
    },
    "microsoft.migrate/assessmentprojects/webappcompoundassessments": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/webappcompoundassessments"
    },
    "microsoft.migrate/assessmentprojects/webappcompoundassessments/assessedwebapps": {
      "name": "microsoft.migrate/assessmentprojects/webappcompoundassessments/assessedwebapps",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries"
    },
    "microsoft.migrate/castscanreports": {
      "name": "microsoft.migrate/castscanreports",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/castscanreports/codescanissues": {
      "name": "microsoft.migrate/castscanreports/codescanissues",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/migrateprojects/migrationentities": {
      "name": "microsoft.migrate/migrateprojects/migrationentities",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/migrateprojects/migrationentitygroups": {
      "name": "microsoft.migrate/migrateprojects/migrationentitygroups",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/migrateprojects/tasks": {
      "name": "microsoft.migrate/migrateprojects/tasks",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.migrate/migrateprojects/waves": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/migrateprojects/waves"
    },
    "microsoft.migrate/migrateprojects/waves/workloads": {
      "table": "mirgateresources",
      "type": "microsoft.migrate/migrateprojects/waves/workloads"
    },
    "microsoft.mysqldiscovery/mysqlsites/mysqlservers": {
      "name": "microsoft.mysqldiscovery/mysqlsites/mysqlservers",
      "table": "migrateresources",
      "properties": []
    },
    "microsoft.offazure/hypervsites/clusters": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/hypervsites/clusters"
    },
    "microsoft.offazure/hypervsites/hosts": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/hypervsites/hosts"
    },
    "microsoft.offazure/hypervsites/machines": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/hypervsites/machines"
    },
    "microsoft.offazure/hypervsites/machines/softwareinventories": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/hypervsites/machines/softwareinventories"
    },
    "microsoft.offazure/importsites/machines": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/importsites/machines"
    },
    "microsoft.offazure/mastersites/sqlsites/sqldatabases": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/sqlsites/sqldatabases"
    },
    "microsoft.offazure/mastersites/sqlsites/sqlservers": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/sqlsites/sqlservers"
    },
    "microsoft.offazure/mastersites/webappsites/extendedmachines": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/webappsites/extendedmachines"
    },
    "microsoft.offazure/mastersites/webappsites/iiswebapplications": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/webappsites/iiswebapplications"
    },
    "microsoft.offazure/mastersites/webappsites/iiswebservers": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/webappsites/iiswebservers"
    },
    "microsoft.offazure/mastersites/webappsites/tomcatwebapplications": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/webappsites/tomcatwebapplications"
    },
    "microsoft.offazure/mastersites/webappsites/tomcatwebservers": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/mastersites/webappsites/tomcatwebservers"
    },
    "microsoft.offazure/serversites/machines": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/serversites/machines"
    },
    "microsoft.offazure/serversites/machines/softwareinventories": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/serversites/machines/softwareinventories"
    },
    "microsoft.offazure/vmwaresites/hosts": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/vmwaresites/hosts"
    },
    "microsoft.offazure/vmwaresites/machines": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/vmwaresites/machines"
    },
    "microsoft.offazure/vmwaresites/machines/softwareinventories": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/vmwaresites/machines/softwareinventories"
    },
    "microsoft.offazure/vmwaresites/vcenters": {
      "table": "mirgateresources",
      "type": "microsoft.offazure/vmwaresites/vcenters"
    },
    "microsoft.offazurespringboot/springbootsites/springbootapps": {
      "table": "mirgateresources",
      "type": "microsoft.offazurespringboot/springbootsites/springbootapps"
    },
    "microsoft.offazurespringboot/springbootsites/springbootservers": {
      "table": "mirgateresources",
      "type": "microsoft.offazurespringboot/springbootsites/springbootservers"
    },
    "microsoft.network/effectiveconnectivityconfigurations": {
      "table": "resources",
      "type": "microsoft.network/effectiveconnectivityconfigurations"
    },
    "microsoft.network/effectivesecurityadminrules": {
      "table": "resources",
      "type": "microsoft.network/effectivesecurityadminrules"
    },
    "microsoft.network/firewallpolicies/rulecollectiongroups": {
      "table": "resources",
      "type": "microsoft.network/firewallpolicies/rulecollectiongroups"
    },
    "microsoft.network/networkgroupmemberships": {
      "table": "resources",
      "type": "microsoft.network/networkgroupmemberships"
    },
    "microsoft.network/networkmanagerconnections": {
      "table": "resources",
      "type": "microsoft.network/networkmanagerconnections"
    },
    "microsoft.network/networkmanagers/connectivityconfigurations": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/connectivityconfigurations"
    },
    "microsoft.network/networkmanagers/connectivityconfigurations/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/connectivityconfigurations/snapshots"
    },
    "microsoft.network/networkmanagers/connectivityregionalgoalstates": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/connectivityregionalgoalstates"
    },
    "microsoft.network/networkmanagers/networkgroups": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/networkgroups"
    },
    "microsoft.network/networkmanagers/networkgroups/aggregatedipaddressspaces": {
      "name": "microsoft.network/networkmanagers/networkgroups/aggregatedipaddressspaces",
      "table": "networkresources",
      "properties": []
    },
    "microsoft.network/networkmanagers/networkgroups/members": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/networkgroups/members"
    },
    "microsoft.network/networkmanagers/networkgroups/staticmembers": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/networkgroups/staticmembers"
    },
    "microsoft.network/networkmanagers/regionalgoalstates": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/regionalgoalstates"
    },
    "microsoft.network/networkmanagers/routingconfigurations": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingconfigurations"
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingconfigurations/rulecollections"
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules"
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules/snapshots"
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingconfigurations/rulecollections/snapshots"
    },
    "microsoft.network/networkmanagers/routingconfigurations/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingconfigurations/snapshots"
    },
    "microsoft.network/networkmanagers/routingregionalgoalstates": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/routingregionalgoalstates"
    },
    "microsoft.network/networkmanagers/securityadminconfigurations": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminconfigurations"
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections"
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules"
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules/snapshots"
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/snapshots"
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminconfigurations/snapshots"
    },
    "microsoft.network/networkmanagers/securityadminregionalgoalstates": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityadminregionalgoalstates"
    },
    "microsoft.network/networkmanagers/securityuserconfigurations": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserconfigurations"
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections"
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules"
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules/snapshots"
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/snapshots"
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/snapshots": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserconfigurations/snapshots"
    },
    "microsoft.network/networkmanagers/securityuserregionalgoalstates": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/securityuserregionalgoalstates"
    },
    "microsoft.network/networkmanagers/verifierworkspaces/reachabilityanalysisintents": {
      "table": "resources",
      "type": "microsoft.network/networkmanagers/verifierworkspaces/reachabilityanalysisintents"
    },
    "microsoft.network/networksecurityperimeters/linkreferences": {
      "table": "resources",
      "type": "microsoft.network/networksecurityperimeters/linkreferences"
    },
    "microsoft.network/networksecurityperimeters/links": {
      "table": "resources",
      "type": "microsoft.network/networksecurityperimeters/links"
    },
    "microsoft.network/networksecurityperimeters/loggingconfigurations": {
      "name": "microsoft.network/networksecurityperimeters/loggingconfigurations",
      "table": "networkresources",
      "properties": []
    },
    "microsoft.network/networksecurityperimeters/profiles": {
      "table": "resources",
      "type": "microsoft.network/networksecurityperimeters/profiles"
    },
    "microsoft.network/networksecurityperimeters/profiles/accessrules": {
      "table": "resources",
      "type": "microsoft.network/networksecurityperimeters/profiles/accessrules"
    },
    "microsoft.network/networksecurityperimeters/resourceassociations": {
      "table": "resources",
      "type": "microsoft.network/networksecurityperimeters/resourceassociations"
    },
    "microsoft.network/rulecollectiongroups": {
      "table": "resources",
      "type": "microsoft.network/rulecollectiongroups"
    },
    "microsoft.network/virtualnetworks/subnets/effectiveroutingrules": {
      "table": "resources",
      "type": "microsoft.network/virtualnetworks/subnets/effectiveroutingrules"
    },
    "microsoft.network/virtualnetworks/subnets/effectivesecurityuserrules": {
      "table": "resources",
      "type": "microsoft.network/virtualnetworks/subnets/effectivesecurityuserrules"
    },
    "microsoft.orbital/spacecrafts/contacts": {
      "table": "orbitalresources",
      "type": "microsoft.orbital/spacecrafts/contacts"
    },
    "microsoft.compute/virtualmachines/patchassessmentresults": {
      "name": "microsoft.compute/virtualmachines/patchassessmentresults",
      "table": "patchassessmentresources",
      "properties": []
    },
    "microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches": {
      "name": "microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches",
      "table": "patchassessmentresources",
      "properties": []
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults",
      "table": "patchassessmentresources",
      "properties": []
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults/softwarepatches": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults/softwarepatches",
      "table": "patchassessmentresources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults": {
      "table": "patchassessmentresources",
      "type": "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults"
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults/softwarepatches": {
      "table": "patchassessmentresources",
      "type": "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults/softwarepatches"
    },
    "microsoft.hybridcompute/machines/patchassessmentresults": {
      "table": "patchassessmentresources",
      "type": "microsoft.hybridcompute/machines/patchassessmentresults"
    },
    "microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches": {
      "table": "patchassessmentresources",
      "type": "microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches"
    },
    "microsoft.compute/virtualmachines/patchinstallationresults": {
      "name": "microsoft.compute/virtualmachines/patchinstallationresults",
      "table": "patchinstallationresources",
      "properties": []
    },
    "microsoft.compute/virtualmachines/patchinstallationresults/softwarepatches": {
      "name": "microsoft.compute/virtualmachines/patchinstallationresults/softwarepatches",
      "table": "patchinstallationresources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults": {
      "table": "patchinstallationresources",
      "type": "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults"
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults/softwarepatches": {
      "table": "patchinstallationresources",
      "type": "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults/softwarepatches"
    },
    "microsoft.hybridcompute/machines/patchinstallationresults": {
      "table": "patchinstallationresources",
      "type": "microsoft.hybridcompute/machines/patchinstallationresults"
    },
    "microsoft.hybridcompute/machines/patchinstallationresults/softwarepatches": {
      "table": "patchinstallationresources",
      "type": "microsoft.hybridcompute/machines/patchinstallationresults/softwarepatches"
    },
    "microsoft.authorization/policyassignments": {
      "table": "policyresources",
      "type": "microsoft.authorization/policyassignments"
    },
    "microsoft.authorization/policydefinitions": {
      "table": "policyresources",
      "type": "microsoft.authorization/policydefinitions"
    },
    "microsoft.authorization/policydefinitions/versions": {
      "table": "policyresources",
      "type": "microsoft.authorization/policydefinitions/versions"
    },
    "microsoft.authorization/policyenrollments": {
      "table": "policyresources",
      "type": "microsoft.authorization/policyenrollments"
    },
    "microsoft.authorization/policyexemptions": {
      "table": "policyresources",
      "type": "microsoft.authorization/policyexemptions"
    },
    "microsoft.authorization/policysetdefinitions": {
      "table": "policyresources",
      "type": "microsoft.authorization/policysetdefinitions"
    },
    "microsoft.authorization/policysetdefinitions/versions": {
      "table": "policyresources",
      "type": "microsoft.authorization/policysetdefinitions/versions"
    },
    "microsoft.policyinsights/componentpolicystates": {
      "table": "policyresources",
      "type": "microsoft.policyinsights/componentpolicystates"
    },
    "microsoft.policyinsights/policymetadata": {
      "table": "policyresources",
      "type": "microsoft.policyinsights/policymetadata"
    },
    "microsoft.policyinsights/policystates": {
      "table": "policyresources",
      "type": "microsoft.policyinsights/policystates"
    },
    "microsoft.dataprotection/backupvaults/backupinstances": {
      "table": "resources",
      "type": "microsoft.dataprotection/backupvaults/backupinstances"
    },
    "microsoft.dataprotection/backupvaults/backupjobs": {
      "table": "resources",
      "type": "microsoft.dataprotection/backupvaults/backupjobs"
    },
    "microsoft.dataprotection/backupvaults/backuppolicies": {
      "table": "resources",
      "type": "microsoft.dataprotection/backupvaults/backuppolicies"
    },
    "microsoft.dataprotection/backupvaults/deletedbackupinstances": {
      "table": "resources",
      "type": "microsoft.dataprotection/backupvaults/deletedbackupinstances"
    },
    "microsoft.recoveryservices/locations/deletedvaults": {
      "table": "resources",
      "type": "microsoft.recoveryservices/locations/deletedvaults"
    },
    "microsoft.recoveryservices/locations/deletedvaults/backupfabrics/protectioncontainers/protecteditems": {
      "table": "resources",
      "type": "microsoft.recoveryservices/locations/deletedvaults/backupfabrics/protectioncontainers/protecteditems"
    },
    "microsoft.recoveryservices/vaults": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults"
    },
    "microsoft.recoveryservices/vaults/alerts": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/alerts"
    },
    "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protectableitems": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protectableitems"
    },
    "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems"
    },
    "microsoft.recoveryservices/vaults/backupjobs": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/backupjobs"
    },
    "microsoft.recoveryservices/vaults/backuppolicies": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/backuppolicies"
    },
    "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationmigrationitems": {
      "name": "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationmigrationitems",
      "table": "recoveryservicesresources",
      "properties": []
    },
    "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotectableitems": {
      "name": "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotectableitems",
      "table": "recoveryservicesresources",
      "properties": []
    },
    "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotecteditems": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotecteditems"
    },
    "microsoft.recoveryservices/vaults/replicationjobs": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/replicationjobs"
    },
    "microsoft.recoveryservices/vaults/replicationpolicies": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/replicationpolicies"
    },
    "microsoft.recoveryservices/vaults/replicationrecoveryplans": {
      "table": "resources",
      "type": "microsoft.recoveryservices/vaults/replicationrecoveryplans"
    },
    "microsoft.management/managementgroups": {
      "name": "microsoft.management/managementgroups",
      "table": "resourcecontainers",
      "properties": []
    },
    "microsoft.management/servicegroups": {
      "name": "microsoft.management/servicegroups",
      "table": "resourcecontainers",
      "properties": []
    },
    "microsoft.resources/subscriptions": {
      "name": "microsoft.resources/subscriptions",
      "table": "resourcecontainers",
      "properties": []
    },
    "microsoft.resources/subscriptions/resourcegroups": {
      "name": "microsoft.resources/subscriptions/resourcegroups",
      "table": "resourcecontainers",
      "properties": []
    },
    "admincenter": {
      "name": "admincenter",
      "table": "resources",
      "properties": []
    },
    "advancedthreatprotection.windows": {
      "name": "advancedthreatprotection.windows",
      "table": "resources",
      "properties": []
    },
    "agents": {
      "name": "agents",
      "table": "resources",
      "properties": []
    },
    "arizeai.observabilityeval/organizations": {
      "name": "arizeai.observabilityeval/organizations",
      "table": "resources",
      "properties": []
    },
    "assessmentplatform": {
      "name": "assessmentplatform",
      "table": "resources",
      "properties": []
    },
    "astronomer.astro/organizations": {
      "name": "astronomer.astro/organizations",
      "table": "resources",
      "properties": []
    },
    "azuremonitorlinuxagent": {
      "name": "azuremonitorlinuxagent",
      "table": "resources",
      "properties": []
    },
    "azuremonitorwindowsagent": {
      "name": "azuremonitorwindowsagent",
      "table": "resources",
      "properties": []
    },
    "azuresecuritylinuxagent": {
      "name": "azuresecuritylinuxagent",
      "table": "resources",
      "properties": []
    },
    "azuresecuritywindowsagent": {
      "name": "azuresecuritywindowsagent",
      "table": "resources",
      "properties": []
    },
    "changetracking-linux": {
      "name": "changetracking-linux",
      "table": "resources",
      "properties": []
    },
    "changetracking-windows": {
      "name": "changetracking-windows",
      "table": "resources",
      "properties": []
    },
    "citrix.services/xenappessentials": {
      "name": "citrix.services/xenappessentials",
      "table": "resources",
      "properties": []
    },
    "citrix.services/xendesktopessentials": {
      "name": "citrix.services/xendesktopessentials",
      "table": "resources",
      "properties": []
    },
    "commvault.contentstore/cloudaccounts": {
      "name": "commvault.contentstore/cloudaccounts",
      "table": "resources",
      "properties": []
    },
    "customscript": {
      "name": "customscript",
      "table": "resources",
      "properties": []
    },
    "customscriptextension": {
      "name": "customscriptextension",
      "table": "resources",
      "properties": []
    },
    "dell.storage/filesystems": {
      "name": "dell.storage/filesystems",
      "table": "resources",
      "properties": []
    },
    "dependencyagentlinux": {
      "name": "dependencyagentlinux",
      "table": "resources",
      "properties": []
    },
    "dependencyagentwindows": {
      "name": "dependencyagentwindows",
      "table": "resources",
      "properties": []
    },
    "dynatrace.observability/monitors": {
      "name": "dynatrace.observability/monitors",
      "table": "resources",
      "properties": []
    },
    "firstparty": {
      "name": "firstparty",
      "table": "resources",
      "properties": []
    },
    "github.enterprise/accounts": {
      "name": "github.enterprise/accounts",
      "table": "resources",
      "properties": []
    },
    "github.network/networksettings": {
      "name": "github.network/networksettings",
      "table": "resources",
      "properties": []
    },
    "hns": {
      "name": "hns",
      "table": "resources",
      "properties": []
    },
    "hybridworkerforlinux": {
      "name": "hybridworkerforlinux",
      "table": "resources",
      "properties": []
    },
    "hybridworkerforwindows": {
      "name": "hybridworkerforwindows",
      "table": "resources",
      "properties": []
    },
    "iaasantimalware": {
      "name": "iaasantimalware",
      "table": "resources",
      "properties": []
    },
    "informatica.datamanagement/organizations": {
      "name": "informatica.datamanagement/organizations",
      "table": "resources",
      "properties": []
    },
    "keyvaultforlinux": {
      "name": "keyvaultforlinux",
      "table": "resources",
      "properties": []
    },
    "keyvaultforwindows": {
      "name": "keyvaultforwindows",
      "table": "resources",
      "properties": []
    },
    "lambdatest.hyperexecute/organizations": {
      "name": "lambdatest.hyperexecute/organizations",
      "table": "resources",
      "properties": []
    },
    "liftrbasic.samplerp/organizations": {
      "name": "liftrbasic.samplerp/organizations",
      "table": "resources",
      "properties": []
    },
    "linuxagent.azuresecuritycenter": {
      "name": "linuxagent.azuresecuritycenter",
      "table": "resources",
      "properties": []
    },
    "linuxagent.sqlserver": {
      "name": "linuxagent.sqlserver",
      "table": "resources",
      "properties": []
    },
    "linuxosupdateextension": {
      "name": "linuxosupdateextension",
      "table": "resources",
      "properties": []
    },
    "linuxpatchextension": {
      "name": "linuxpatchextension",
      "table": "resources",
      "properties": []
    },
    "mde.linux": {
      "name": "mde.linux",
      "table": "resources",
      "properties": []
    },
    "mde.windows": {
      "name": "mde.windows",
      "table": "resources",
      "properties": []
    },
    "microsoft apps/connectedenvironments/certificates": {
      "name": "microsoft apps/connectedenvironments/certificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.aad/domainservices": {
      "name": "microsoft.aad/domainservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.aadiam/azureadmetrics": {
      "name": "microsoft.aadiam/azureadmetrics",
      "table": "resources",
      "properties": []
    },
    "microsoft.aadiam/privatelinkforazuread": {
      "name": "microsoft.aadiam/privatelinkforazuread",
      "table": "resources",
      "properties": []
    },
    "microsoft.aadiam/tenants": {
      "name": "microsoft.aadiam/tenants",
      "table": "resources",
      "properties": []
    },
    "microsoft.agfoodplatform/farmbeats": {
      "name": "microsoft.agfoodplatform/farmbeats",
      "table": "resources",
      "properties": []
    },
    "microsoft.agricultureplatform/agriservices": {
      "name": "microsoft.agricultureplatform/agriservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.alertsmanagement/actionrules": {
      "name": "microsoft.alertsmanagement/actionrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.alertsmanagement/prometheusrulegroups": {
      "name": "microsoft.alertsmanagement/prometheusrulegroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.alertsmanagement/smartdetectoralertrules": {
      "name": "microsoft.alertsmanagement/smartdetectoralertrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.alicespringsdataplane/e4k": {
      "name": "microsoft.alicespringsdataplane/e4k",
      "table": "resources",
      "properties": []
    },
    "microsoft.alicespringsdataplane/e4k/broker": {
      "name": "microsoft.alicespringsdataplane/e4k/broker",
      "table": "resources",
      "properties": []
    },
    "microsoft.alicespringsdataplane/e4k/broker/authentication": {
      "name": "microsoft.alicespringsdataplane/e4k/broker/authentication",
      "table": "resources",
      "properties": []
    },
    "microsoft.alicespringsdataplane/e4k/broker/listener": {
      "name": "microsoft.alicespringsdataplane/e4k/broker/listener",
      "table": "resources",
      "properties": []
    },
    "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector": {
      "name": "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector",
      "table": "resources",
      "properties": []
    },
    "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector/topicmap": {
      "name": "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector/topicmap",
      "table": "resources",
      "properties": []
    },
    "microsoft.analysisservices/servers": {
      "name": "microsoft.analysisservices/servers",
      "table": "resources",
      "properties": []
    },
    "microsoft.anybuild/clusters": {
      "name": "microsoft.anybuild/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.apicenter/catalogs": {
      "name": "microsoft.apicenter/catalogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.apicenter/services": {
      "name": "microsoft.apicenter/services",
      "table": "resources",
      "properties": []
    },
    "microsoft.apimanagement/gateways": {
      "name": "microsoft.apimanagement/gateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.apimanagement/service": {
      "name": "microsoft.apimanagement/service",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/agents": {
      "name": "microsoft.app/agents",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/appgroups": {
      "name": "microsoft.app/appgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/builders": {
      "name": "microsoft.app/builders",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/connectedenvironments": {
      "name": "microsoft.app/connectedenvironments",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/connectedenvironments/certificates": {
      "name": "microsoft.app/connectedenvironments/certificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/containerapps": {
      "name": "microsoft.app/containerapps",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/jobs": {
      "name": "microsoft.app/jobs",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/managedenvironments": {
      "name": "microsoft.app/managedenvironments",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/managedenvironments/certificates": {
      "name": "microsoft.app/managedenvironments/certificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/managedenvironments/managedcertificates": {
      "name": "microsoft.app/managedenvironments/managedcertificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/sessionpools": {
      "name": "microsoft.app/sessionpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.app/spaces": {
      "name": "microsoft.app/spaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.appassessment/migrateprojects": {
      "name": "microsoft.appassessment/migrateprojects",
      "table": "resources",
      "properties": []
    },
    "microsoft.appconfiguration/configurationstores": {
      "name": "microsoft.appconfiguration/configurationstores",
      "table": "resources",
      "properties": []
    },
    "microsoft.applicationmigration/discoveryhubs": {
      "name": "microsoft.applicationmigration/discoveryhubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.applicationmigration/pgsqlsites": {
      "name": "microsoft.applicationmigration/pgsqlsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.applicationmigration/storagesites": {
      "name": "microsoft.applicationmigration/storagesites",
      "table": "resources",
      "properties": []
    },
    "microsoft.applink/applinks": {
      "name": "microsoft.applink/applinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.applink/applinks/applinkmembers": {
      "name": "microsoft.applink/applinks/applinkmembers",
      "table": "resources",
      "properties": []
    },
    "microsoft.appplatform/spring": {
      "name": "microsoft.appplatform/spring",
      "table": "resources",
      "properties": []
    },
    "microsoft.appsecurity/policies": {
      "name": "microsoft.appsecurity/policies",
      "table": "resources",
      "properties": []
    },
    "microsoft.arcnetworking/arcnwloadbalancers": {
      "name": "microsoft.arcnetworking/arcnwloadbalancers",
      "table": "resources",
      "properties": []
    },
    "microsoft.aszlabhardware/labservers": {
      "name": "microsoft.aszlabhardware/labservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.aszlabhardware/reservations": {
      "name": "microsoft.aszlabhardware/reservations",
      "table": "resources",
      "properties": []
    },
    "microsoft.aszlabhardware/servers": {
      "name": "microsoft.aszlabhardware/servers",
      "table": "resources",
      "properties": []
    },
    "microsoft.attestation/attestationproviders": {
      "name": "microsoft.attestation/attestationproviders",
      "table": "resources",
      "properties": []
    },
    "microsoft.authorization/elevateaccessroleassignment": {
      "name": "microsoft.authorization/elevateaccessroleassignment",
      "table": "resources",
      "properties": []
    },
    "microsoft.authorization/resourcemanagementprivatelinks": {
      "name": "microsoft.authorization/resourcemanagementprivatelinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.automanage/accounts": {
      "name": "microsoft.automanage/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.automanage/configurationprofilepreferences": {
      "name": "microsoft.automanage/configurationprofilepreferences",
      "table": "resources",
      "properties": []
    },
    "microsoft.automanage/configurationprofiles": {
      "name": "microsoft.automanage/configurationprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.automanage/configurationprofiles/versions": {
      "name": "microsoft.automanage/configurationprofiles/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.automanage/patchjobconfigurations": {
      "name": "microsoft.automanage/patchjobconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.automanage/patchtiers": {
      "name": "microsoft.automanage/patchtiers",
      "table": "resources",
      "properties": []
    },
    "microsoft.automation/automationaccounts": {
      "name": "microsoft.automation/automationaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.automation/automationaccounts/configurations": {
      "name": "microsoft.automation/automationaccounts/configurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.automation/automationaccounts/runbooks": {
      "name": "microsoft.automation/automationaccounts/runbooks",
      "table": "resources",
      "properties": []
    },
    "microsoft.autonomousdevelopmentplatform/accounts": {
      "name": "microsoft.autonomousdevelopmentplatform/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.autonomousdevelopmentplatform/workspaces": {
      "name": "microsoft.autonomousdevelopmentplatform/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.autonomoussystems/workspaces": {
      "name": "microsoft.autonomoussystems/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.avs/privateclouds": {
      "name": "microsoft.avs/privateclouds",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/accessanalyzeranalyzers": {
      "name": "microsoft.awsconnector/accessanalyzeranalyzers",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/acmcertificatesummaries": {
      "name": "microsoft.awsconnector/acmcertificatesummaries",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/apigatewayrestapis": {
      "name": "microsoft.awsconnector/apigatewayrestapis",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/apigatewaystages": {
      "name": "microsoft.awsconnector/apigatewaystages",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/appsyncgraphqlapis": {
      "name": "microsoft.awsconnector/appsyncgraphqlapis",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/autoscalingautoscalinggroups": {
      "name": "microsoft.awsconnector/autoscalingautoscalinggroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/cloudformationstacks": {
      "name": "microsoft.awsconnector/cloudformationstacks",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/cloudformationstacksets": {
      "name": "microsoft.awsconnector/cloudformationstacksets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/cloudfrontdistributions": {
      "name": "microsoft.awsconnector/cloudfrontdistributions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/cloudtrailtrails": {
      "name": "microsoft.awsconnector/cloudtrailtrails",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/cloudwatchalarms": {
      "name": "microsoft.awsconnector/cloudwatchalarms",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/codebuildprojects": {
      "name": "microsoft.awsconnector/codebuildprojects",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/codebuildsourcecredentialsinfos": {
      "name": "microsoft.awsconnector/codebuildsourcecredentialsinfos",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/configserviceconfigurationrecorders": {
      "name": "microsoft.awsconnector/configserviceconfigurationrecorders",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/configserviceconfigurationrecorderstatuses": {
      "name": "microsoft.awsconnector/configserviceconfigurationrecorderstatuses",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/configservicedeliverychannels": {
      "name": "microsoft.awsconnector/configservicedeliverychannels",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/databasemigrationservicereplicationinstances": {
      "name": "microsoft.awsconnector/databasemigrationservicereplicationinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/daxclusters": {
      "name": "microsoft.awsconnector/daxclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/dynamodbcontinuousbackupsdescriptions": {
      "name": "microsoft.awsconnector/dynamodbcontinuousbackupsdescriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/dynamodbtables": {
      "name": "microsoft.awsconnector/dynamodbtables",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2accountattributes": {
      "name": "microsoft.awsconnector/ec2accountattributes",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2addresses": {
      "name": "microsoft.awsconnector/ec2addresses",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2flowlogs": {
      "name": "microsoft.awsconnector/ec2flowlogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2images": {
      "name": "microsoft.awsconnector/ec2images",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2instancestatuses": {
      "name": "microsoft.awsconnector/ec2instancestatuses",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2ipams": {
      "name": "microsoft.awsconnector/ec2ipams",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2keypairs": {
      "name": "microsoft.awsconnector/ec2keypairs",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2networkacls": {
      "name": "microsoft.awsconnector/ec2networkacls",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2networkinterfaces": {
      "name": "microsoft.awsconnector/ec2networkinterfaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2routetables": {
      "name": "microsoft.awsconnector/ec2routetables",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2securitygroups": {
      "name": "microsoft.awsconnector/ec2securitygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2snapshots": {
      "name": "microsoft.awsconnector/ec2snapshots",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2subnets": {
      "name": "microsoft.awsconnector/ec2subnets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2volumes": {
      "name": "microsoft.awsconnector/ec2volumes",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2vpcendpoints": {
      "name": "microsoft.awsconnector/ec2vpcendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2vpcpeeringconnections": {
      "name": "microsoft.awsconnector/ec2vpcpeeringconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ec2vpcs": {
      "name": "microsoft.awsconnector/ec2vpcs",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ecrimagedetails": {
      "name": "microsoft.awsconnector/ecrimagedetails",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ecrrepositories": {
      "name": "microsoft.awsconnector/ecrrepositories",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ecsclusters": {
      "name": "microsoft.awsconnector/ecsclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ecsservices": {
      "name": "microsoft.awsconnector/ecsservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ecstaskdefinitions": {
      "name": "microsoft.awsconnector/ecstaskdefinitions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/efsfilesystems": {
      "name": "microsoft.awsconnector/efsfilesystems",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/efsmounttargets": {
      "name": "microsoft.awsconnector/efsmounttargets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/eksnodegroups": {
      "name": "microsoft.awsconnector/eksnodegroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticbeanstalkapplications": {
      "name": "microsoft.awsconnector/elasticbeanstalkapplications",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticbeanstalkconfigurationtemplates": {
      "name": "microsoft.awsconnector/elasticbeanstalkconfigurationtemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticbeanstalkenvironments": {
      "name": "microsoft.awsconnector/elasticbeanstalkenvironments",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticloadbalancingv2listeners": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2listeners",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticloadbalancingv2loadbalancers": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2loadbalancers",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticloadbalancingv2targetgroups": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2targetgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/elasticloadbalancingv2targethealthdescriptions": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2targethealthdescriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/emrclusters": {
      "name": "microsoft.awsconnector/emrclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/guarddutydetectors": {
      "name": "microsoft.awsconnector/guarddutydetectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iamaccesskeylastuseds": {
      "name": "microsoft.awsconnector/iamaccesskeylastuseds",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iamaccesskeymetadata": {
      "name": "microsoft.awsconnector/iamaccesskeymetadata",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iamgroups": {
      "name": "microsoft.awsconnector/iamgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iaminstanceprofiles": {
      "name": "microsoft.awsconnector/iaminstanceprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iammfadevices": {
      "name": "microsoft.awsconnector/iammfadevices",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iampasswordpolicies": {
      "name": "microsoft.awsconnector/iampasswordpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iampolicyversions": {
      "name": "microsoft.awsconnector/iampolicyversions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iamroles": {
      "name": "microsoft.awsconnector/iamroles",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iamservercertificates": {
      "name": "microsoft.awsconnector/iamservercertificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/iamvirtualmfadevices": {
      "name": "microsoft.awsconnector/iamvirtualmfadevices",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/kmsaliases": {
      "name": "microsoft.awsconnector/kmsaliases",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/kmskeys": {
      "name": "microsoft.awsconnector/kmskeys",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/lambdafunctioncodelocations": {
      "name": "microsoft.awsconnector/lambdafunctioncodelocations",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/lambdafunctionconfigurations": {
      "name": "microsoft.awsconnector/lambdafunctionconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/lambdafunctions": {
      "name": "microsoft.awsconnector/lambdafunctions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/lightsailbuckets": {
      "name": "microsoft.awsconnector/lightsailbuckets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/lightsailinstances": {
      "name": "microsoft.awsconnector/lightsailinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/logsloggroups": {
      "name": "microsoft.awsconnector/logsloggroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/logslogstreams": {
      "name": "microsoft.awsconnector/logslogstreams",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/logsmetricfilters": {
      "name": "microsoft.awsconnector/logsmetricfilters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/logssubscriptionfilters": {
      "name": "microsoft.awsconnector/logssubscriptionfilters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/macie2jobsummaries": {
      "name": "microsoft.awsconnector/macie2jobsummaries",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/macieallowlists": {
      "name": "microsoft.awsconnector/macieallowlists",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/networkfirewallfirewallpolicies": {
      "name": "microsoft.awsconnector/networkfirewallfirewallpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/networkfirewallfirewalls": {
      "name": "microsoft.awsconnector/networkfirewallfirewalls",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/networkfirewallrulegroups": {
      "name": "microsoft.awsconnector/networkfirewallrulegroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/opensearchdomainstatuses": {
      "name": "microsoft.awsconnector/opensearchdomainstatuses",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/organizationsaccounts": {
      "name": "microsoft.awsconnector/organizationsaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/organizationsorganizations": {
      "name": "microsoft.awsconnector/organizationsorganizations",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/rdsdbclusters": {
      "name": "microsoft.awsconnector/rdsdbclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/rdsdbinstances": {
      "name": "microsoft.awsconnector/rdsdbinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/rdsdbsnapshotattributesresults": {
      "name": "microsoft.awsconnector/rdsdbsnapshotattributesresults",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/rdsdbsnapshots": {
      "name": "microsoft.awsconnector/rdsdbsnapshots",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/rdseventsubscriptions": {
      "name": "microsoft.awsconnector/rdseventsubscriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/rdsexporttasks": {
      "name": "microsoft.awsconnector/rdsexporttasks",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/redshiftclusterparametergroups": {
      "name": "microsoft.awsconnector/redshiftclusterparametergroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/redshiftclusters": {
      "name": "microsoft.awsconnector/redshiftclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/route53domainsdomainsummaries": {
      "name": "microsoft.awsconnector/route53domainsdomainsummaries",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/route53hostedzones": {
      "name": "microsoft.awsconnector/route53hostedzones",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/route53resourcerecordsets": {
      "name": "microsoft.awsconnector/route53resourcerecordsets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/s3accesscontrolpolicies": {
      "name": "microsoft.awsconnector/s3accesscontrolpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/s3accesspoints": {
      "name": "microsoft.awsconnector/s3accesspoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/s3bucketpolicies": {
      "name": "microsoft.awsconnector/s3bucketpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/s3buckets": {
      "name": "microsoft.awsconnector/s3buckets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/sagemakerapps": {
      "name": "microsoft.awsconnector/sagemakerapps",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/sagemakernotebookinstancesummaries": {
      "name": "microsoft.awsconnector/sagemakernotebookinstancesummaries",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/secretsmanagerresourcepolicies": {
      "name": "microsoft.awsconnector/secretsmanagerresourcepolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/secretsmanagersecrets": {
      "name": "microsoft.awsconnector/secretsmanagersecrets",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/snssubscriptions": {
      "name": "microsoft.awsconnector/snssubscriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/snstopics": {
      "name": "microsoft.awsconnector/snstopics",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/sqsqueues": {
      "name": "microsoft.awsconnector/sqsqueues",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ssminstanceinformations": {
      "name": "microsoft.awsconnector/ssminstanceinformations",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ssmparameters": {
      "name": "microsoft.awsconnector/ssmparameters",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/ssmresourcecompliancesummaryitems": {
      "name": "microsoft.awsconnector/ssmresourcecompliancesummaryitems",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/wafv2loggingconfigurations": {
      "name": "microsoft.awsconnector/wafv2loggingconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.awsconnector/wafwebaclsummaries": {
      "name": "microsoft.awsconnector/wafwebaclsummaries",
      "table": "resources",
      "properties": []
    },
    "microsoft.azureactivedirectory/b2cdirectories": {
      "name": "microsoft.azureactivedirectory/b2cdirectories",
      "table": "resources",
      "properties": []
    },
    "microsoft.azureactivedirectory/ciamdirectories": {
      "name": "microsoft.azureactivedirectory/ciamdirectories",
      "table": "resources",
      "properties": []
    },
    "microsoft.azureactivedirectory/guestusages": {
      "name": "microsoft.azureactivedirectory/guestusages",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/datacontrollers": {
      "name": "microsoft.azurearcdata/datacontrollers",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/postgresinstances": {
      "name": "microsoft.azurearcdata/postgresinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/sqlmanagedinstances": {
      "name": "microsoft.azurearcdata/sqlmanagedinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/sqlserveresulicenses": {
      "name": "microsoft.azurearcdata/sqlserveresulicenses",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/sqlserverinstances": {
      "name": "microsoft.azurearcdata/sqlserverinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/sqlserverinstances/availabilitygroups": {
      "name": "microsoft.azurearcdata/sqlserverinstances/availabilitygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/sqlserverinstances/databases": {
      "name": "microsoft.azurearcdata/sqlserverinstances/databases",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurearcdata/sqlserverlicenses": {
      "name": "microsoft.azurearcdata/sqlserverlicenses",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurecis/dstsserviceclientidentities": {
      "name": "microsoft.azurecis/dstsserviceclientidentities",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuredata/sqlbigdataclusters": {
      "name": "microsoft.azuredata/sqlbigdataclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuredata/sqlserverregistrations": {
      "name": "microsoft.azuredata/sqlserverregistrations",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuredatatransfer/connections": {
      "name": "microsoft.azuredatatransfer/connections",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuredatatransfer/connections/flows": {
      "name": "microsoft.azuredatatransfer/connections/flows",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuredatatransfer/pipelines": {
      "name": "microsoft.azuredatatransfer/pipelines",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuredatatransfer/pipelines/flowprofiles": {
      "name": "microsoft.azuredatatransfer/pipelines/flowprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurefleet/fleets": {
      "name": "microsoft.azurefleet/fleets",
      "table": "resources",
      "properties": []
    },
    "microsoft.azureimagetestingforlinux/jobs": {
      "name": "microsoft.azureimagetestingforlinux/jobs",
      "table": "resources",
      "properties": []
    },
    "microsoft.azureimagetestingforlinux/jobtemplates": {
      "name": "microsoft.azureimagetestingforlinux/jobtemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurelargeinstance/azurelargeinstances": {
      "name": "microsoft.azurelargeinstance/azurelargeinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurelargeinstance/azurelargestorageinstances": {
      "name": "microsoft.azurelargeinstance/azurelargestorageinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurepercept/accounts": {
      "name": "microsoft.azurepercept/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.azureplaywrightservice/accounts": {
      "name": "microsoft.azureplaywrightservice/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurescan/scanningaccounts": {
      "name": "microsoft.azurescan/scanningaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuresphere/catalogs": {
      "name": "microsoft.azuresphere/catalogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.azuresphere/catalogs/products": {
      "name": "microsoft.azuresphere/catalogs/products",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestack/linkedsubscriptions": {
      "name": "microsoft.azurestack/linkedsubscriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestack/registrations": {
      "name": "microsoft.azurestack/registrations",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/clusters": {
      "name": "microsoft.azurestackhci/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/devicepools": {
      "name": "microsoft.azurestackhci/devicepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/edgemachines": {
      "name": "microsoft.azurestackhci/edgemachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/edgenodepools": {
      "name": "microsoft.azurestackhci/edgenodepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/galleryimages": {
      "name": "microsoft.azurestackhci/galleryimages",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/logicalnetworks": {
      "name": "microsoft.azurestackhci/logicalnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/marketplacegalleryimages": {
      "name": "microsoft.azurestackhci/marketplacegalleryimages",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/networkinterfaces": {
      "name": "microsoft.azurestackhci/networkinterfaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/networksecuritygroups": {
      "name": "microsoft.azurestackhci/networksecuritygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/storagecontainers": {
      "name": "microsoft.azurestackhci/storagecontainers",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/virtualharddisks": {
      "name": "microsoft.azurestackhci/virtualharddisks",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/virtualmachines": {
      "name": "microsoft.azurestackhci/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/virtualmachines/extensions": {
      "name": "microsoft.azurestackhci/virtualmachines/extensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.azurestackhci/virtualnetworks": {
      "name": "microsoft.azurestackhci/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.backupsolutions/vmwareapplications": {
      "name": "microsoft.backupsolutions/vmwareapplications",
      "table": "resources",
      "properties": []
    },
    "microsoft.bakeryhybrid/pies": {
      "name": "microsoft.bakeryhybrid/pies",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetal/baremetalconnections": {
      "name": "microsoft.baremetal/baremetalconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetal/consoleconnections": {
      "name": "microsoft.baremetal/consoleconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetal/crayservers": {
      "name": "microsoft.baremetal/crayservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetal/monitoringservers": {
      "name": "microsoft.baremetal/monitoringservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetal/peeringsettings": {
      "name": "microsoft.baremetal/peeringsettings",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetalinfrastructure/baremetalinstances": {
      "name": "microsoft.baremetalinfrastructure/baremetalinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.baremetalinfrastructure/baremetalstorageinstances": {
      "name": "microsoft.baremetalinfrastructure/baremetalstorageinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.batch/batchaccounts": {
      "name": "microsoft.batch/batchaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.billingbenefits/credits": {
      "name": "microsoft.billingbenefits/credits",
      "table": "resources",
      "properties": []
    },
    "microsoft.billingbenefits/discounts": {
      "name": "microsoft.billingbenefits/discounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.billingbenefits/incentiveschedules": {
      "name": "microsoft.billingbenefits/incentiveschedules",
      "table": "resources",
      "properties": []
    },
    "microsoft.billingbenefits/maccs": {
      "name": "microsoft.billingbenefits/maccs",
      "table": "resources",
      "properties": []
    },
    "microsoft.bing/accounts": {
      "name": "microsoft.bing/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.biztalkservices/biztalk": {
      "name": "microsoft.biztalkservices/biztalk",
      "table": "resources",
      "properties": []
    },
    "microsoft.bluefin/instances": {
      "name": "microsoft.bluefin/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.bluefin/instances/datasets": {
      "name": "microsoft.bluefin/instances/datasets",
      "table": "resources",
      "properties": []
    },
    "microsoft.bluefin/instances/pipelines": {
      "name": "microsoft.bluefin/instances/pipelines",
      "table": "resources",
      "properties": []
    },
    "microsoft.botservice/botservices": {
      "name": "microsoft.botservice/botservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.cache/redis": {
      "name": "microsoft.cache/redis",
      "table": "resources",
      "properties": []
    },
    "microsoft.cache/redisenterprise": {
      "name": "microsoft.cache/redisenterprise",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/cdnwebapplicationfirewallpolicies": {
      "name": "microsoft.cdn/cdnwebapplicationfirewallpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/edgeactions": {
      "name": "microsoft.cdn/edgeactions",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/edgeactions/attachments": {
      "name": "microsoft.cdn/edgeactions/attachments",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/edgeactions/executionfilters": {
      "name": "microsoft.cdn/edgeactions/executionfilters",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/edgeactions/versions": {
      "name": "microsoft.cdn/edgeactions/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/profiles": {
      "name": "microsoft.cdn/profiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/profiles/afdendpoints": {
      "name": "microsoft.cdn/profiles/afdendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.cdn/profiles/endpoints": {
      "name": "microsoft.cdn/profiles/endpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.certificateregistration/certificateorders": {
      "name": "microsoft.certificateregistration/certificateorders",
      "table": "resources",
      "properties": []
    },
    "microsoft.chaos/applications": {
      "name": "microsoft.chaos/applications",
      "table": "resources",
      "properties": []
    },
    "microsoft.chaos/experiments": {
      "name": "microsoft.chaos/experiments",
      "table": "resources",
      "properties": []
    },
    "microsoft.chaos/privateaccesses": {
      "name": "microsoft.chaos/privateaccesses",
      "table": "resources",
      "properties": []
    },
    "microsoft.chaos/resilienceprofiles": {
      "name": "microsoft.chaos/resilienceprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.classiccompute/domainnames": {
      "name": "microsoft.classiccompute/domainnames",
      "table": "resources",
      "properties": []
    },
    "microsoft.classiccompute/virtualmachines": {
      "name": "microsoft.classiccompute/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.classicnetwork/networksecuritygroups": {
      "name": "microsoft.classicnetwork/networksecuritygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.classicnetwork/reservedips": {
      "name": "microsoft.classicnetwork/reservedips",
      "table": "resources",
      "properties": []
    },
    "microsoft.classicnetwork/virtualnetworks": {
      "name": "microsoft.classicnetwork/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.classicstorage/storageaccounts": {
      "name": "microsoft.classicstorage/storageaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.cleanroom/cleanrooms": {
      "name": "microsoft.cleanroom/cleanrooms",
      "table": "resources",
      "properties": []
    },
    "microsoft.cleanroom/collaborations": {
      "name": "microsoft.cleanroom/collaborations",
      "table": "resources",
      "properties": []
    },
    "microsoft.cleanroom/consortiums": {
      "name": "microsoft.cleanroom/consortiums",
      "table": "resources",
      "properties": []
    },
    "microsoft.cleanroom/microservices": {
      "name": "microsoft.cleanroom/microservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.clouddeviceplatform/delegatedidentities": {
      "name": "microsoft.clouddeviceplatform/delegatedidentities",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudes/accounts": {
      "name": "microsoft.cloudes/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudhealth/healthmodels": {
      "name": "microsoft.cloudhealth/healthmodels",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudtest/accounts": {
      "name": "microsoft.cloudtest/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudtest/buildcaches": {
      "name": "microsoft.cloudtest/buildcaches",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudtest/hostedpools": {
      "name": "microsoft.cloudtest/hostedpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudtest/images": {
      "name": "microsoft.cloudtest/images",
      "table": "resources",
      "properties": []
    },
    "microsoft.cloudtest/pools": {
      "name": "microsoft.cloudtest/pools",
      "table": "resources",
      "properties": []
    },
    "microsoft.clusterstor/nodes": {
      "name": "microsoft.clusterstor/nodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.codesigning/codesigningaccounts": {
      "name": "microsoft.codesigning/codesigningaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.codespaces/plans": {
      "name": "microsoft.codespaces/plans",
      "table": "resources",
      "properties": []
    },
    "microsoft.cognition/syntheticsaccounts": {
      "name": "microsoft.cognition/syntheticsaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.cognitivesearch/indexes": {
      "name": "microsoft.cognitivesearch/indexes",
      "table": "resources",
      "properties": []
    },
    "microsoft.cognitiveservices/accounts": {
      "name": "microsoft.cognitiveservices/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.cognitiveservices/accounts/projects": {
      "name": "microsoft.cognitiveservices/accounts/projects",
      "table": "resources",
      "properties": []
    },
    "microsoft.cognitiveservices/commitmentplans": {
      "name": "microsoft.cognitiveservices/commitmentplans",
      "table": "resources",
      "properties": []
    },
    "microsoft.community/communitytrainings": {
      "name": "microsoft.community/communitytrainings",
      "table": "resources",
      "properties": []
    },
    "microsoft.compositesolutions/compositesolutiondefinitions": {
      "name": "microsoft.compositesolutions/compositesolutiondefinitions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compositesolutions/compositesolutions": {
      "name": "microsoft.compositesolutions/compositesolutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/availabilitysets": {
      "name": "microsoft.compute/availabilitysets",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/capacityreservationgroups": {
      "name": "microsoft.compute/capacityreservationgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/capacityreservationgroups/capacityreservations": {
      "name": "microsoft.compute/capacityreservationgroups/capacityreservations",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/cloudservices": {
      "name": "microsoft.compute/cloudservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/cloudservices/roleinstances/networkinterfaces": {
      "name": "microsoft.compute/cloudservices/roleinstances/networkinterfaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/cloudservices/roleinstances/networkinterfaces/ipconfigurations/publicipaddresses": {
      "name": "microsoft.compute/cloudservices/roleinstances/networkinterfaces/ipconfigurations/publicipaddresses",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/diskaccesses": {
      "name": "microsoft.compute/diskaccesses",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/diskencryptionsets": {
      "name": "microsoft.compute/diskencryptionsets",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/disks": {
      "name": "microsoft.compute/disks",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries": {
      "name": "microsoft.compute/galleries",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/applications": {
      "name": "microsoft.compute/galleries/applications",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/applications/versions": {
      "name": "microsoft.compute/galleries/applications/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/images": {
      "name": "microsoft.compute/galleries/images",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/images/versions": {
      "name": "microsoft.compute/galleries/images/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/invmaccesscontrolprofiles": {
      "name": "microsoft.compute/galleries/invmaccesscontrolprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/invmaccesscontrolprofiles/versions": {
      "name": "microsoft.compute/galleries/invmaccesscontrolprofiles/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/remotecontainerimages": {
      "name": "microsoft.compute/galleries/remotecontainerimages",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/scripts": {
      "name": "microsoft.compute/galleries/scripts",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/scripts/versions": {
      "name": "microsoft.compute/galleries/scripts/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/galleries/serviceartifacts": {
      "name": "microsoft.compute/galleries/serviceartifacts",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/hostgroups": {
      "name": "microsoft.compute/hostgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/hostgroups/hosts": {
      "name": "microsoft.compute/hostgroups/hosts",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/images": {
      "name": "microsoft.compute/images",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/proximityplacementgroups": {
      "name": "microsoft.compute/proximityplacementgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/restorepointcollections": {
      "name": "microsoft.compute/restorepointcollections",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/sharedvmextensions": {
      "name": "microsoft.compute/sharedvmextensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/sharedvmextensions/versions": {
      "name": "microsoft.compute/sharedvmextensions/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/sharedvmimages": {
      "name": "microsoft.compute/sharedvmimages",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/sharedvmimages/versions": {
      "name": "microsoft.compute/sharedvmimages/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/snapshots": {
      "name": "microsoft.compute/snapshots",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/sshpublickeys": {
      "name": "microsoft.compute/sshpublickeys",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/swiftlets": {
      "name": "microsoft.compute/swiftlets",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/virtualmachines": {
      "name": "microsoft.compute/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/virtualmachines/extensions": {
      "name": "microsoft.compute/virtualmachines/extensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/virtualmachines/runcommands": {
      "name": "microsoft.compute/virtualmachines/runcommands",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/virtualmachines/vmapplications": {
      "name": "microsoft.compute/virtualmachines/vmapplications",
      "table": "resources",
      "properties": []
    },
    "microsoft.compute/virtualmachinescalesets": {
      "name": "microsoft.compute/virtualmachinescalesets",
      "table": "resources",
      "properties": []
    },
    "microsoft.computeschedule/autoactions": {
      "name": "microsoft.computeschedule/autoactions",
      "table": "resources",
      "properties": []
    },
    "microsoft.computeschedule/scheduledactions": {
      "name": "microsoft.computeschedule/scheduledactions",
      "table": "resources",
      "properties": []
    },
    "microsoft.confidentialledger/ledgers": {
      "name": "microsoft.confidentialledger/ledgers",
      "table": "resources",
      "properties": []
    },
    "microsoft.confidentialledger/managedccfs": {
      "name": "microsoft.confidentialledger/managedccfs",
      "table": "resources",
      "properties": []
    },
    "microsoft.confluent/organizations": {
      "name": "microsoft.confluent/organizations",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcache/cachenodes": {
      "name": "microsoft.connectedcache/cachenodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcache/enterprisecustomers": {
      "name": "microsoft.connectedcache/enterprisecustomers",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcache/enterprisemcccustomers": {
      "name": "microsoft.connectedcache/enterprisemcccustomers",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcache/enterprisemcccustomers/enterprisemcccachenodes": {
      "name": "microsoft.connectedcache/enterprisemcccustomers/enterprisemcccachenodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcache/ispcustomers": {
      "name": "microsoft.connectedcache/ispcustomers",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcache/ispcustomers/ispcachenodes": {
      "name": "microsoft.connectedcache/ispcustomers/ispcachenodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedcredentials/credentials": {
      "name": "microsoft.connectedcredentials/credentials",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedopenstack/heatstacks": {
      "name": "microsoft.connectedopenstack/heatstacks",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedopenstack/openstackidentities": {
      "name": "microsoft.connectedopenstack/openstackidentities",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvehicle/platformaccounts": {
      "name": "microsoft.connectedvehicle/platformaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/clusters": {
      "name": "microsoft.connectedvmwarevsphere/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/datastores": {
      "name": "microsoft.connectedvmwarevsphere/datastores",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/hosts": {
      "name": "microsoft.connectedvmwarevsphere/hosts",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/resourcepools": {
      "name": "microsoft.connectedvmwarevsphere/resourcepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/vcenters": {
      "name": "microsoft.connectedvmwarevsphere/vcenters",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/virtualmachines": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/extensions": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines/extensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/virtualmachinetemplates": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachinetemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.connectedvmwarevsphere/virtualnetworks": {
      "name": "microsoft.connectedvmwarevsphere/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerinstance/containergroupprofiles": {
      "name": "microsoft.containerinstance/containergroupprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerinstance/containergroups": {
      "name": "microsoft.containerinstance/containergroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerinstance/containerscalesets": {
      "name": "microsoft.containerinstance/containerscalesets",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerinstance/ngroups": {
      "name": "microsoft.containerinstance/ngroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries": {
      "name": "microsoft.containerregistry/registries",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries/agentpools": {
      "name": "microsoft.containerregistry/registries/agentpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries/buildtasks": {
      "name": "microsoft.containerregistry/registries/buildtasks",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries/replications": {
      "name": "microsoft.containerregistry/registries/replications",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries/taskruns": {
      "name": "microsoft.containerregistry/registries/taskruns",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries/tasks": {
      "name": "microsoft.containerregistry/registries/tasks",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerregistry/registries/webhooks": {
      "name": "microsoft.containerregistry/registries/webhooks",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/containerservices": {
      "name": "microsoft.containerservice/containerservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/fleets": {
      "name": "microsoft.containerservice/fleets",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/fleets/managednamespaces": {
      "name": "microsoft.containerservice/fleets/managednamespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/managedclusters": {
      "name": "microsoft.containerservice/managedclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/managedclusters/managednamespaces": {
      "name": "microsoft.containerservice/managedclusters/managednamespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/managedclustersnapshots": {
      "name": "microsoft.containerservice/managedclustersnapshots",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerservice/snapshots": {
      "name": "microsoft.containerservice/snapshots",
      "table": "resources",
      "properties": []
    },
    "microsoft.containerstorage/pools": {
      "name": "microsoft.containerstorage/pools",
      "table": "resources",
      "properties": []
    },
    "microsoft.contoso/clusters": {
      "name": "microsoft.contoso/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.contoso/employees": {
      "name": "microsoft.contoso/employees",
      "table": "resources",
      "properties": []
    },
    "microsoft.contoso/employees/desks": {
      "name": "microsoft.contoso/employees/desks",
      "table": "resources",
      "properties": []
    },
    "microsoft.contoso/installations": {
      "name": "microsoft.contoso/installations",
      "table": "resources",
      "properties": []
    },
    "microsoft.contoso/recipes": {
      "name": "microsoft.contoso/recipes",
      "table": "resources",
      "properties": []
    },
    "microsoft.contoso/towers": {
      "name": "microsoft.contoso/towers",
      "table": "resources",
      "properties": []
    },
    "microsoft.costmanagement/connectors": {
      "name": "microsoft.costmanagement/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.customproviders/resourceproviders": {
      "name": "microsoft.customproviders/resourceproviders",
      "table": "resources",
      "properties": []
    },
    "microsoft.d365customerinsights/instances": {
      "name": "microsoft.d365customerinsights/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.dashboard/dashboards": {
      "name": "microsoft.dashboard/dashboards",
      "table": "resources",
      "properties": []
    },
    "microsoft.dashboard/grafana": {
      "name": "microsoft.dashboard/grafana",
      "table": "resources",
      "properties": []
    },
    "microsoft.dashboard/grafana/integrationfabrics": {
      "name": "microsoft.dashboard/grafana/integrationfabrics",
      "table": "resources",
      "properties": []
    },
    "microsoft.dashboard/grafana/managedprivateendpoints": {
      "name": "microsoft.dashboard/grafana/managedprivateendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.dataaccelerator/indexclusters": {
      "name": "microsoft.dataaccelerator/indexclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.databasefleetmanager/fleets": {
      "name": "microsoft.databasefleetmanager/fleets",
      "table": "resources",
      "properties": []
    },
    "microsoft.databasewatcher/watchers": {
      "name": "microsoft.databasewatcher/watchers",
      "table": "resources",
      "properties": []
    },
    "microsoft.databox/jobs": {
      "name": "microsoft.databox/jobs",
      "table": "resources",
      "properties": []
    },
    "microsoft.databoxedge/databoxedgedevices": {
      "name": "microsoft.databoxedge/databoxedgedevices",
      "table": "resources",
      "properties": []
    },
    "microsoft.databricks/accessconnectors": {
      "name": "microsoft.databricks/accessconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.databricks/workspaces": {
      "name": "microsoft.databricks/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.datacollaboration/workspaces": {
      "name": "microsoft.datacollaboration/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.datadog/monitors": {
      "name": "microsoft.datadog/monitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.datafactory/factories": {
      "name": "microsoft.datafactory/factories",
      "table": "resources",
      "properties": []
    },
    "microsoft.datalakeanalytics/accounts": {
      "name": "microsoft.datalakeanalytics/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.datalakestore/accounts": {
      "name": "microsoft.datalakestore/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.datamigration/controllers": {
      "name": "microsoft.datamigration/controllers",
      "table": "resources",
      "properties": []
    },
    "microsoft.datamigration/migrationservices": {
      "name": "microsoft.datamigration/migrationservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.datamigration/services": {
      "name": "microsoft.datamigration/services",
      "table": "resources",
      "properties": []
    },
    "microsoft.datamigration/services/projects": {
      "name": "microsoft.datamigration/services/projects",
      "table": "resources",
      "properties": []
    },
    "microsoft.datamigration/slots": {
      "name": "microsoft.datamigration/slots",
      "table": "resources",
      "properties": []
    },
    "microsoft.datamigration/sqlmigrationservices": {
      "name": "microsoft.datamigration/sqlmigrationservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.dataplatform/capacities": {
      "name": "microsoft.dataplatform/capacities",
      "table": "resources",
      "properties": []
    },
    "microsoft.dataprotection/backupvaults": {
      "name": "microsoft.dataprotection/backupvaults",
      "table": "resources",
      "properties": []
    },
    "microsoft.dataprotection/resourceguards": {
      "name": "microsoft.dataprotection/resourceguards",
      "table": "resources",
      "properties": []
    },
    "microsoft.datareplication/replicationfabrics": {
      "name": "microsoft.datareplication/replicationfabrics",
      "table": "resources",
      "properties": []
    },
    "microsoft.datareplication/replicationvaults": {
      "name": "microsoft.datareplication/replicationvaults",
      "table": "resources",
      "properties": []
    },
    "microsoft.datashare/accounts": {
      "name": "microsoft.datashare/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.dbformariadb/servers": {
      "name": "microsoft.dbformariadb/servers",
      "table": "resources",
      "properties": []
    },
    "microsoft.dbformysql/flexibleservers": {
      "name": "microsoft.dbformysql/flexibleservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.dbformysql/servers": {
      "name": "microsoft.dbformysql/servers",
      "table": "resources",
      "properties": []
    },
    "microsoft.dbforpostgresql/flexibleservers": {
      "name": "microsoft.dbforpostgresql/flexibleservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.dbforpostgresql/servergroupsv2": {
      "name": "microsoft.dbforpostgresql/servergroupsv2",
      "table": "resources",
      "properties": []
    },
    "microsoft.dbforpostgresql/servers": {
      "name": "microsoft.dbforpostgresql/servers",
      "table": "resources",
      "properties": []
    },
    "microsoft.delegatednetwork/controller": {
      "name": "microsoft.delegatednetwork/controller",
      "table": "resources",
      "properties": []
    },
    "microsoft.delegatednetwork/delegatedsubnets": {
      "name": "microsoft.delegatednetwork/delegatedsubnets",
      "table": "resources",
      "properties": []
    },
    "microsoft.delegatednetwork/orchestratorinstances": {
      "name": "microsoft.delegatednetwork/orchestratorinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.delegatednetwork/orchestrators": {
      "name": "microsoft.delegatednetwork/orchestrators",
      "table": "resources",
      "properties": []
    },
    "microsoft.dependencymap/maps": {
      "name": "microsoft.dependencymap/maps",
      "table": "resources",
      "properties": []
    },
    "microsoft.dependencymap/maps/discoverysources": {
      "name": "microsoft.dependencymap/maps/discoverysources",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/appattachpackages": {
      "name": "microsoft.desktopvirtualization/appattachpackages",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/applicationgroups": {
      "name": "microsoft.desktopvirtualization/applicationgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/connectionpolicies": {
      "name": "microsoft.desktopvirtualization/connectionpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/hostpools": {
      "name": "microsoft.desktopvirtualization/hostpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/repositoryfolders": {
      "name": "microsoft.desktopvirtualization/repositoryfolders",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/scalingplans": {
      "name": "microsoft.desktopvirtualization/scalingplans",
      "table": "resources",
      "properties": []
    },
    "microsoft.desktopvirtualization/workspaces": {
      "name": "microsoft.desktopvirtualization/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.devai/instances": {
      "name": "microsoft.devai/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.devai/instances/experiments": {
      "name": "microsoft.devai/instances/experiments",
      "table": "resources",
      "properties": []
    },
    "microsoft.devai/instances/sandboxes": {
      "name": "microsoft.devai/instances/sandboxes",
      "table": "resources",
      "properties": []
    },
    "microsoft.devai/instances/sandboxes/experiments": {
      "name": "microsoft.devai/instances/sandboxes/experiments",
      "table": "resources",
      "properties": []
    },
    "microsoft.devcenter/devcenters": {
      "name": "microsoft.devcenter/devcenters",
      "table": "resources",
      "properties": []
    },
    "microsoft.devcenter/devcenters/devboxdefinitions": {
      "name": "microsoft.devcenter/devcenters/devboxdefinitions",
      "table": "resources",
      "properties": []
    },
    "microsoft.devcenter/networkconnections": {
      "name": "microsoft.devcenter/networkconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.devcenter/plans": {
      "name": "microsoft.devcenter/plans",
      "table": "resources",
      "properties": []
    },
    "microsoft.devcenter/projects": {
      "name": "microsoft.devcenter/projects",
      "table": "resources",
      "properties": []
    },
    "microsoft.devcenter/projects/pools": {
      "name": "microsoft.devcenter/projects/pools",
      "table": "resources",
      "properties": []
    },
    "microsoft.developmentwindows365/developmentcloudpcdelegatedmsis": {
      "name": "microsoft.developmentwindows365/developmentcloudpcdelegatedmsis",
      "table": "resources",
      "properties": []
    },
    "microsoft.devhub/iacprofiles": {
      "name": "microsoft.devhub/iacprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.devhub/workflow": {
      "name": "microsoft.devhub/workflow",
      "table": "resources",
      "properties": []
    },
    "microsoft.devhub/workflows": {
      "name": "microsoft.devhub/workflows",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceonboarding/discoveryservices": {
      "name": "microsoft.deviceonboarding/discoveryservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceonboarding/discoveryservices/ownershipvoucherpublickeys": {
      "name": "microsoft.deviceonboarding/discoveryservices/ownershipvoucherpublickeys",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceonboarding/onboardingservices": {
      "name": "microsoft.deviceonboarding/onboardingservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceonboarding/onboardingservices/policies": {
      "name": "microsoft.deviceonboarding/onboardingservices/policies",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/assetendpointprofiles": {
      "name": "microsoft.deviceregistry/assetendpointprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/assets": {
      "name": "microsoft.deviceregistry/assets",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/devices": {
      "name": "microsoft.deviceregistry/devices",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/discoveredassetendpointprofiles": {
      "name": "microsoft.deviceregistry/discoveredassetendpointprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/discoveredassets": {
      "name": "microsoft.deviceregistry/discoveredassets",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/namespaces": {
      "name": "microsoft.deviceregistry/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/namespaces/assets": {
      "name": "microsoft.deviceregistry/namespaces/assets",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/namespaces/credentials": {
      "name": "microsoft.deviceregistry/namespaces/credentials",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/namespaces/devices": {
      "name": "microsoft.deviceregistry/namespaces/devices",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/namespaces/discoveredassets": {
      "name": "microsoft.deviceregistry/namespaces/discoveredassets",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/namespaces/discovereddevices": {
      "name": "microsoft.deviceregistry/namespaces/discovereddevices",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceregistry/schemaregistries": {
      "name": "microsoft.deviceregistry/schemaregistries",
      "table": "resources",
      "properties": []
    },
    "microsoft.devices/iothubs": {
      "name": "microsoft.devices/iothubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.devices/provisioningservices": {
      "name": "microsoft.devices/provisioningservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/accounts": {
      "name": "microsoft.deviceupdate/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/accounts/agents": {
      "name": "microsoft.deviceupdate/accounts/agents",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/accounts/instances": {
      "name": "microsoft.deviceupdate/accounts/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/updateaccounts": {
      "name": "microsoft.deviceupdate/updateaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/updateaccounts/activedeployments": {
      "name": "microsoft.deviceupdate/updateaccounts/activedeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/updateaccounts/agents": {
      "name": "microsoft.deviceupdate/updateaccounts/agents",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/updateaccounts/deployments": {
      "name": "microsoft.deviceupdate/updateaccounts/deployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/updateaccounts/deviceclasses": {
      "name": "microsoft.deviceupdate/updateaccounts/deviceclasses",
      "table": "resources",
      "properties": []
    },
    "microsoft.deviceupdate/updateaccounts/updates": {
      "name": "microsoft.deviceupdate/updateaccounts/updates",
      "table": "resources",
      "properties": []
    },
    "microsoft.devops/pipelines": {
      "name": "microsoft.devops/pipelines",
      "table": "resources",
      "properties": []
    },
    "microsoft.devopsinfrastructure/pools": {
      "name": "microsoft.devopsinfrastructure/pools",
      "table": "resources",
      "properties": []
    },
    "microsoft.devtestlab/labcenters": {
      "name": "microsoft.devtestlab/labcenters",
      "table": "resources",
      "properties": []
    },
    "microsoft.devtestlab/labs": {
      "name": "microsoft.devtestlab/labs",
      "table": "resources",
      "properties": []
    },
    "microsoft.devtestlab/labs/servicerunners": {
      "name": "microsoft.devtestlab/labs/servicerunners",
      "table": "resources",
      "properties": []
    },
    "microsoft.devtestlab/labs/virtualmachines": {
      "name": "microsoft.devtestlab/labs/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.devtestlab/schedules": {
      "name": "microsoft.devtestlab/schedules",
      "table": "resources",
      "properties": []
    },
    "microsoft.devtunnels/tunnelplans": {
      "name": "microsoft.devtunnels/tunnelplans",
      "table": "resources",
      "properties": []
    },
    "microsoft.digitaltwins/digitaltwinsinstances": {
      "name": "microsoft.digitaltwins/digitaltwinsinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/agents": {
      "name": "microsoft.discovery/agents",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/bookshelves": {
      "name": "microsoft.discovery/bookshelves",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/datacontainers": {
      "name": "microsoft.discovery/datacontainers",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/datacontainers/dataassets": {
      "name": "microsoft.discovery/datacontainers/dataassets",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/models": {
      "name": "microsoft.discovery/models",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/storages": {
      "name": "microsoft.discovery/storages",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/supercomputers": {
      "name": "microsoft.discovery/supercomputers",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/supercomputers/nodepools": {
      "name": "microsoft.discovery/supercomputers/nodepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/tools": {
      "name": "microsoft.discovery/tools",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/workflows": {
      "name": "microsoft.discovery/workflows",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/workspaces": {
      "name": "microsoft.discovery/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.discovery/workspaces/projects": {
      "name": "microsoft.discovery/workspaces/projects",
      "table": "resources",
      "properties": []
    },
    "microsoft.dns/dnszones/cname": {
      "name": "microsoft.dns/dnszones/cname",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/cassandraclusters": {
      "name": "microsoft.documentdb/cassandraclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/databaseaccounts": {
      "name": "microsoft.documentdb/databaseaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/fleets": {
      "name": "microsoft.documentdb/fleets",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/garnetclusters": {
      "name": "microsoft.documentdb/garnetclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/managedresources": {
      "name": "microsoft.documentdb/managedresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/mongoclusters": {
      "name": "microsoft.documentdb/mongoclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.documentdb/throughputpools": {
      "name": "microsoft.documentdb/throughputpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.domainregistration/domains": {
      "name": "microsoft.domainregistration/domains",
      "table": "resources",
      "properties": []
    },
    "microsoft.durabletask/namespaces": {
      "name": "microsoft.durabletask/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.durabletask/schedulers": {
      "name": "microsoft.durabletask/schedulers",
      "table": "resources",
      "properties": []
    },
    "microsoft.dynamics365fraudprotection/instances": {
      "name": "microsoft.dynamics365fraudprotection/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.easm/workspaces": {
      "name": "microsoft.easm/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/capabilitylists": {
      "name": "microsoft.edge/capabilitylists",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/configtemplates": {
      "name": "microsoft.edge/configtemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/configurations": {
      "name": "microsoft.edge/configurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/contexts": {
      "name": "microsoft.edge/contexts",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/deploymenttargets": {
      "name": "microsoft.edge/deploymenttargets",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/diagnostics": {
      "name": "microsoft.edge/diagnostics",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/disconnectedoperations": {
      "name": "microsoft.edge/disconnectedoperations",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/hierarchylists": {
      "name": "microsoft.edge/hierarchylists",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/schemas": {
      "name": "microsoft.edge/schemas",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/solutionbindings": {
      "name": "microsoft.edge/solutionbindings",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/solutions": {
      "name": "microsoft.edge/solutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/solutiontemplates": {
      "name": "microsoft.edge/solutiontemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/targets": {
      "name": "microsoft.edge/targets",
      "table": "resources",
      "properties": []
    },
    "microsoft.edge/winfields": {
      "name": "microsoft.edge/winfields",
      "table": "resources",
      "properties": []
    },
    "microsoft.edgeorder/addresses": {
      "name": "microsoft.edgeorder/addresses",
      "table": "resources",
      "properties": []
    },
    "microsoft.edgeorder/bootstrapconfigurations": {
      "name": "microsoft.edgeorder/bootstrapconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.edgeorder/orderitems": {
      "name": "microsoft.edgeorder/orderitems",
      "table": "resources",
      "properties": []
    },
    "microsoft.edgezones/edgezones": {
      "name": "microsoft.edgezones/edgezones",
      "table": "resources",
      "properties": []
    },
    "microsoft.elastic/monitors": {
      "name": "microsoft.elastic/monitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.energydataplatform/energyservices": {
      "name": "microsoft.energydataplatform/energyservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.enterprisesupport/enterprisesupports": {
      "name": "microsoft.enterprisesupport/enterprisesupports",
      "table": "resources",
      "properties": []
    },
    "microsoft.entraidgovernance/guestgovernanceusage": {
      "name": "microsoft.entraidgovernance/guestgovernanceusage",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/domains": {
      "name": "microsoft.eventgrid/domains",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/namespaces": {
      "name": "microsoft.eventgrid/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/partnerconfigurations": {
      "name": "microsoft.eventgrid/partnerconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/partnerdestinations": {
      "name": "microsoft.eventgrid/partnerdestinations",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/partnernamespaces": {
      "name": "microsoft.eventgrid/partnernamespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/partnerregistrations": {
      "name": "microsoft.eventgrid/partnerregistrations",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/partnertopics": {
      "name": "microsoft.eventgrid/partnertopics",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/systemtopics": {
      "name": "microsoft.eventgrid/systemtopics",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventgrid/topics": {
      "name": "microsoft.eventgrid/topics",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventhub/clusters": {
      "name": "microsoft.eventhub/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.eventhub/namespaces": {
      "name": "microsoft.eventhub/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.experimentation/experimentworkspaces": {
      "name": "microsoft.experimentation/experimentworkspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.extendedlocation/customlocations": {
      "name": "microsoft.extendedlocation/customlocations",
      "table": "resources",
      "properties": []
    },
    "microsoft.extendedlocation/customlocations/resourcesyncrules": {
      "name": "microsoft.extendedlocation/customlocations/resourcesyncrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.fabric/capacities": {
      "name": "microsoft.fabric/capacities",
      "table": "resources",
      "properties": []
    },
    "microsoft.fabric/privatelinkservicesforfabric": {
      "name": "microsoft.fabric/privatelinkservicesforfabric",
      "table": "resources",
      "properties": []
    },
    "microsoft.fairfieldgardens/provisioningresources": {
      "name": "microsoft.fairfieldgardens/provisioningresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.fairfieldgardens/provisioningresources/provisioningpolicies": {
      "name": "microsoft.fairfieldgardens/provisioningresources/provisioningpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.falcon/namespaces": {
      "name": "microsoft.falcon/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.fidalgo/projects/pools": {
      "name": "microsoft.fidalgo/projects/pools",
      "table": "resources",
      "properties": []
    },
    "microsoft.fileshares/fileshares": {
      "name": "microsoft.fileshares/fileshares",
      "table": "resources",
      "properties": []
    },
    "microsoft.fluidrelay/fluidrelayservers": {
      "name": "microsoft.fluidrelay/fluidrelayservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.footprintmonitoring/profiles": {
      "name": "microsoft.footprintmonitoring/profiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.gaming/titles": {
      "name": "microsoft.gaming/titles",
      "table": "resources",
      "properties": []
    },
    "microsoft.gcpconnector/cloudfunctions": {
      "name": "microsoft.gcpconnector/cloudfunctions",
      "table": "resources",
      "properties": []
    },
    "microsoft.gcpconnector/storagebuckets": {
      "name": "microsoft.gcpconnector/storagebuckets",
      "table": "resources",
      "properties": []
    },
    "microsoft.graph/azureadapplication": {
      "name": "microsoft.graph/azureadapplication",
      "table": "resources",
      "properties": []
    },
    "microsoft.graphservices/accounts": {
      "name": "microsoft.graphservices/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.hanaonazure/hanainstances": {
      "name": "microsoft.hanaonazure/hanainstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.hanaonazure/sapmonitors": {
      "name": "microsoft.hanaonazure/sapmonitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.hardware/orders": {
      "name": "microsoft.hardware/orders",
      "table": "resources",
      "properties": []
    },
    "microsoft.hardwaresecuritymodules/cloudhsmclusters": {
      "name": "microsoft.hardwaresecuritymodules/cloudhsmclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.hardwaresecuritymodules/dedicatedhsms": {
      "name": "microsoft.hardwaresecuritymodules/dedicatedhsms",
      "table": "resources",
      "properties": []
    },
    "microsoft.hdinsight/clusterpools": {
      "name": "microsoft.hdinsight/clusterpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.hdinsight/clusterpools/clusters": {
      "name": "microsoft.hdinsight/clusterpools/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.hdinsight/clusters": {
      "name": "microsoft.hdinsight/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthbot/healthbots": {
      "name": "microsoft.healthbot/healthbots",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/services": {
      "name": "microsoft.healthcareapis/services",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/services/privateendpointconnections": {
      "name": "microsoft.healthcareapis/services/privateendpointconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/workspaces": {
      "name": "microsoft.healthcareapis/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/workspaces/analyticsconnectors": {
      "name": "microsoft.healthcareapis/workspaces/analyticsconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/workspaces/dicomservices": {
      "name": "microsoft.healthcareapis/workspaces/dicomservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/workspaces/fhirservices": {
      "name": "microsoft.healthcareapis/workspaces/fhirservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareapis/workspaces/iotconnectors": {
      "name": "microsoft.healthcareapis/workspaces/iotconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/dicomconnectors": {
      "name": "microsoft.healthcareinterop/dicomconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/dicomdirectchannels": {
      "name": "microsoft.healthcareinterop/dicomdirectchannels",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/dicomedgeconnectors": {
      "name": "microsoft.healthcareinterop/dicomedgeconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/fhirqueryeventbatchchannels": {
      "name": "microsoft.healthcareinterop/fhirqueryeventbatchchannels",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/fhirqueryflatfilebatchchannels": {
      "name": "microsoft.healthcareinterop/fhirqueryflatfilebatchchannels",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/hl7connectors": {
      "name": "microsoft.healthcareinterop/hl7connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/hl7edgeconnectors": {
      "name": "microsoft.healthcareinterop/hl7edgeconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/hubs": {
      "name": "microsoft.healthcareinterop/hubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/onelakeconnectors": {
      "name": "microsoft.healthcareinterop/onelakeconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthcareinterop/storageaccountconnectors": {
      "name": "microsoft.healthcareinterop/storageaccountconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthdataaiservices/deidservices": {
      "name": "microsoft.healthdataaiservices/deidservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthmodel/healthmodels": {
      "name": "microsoft.healthmodel/healthmodels",
      "table": "resources",
      "properties": []
    },
    "microsoft.healthplatform/accounts": {
      "name": "microsoft.healthplatform/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.hpcworkbench/instances": {
      "name": "microsoft.hpcworkbench/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.hpcworkbench/instances/chambers": {
      "name": "microsoft.hpcworkbench/instances/chambers",
      "table": "resources",
      "properties": []
    },
    "microsoft.hpcworkbench/instances/chambers/accessprofiles": {
      "name": "microsoft.hpcworkbench/instances/chambers/accessprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.hpcworkbench/instances/chambers/workloads": {
      "name": "microsoft.hpcworkbench/instances/chambers/workloads",
      "table": "resources",
      "properties": []
    },
    "microsoft.hpcworkbench/instances/consortiums": {
      "name": "microsoft.hpcworkbench/instances/consortiums",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcloud/cloudconnections": {
      "name": "microsoft.hybridcloud/cloudconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcloud/cloudconnectors": {
      "name": "microsoft.hybridcloud/cloudconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/gateways": {
      "name": "microsoft.hybridcompute/gateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/licenses": {
      "name": "microsoft.hybridcompute/licenses",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/machines": {
      "name": "microsoft.hybridcompute/machines",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/machines/extensions": {
      "name": "microsoft.hybridcompute/machines/extensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/machines/licenseprofiles": {
      "name": "microsoft.hybridcompute/machines/licenseprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/machines/runcommands": {
      "name": "microsoft.hybridcompute/machines/runcommands",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcompute/privatelinkscopes": {
      "name": "microsoft.hybridcompute/privatelinkscopes",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridconnectivity/publiccloudconnectors": {
      "name": "microsoft.hybridconnectivity/publiccloudconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcontainerservice/provisionedclusters": {
      "name": "microsoft.hybridcontainerservice/provisionedclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcontainerservice/provisionedclusters/agentpools": {
      "name": "microsoft.hybridcontainerservice/provisionedclusters/agentpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcontainerservice/storagespaces": {
      "name": "microsoft.hybridcontainerservice/storagespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridcontainerservice/virtualnetworks": {
      "name": "microsoft.hybridcontainerservice/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybriddata/datamanagers": {
      "name": "microsoft.hybriddata/datamanagers",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/configurationgroupvalues": {
      "name": "microsoft.hybridnetwork/configurationgroupvalues",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/devices": {
      "name": "microsoft.hybridnetwork/devices",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/networkfunctions": {
      "name": "microsoft.hybridnetwork/networkfunctions",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers": {
      "name": "microsoft.hybridnetwork/publishers",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/artifactstores": {
      "name": "microsoft.hybridnetwork/publishers/artifactstores",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/artifactstores/artifactmanifests": {
      "name": "microsoft.hybridnetwork/publishers/artifactstores/artifactmanifests",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/configurationgroupschemas": {
      "name": "microsoft.hybridnetwork/publishers/configurationgroupschemas",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups": {
      "name": "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions": {
      "name": "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/previewsubscriptions": {
      "name": "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/previewsubscriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/networkservicedesigngroups": {
      "name": "microsoft.hybridnetwork/publishers/networkservicedesigngroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/publishers/networkservicedesigngroups/networkservicedesignversions": {
      "name": "microsoft.hybridnetwork/publishers/networkservicedesigngroups/networkservicedesignversions",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/servicemanagementcontainers": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/rolloutsequences": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/rolloutsequences",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/rollouttiers": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/rollouttiers",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/sitenetworkservices": {
      "name": "microsoft.hybridnetwork/sitenetworkservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.hybridnetwork/sites": {
      "name": "microsoft.hybridnetwork/sites",
      "table": "resources",
      "properties": []
    },
    "microsoft.ibmpower/powervirtualmachines": {
      "name": "microsoft.ibmpower/powervirtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.ibmpower/powervirtualmachines/interfaces": {
      "name": "microsoft.ibmpower/powervirtualmachines/interfaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.importexport/jobs": {
      "name": "microsoft.importexport/jobs",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/actiongroups": {
      "name": "microsoft.insights/actiongroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/activitylogalerts": {
      "name": "microsoft.insights/activitylogalerts",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/autoscalesettings": {
      "name": "microsoft.insights/autoscalesettings",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/components": {
      "name": "microsoft.insights/components",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/datacollectionendpoints": {
      "name": "microsoft.insights/datacollectionendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/datacollectionrules": {
      "name": "microsoft.insights/datacollectionrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/firstparty": {
      "name": "microsoft.insights/firstparty",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/guestdiagnosticsettings": {
      "name": "microsoft.insights/guestdiagnosticsettings",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/metricalerts": {
      "name": "microsoft.insights/metricalerts",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/notificationgroups": {
      "name": "microsoft.insights/notificationgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/notificationrules": {
      "name": "microsoft.insights/notificationrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/privatelinkscopes": {
      "name": "microsoft.insights/privatelinkscopes",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/scheduledqueryrules": {
      "name": "microsoft.insights/scheduledqueryrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/webtests": {
      "name": "microsoft.insights/webtests",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/workbooks": {
      "name": "microsoft.insights/workbooks",
      "table": "resources",
      "properties": []
    },
    "microsoft.insights/workbooktemplates": {
      "name": "microsoft.insights/workbooktemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.integrationspaces/spaces": {
      "name": "microsoft.integrationspaces/spaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.integrationspaces/spaces/applications": {
      "name": "microsoft.integrationspaces/spaces/applications",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotcentral/iotapps": {
      "name": "microsoft.iotcentral/iotapps",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotfirmwaredefense/workspaces": {
      "name": "microsoft.iotfirmwaredefense/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperations/instances": {
      "name": "microsoft.iotoperations/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsdataprocessor/instances": {
      "name": "microsoft.iotoperationsdataprocessor/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsdataprocessor/instances/datasets": {
      "name": "microsoft.iotoperationsdataprocessor/instances/datasets",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsdataprocessor/instances/pipelines": {
      "name": "microsoft.iotoperationsdataprocessor/instances/pipelines",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq": {
      "name": "microsoft.iotoperationsmq/mq",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/broker": {
      "name": "microsoft.iotoperationsmq/mq/broker",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/broker/authentication": {
      "name": "microsoft.iotoperationsmq/mq/broker/authentication",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/broker/authorization": {
      "name": "microsoft.iotoperationsmq/mq/broker/authorization",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/broker/listener": {
      "name": "microsoft.iotoperationsmq/mq/broker/listener",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/datalakeconnector": {
      "name": "microsoft.iotoperationsmq/mq/datalakeconnector",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/datalakeconnector/topicmap": {
      "name": "microsoft.iotoperationsmq/mq/datalakeconnector/topicmap",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/diagnosticservice": {
      "name": "microsoft.iotoperationsmq/mq/diagnosticservice",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/kafkaconnector": {
      "name": "microsoft.iotoperationsmq/mq/kafkaconnector",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/kafkaconnector/topicmap": {
      "name": "microsoft.iotoperationsmq/mq/kafkaconnector/topicmap",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/mqttbridgeconnector": {
      "name": "microsoft.iotoperationsmq/mq/mqttbridgeconnector",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsmq/mq/mqttbridgeconnector/topicmap": {
      "name": "microsoft.iotoperationsmq/mq/mqttbridgeconnector/topicmap",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsorchestrator/instances": {
      "name": "microsoft.iotoperationsorchestrator/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsorchestrator/solutions": {
      "name": "microsoft.iotoperationsorchestrator/solutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.iotoperationsorchestrator/targets": {
      "name": "microsoft.iotoperationsorchestrator/targets",
      "table": "resources",
      "properties": []
    },
    "microsoft.keyvault/hsmpools": {
      "name": "microsoft.keyvault/hsmpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.keyvault/managedhsms": {
      "name": "microsoft.keyvault/managedhsms",
      "table": "resources",
      "properties": []
    },
    "microsoft.keyvault/vaults": {
      "name": "microsoft.keyvault/vaults",
      "table": "resources",
      "properties": []
    },
    "microsoft.kubernetes/connectedclusters": {
      "name": "microsoft.kubernetes/connectedclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.kubernetesconfiguration/privatelinkscopes": {
      "name": "microsoft.kubernetesconfiguration/privatelinkscopes",
      "table": "resources",
      "properties": []
    },
    "microsoft.kusto/clusters": {
      "name": "microsoft.kusto/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.kx/kdbinsightsenterprise": {
      "name": "microsoft.kx/kdbinsightsenterprise",
      "table": "resources",
      "properties": []
    },
    "microsoft.labservices/labaccounts": {
      "name": "microsoft.labservices/labaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.labservices/labplans": {
      "name": "microsoft.labservices/labplans",
      "table": "resources",
      "properties": []
    },
    "microsoft.labservices/labs": {
      "name": "microsoft.labservices/labs",
      "table": "resources",
      "properties": []
    },
    "microsoft.liftrpilot/organizations": {
      "name": "microsoft.liftrpilot/organizations",
      "table": "resources",
      "properties": []
    },
    "microsoft.liftrpilot/testtrackedresources": {
      "name": "microsoft.liftrpilot/testtrackedresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.liftrpilot/testtrackedsyncresources": {
      "name": "microsoft.liftrpilot/testtrackedsyncresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.loadtestservice/loadtests": {
      "name": "microsoft.loadtestservice/loadtests",
      "table": "resources",
      "properties": []
    },
    "microsoft.loadtestservice/playwrightworkspaces": {
      "name": "microsoft.loadtestservice/playwrightworkspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.logic/businessprocesses": {
      "name": "microsoft.logic/businessprocesses",
      "table": "resources",
      "properties": []
    },
    "microsoft.logic/integrationaccounts": {
      "name": "microsoft.logic/integrationaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.logic/integrationserviceenvironments": {
      "name": "microsoft.logic/integrationserviceenvironments",
      "table": "resources",
      "properties": []
    },
    "microsoft.logic/integrationserviceenvironments/managedapis": {
      "name": "microsoft.logic/integrationserviceenvironments/managedapis",
      "table": "resources",
      "properties": []
    },
    "microsoft.logic/templates": {
      "name": "microsoft.logic/templates",
      "table": "resources",
      "properties": []
    },
    "microsoft.logic/workflows": {
      "name": "microsoft.logic/workflows",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearning/webservices": {
      "name": "microsoft.machinelearning/webservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/inferencemodels": {
      "name": "microsoft.machinelearningservices/inferencemodels",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/registries": {
      "name": "microsoft.machinelearningservices/registries",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/virtualclusters": {
      "name": "microsoft.machinelearningservices/virtualclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces": {
      "name": "microsoft.machinelearningservices/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/batchendpoints": {
      "name": "microsoft.machinelearningservices/workspaces/batchendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/batchendpoints/deployments": {
      "name": "microsoft.machinelearningservices/workspaces/batchendpoints/deployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/inferencepools": {
      "name": "microsoft.machinelearningservices/workspaces/inferencepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/inferencepools/endpoints": {
      "name": "microsoft.machinelearningservices/workspaces/inferencepools/endpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/inferencepools/groups": {
      "name": "microsoft.machinelearningservices/workspaces/inferencepools/groups",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/onlineendpoints": {
      "name": "microsoft.machinelearningservices/workspaces/onlineendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/onlineendpoints/deployments": {
      "name": "microsoft.machinelearningservices/workspaces/onlineendpoints/deployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/registries": {
      "name": "microsoft.machinelearningservices/workspaces/registries",
      "table": "resources",
      "properties": []
    },
    "microsoft.machinelearningservices/workspaces/serverlessendpoints": {
      "name": "microsoft.machinelearningservices/workspaces/serverlessendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.maintenance/maintenanceconfigurations": {
      "name": "microsoft.maintenance/maintenanceconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.maintenance/maintenancepolicies": {
      "name": "microsoft.maintenance/maintenancepolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.maintenance/orchestrationpreferences": {
      "name": "microsoft.maintenance/orchestrationpreferences",
      "table": "resources",
      "properties": []
    },
    "microsoft.managedidentity/userassignedidentities": {
      "name": "microsoft.managedidentity/userassignedidentities",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/accesscontrollists": {
      "name": "microsoft.managednetworkfabric/accesscontrollists",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/internetgatewayrules": {
      "name": "microsoft.managednetworkfabric/internetgatewayrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/internetgateways": {
      "name": "microsoft.managednetworkfabric/internetgateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/ipcommunities": {
      "name": "microsoft.managednetworkfabric/ipcommunities",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/ipcommunitylists": {
      "name": "microsoft.managednetworkfabric/ipcommunitylists",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/ipextendedcommunities": {
      "name": "microsoft.managednetworkfabric/ipextendedcommunities",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/ipprefixes": {
      "name": "microsoft.managednetworkfabric/ipprefixes",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/ipprefixlists": {
      "name": "microsoft.managednetworkfabric/ipprefixlists",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/l2isolationdomains": {
      "name": "microsoft.managednetworkfabric/l2isolationdomains",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/l3isolationdomains": {
      "name": "microsoft.managednetworkfabric/l3isolationdomains",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/neighborgroups": {
      "name": "microsoft.managednetworkfabric/neighborgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networkdevices": {
      "name": "microsoft.managednetworkfabric/networkdevices",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networkfabriccontrollers": {
      "name": "microsoft.managednetworkfabric/networkfabriccontrollers",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networkfabrics": {
      "name": "microsoft.managednetworkfabric/networkfabrics",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networkmonitors": {
      "name": "microsoft.managednetworkfabric/networkmonitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networkpacketbrokers": {
      "name": "microsoft.managednetworkfabric/networkpacketbrokers",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networkracks": {
      "name": "microsoft.managednetworkfabric/networkracks",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networktaprules": {
      "name": "microsoft.managednetworkfabric/networktaprules",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/networktaps": {
      "name": "microsoft.managednetworkfabric/networktaps",
      "table": "resources",
      "properties": []
    },
    "microsoft.managednetworkfabric/routepolicies": {
      "name": "microsoft.managednetworkfabric/routepolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.managedstorageclass/managedstorageclass": {
      "name": "microsoft.managedstorageclass/managedstorageclass",
      "table": "resources",
      "properties": []
    },
    "microsoft.manufacturingplatform/manufacturingdataservices": {
      "name": "microsoft.manufacturingplatform/manufacturingdataservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.maps/accounts": {
      "name": "microsoft.maps/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.maps/accounts/creators": {
      "name": "microsoft.maps/accounts/creators",
      "table": "resources",
      "properties": []
    },
    "microsoft.messagingcatalog/catalogs": {
      "name": "microsoft.messagingcatalog/catalogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.messagingconnectors/connectors": {
      "name": "microsoft.messagingconnectors/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.metaverse/metaverses": {
      "name": "microsoft.metaverse/metaverses",
      "table": "resources",
      "properties": []
    },
    "microsoft.migrate/assessmentprojects": {
      "name": "microsoft.migrate/assessmentprojects",
      "table": "resources",
      "properties": []
    },
    "microsoft.migrate/migrateprojects": {
      "name": "microsoft.migrate/migrateprojects",
      "table": "resources",
      "properties": []
    },
    "microsoft.migrate/modernizeprojects": {
      "name": "microsoft.migrate/modernizeprojects",
      "table": "resources",
      "properties": []
    },
    "microsoft.migrate/movecollections": {
      "name": "microsoft.migrate/movecollections",
      "table": "resources",
      "properties": []
    },
    "microsoft.migrate/projects": {
      "name": "microsoft.migrate/projects",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/catalogs": {
      "name": "microsoft.mission/catalogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/communities": {
      "name": "microsoft.mission/communities",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/communities/communityendpoints": {
      "name": "microsoft.mission/communities/communityendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/communities/transithubs": {
      "name": "microsoft.mission/communities/transithubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/enclaveconnections": {
      "name": "microsoft.mission/enclaveconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/externalconnections": {
      "name": "microsoft.mission/externalconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/internalconnections": {
      "name": "microsoft.mission/internalconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/virtualenclaves": {
      "name": "microsoft.mission/virtualenclaves",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/virtualenclaves/enclaveendpoints": {
      "name": "microsoft.mission/virtualenclaves/enclaveendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/virtualenclaves/endpoints": {
      "name": "microsoft.mission/virtualenclaves/endpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.mission/virtualenclaves/workloads": {
      "name": "microsoft.mission/virtualenclaves/workloads",
      "table": "resources",
      "properties": []
    },
    "microsoft.mixedreality/objectanchorsaccounts": {
      "name": "microsoft.mixedreality/objectanchorsaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.mixedreality/objectunderstandingaccounts": {
      "name": "microsoft.mixedreality/objectunderstandingaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.mixedreality/remoterenderingaccounts": {
      "name": "microsoft.mixedreality/remoterenderingaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.mixedreality/spatialanchorsaccounts": {
      "name": "microsoft.mixedreality/spatialanchorsaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.mixedreality/spatialmapsaccounts": {
      "name": "microsoft.mixedreality/spatialmapsaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/amfdeployments": {
      "name": "microsoft.mobilenetwork/amfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/clusterservices": {
      "name": "microsoft.mobilenetwork/clusterservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks": {
      "name": "microsoft.mobilenetwork/mobilenetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/datanetworks": {
      "name": "microsoft.mobilenetwork/mobilenetworks/datanetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/edgenetworksecuritygroups": {
      "name": "microsoft.mobilenetwork/mobilenetworks/edgenetworksecuritygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/services": {
      "name": "microsoft.mobilenetwork/mobilenetworks/services",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/simpolicies": {
      "name": "microsoft.mobilenetwork/mobilenetworks/simpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/sites": {
      "name": "microsoft.mobilenetwork/mobilenetworks/sites",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/slices": {
      "name": "microsoft.mobilenetwork/mobilenetworks/slices",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/mobilenetworks/wifissids": {
      "name": "microsoft.mobilenetwork/mobilenetworks/wifissids",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/nrfdeployments": {
      "name": "microsoft.mobilenetwork/nrfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/nssfdeployments": {
      "name": "microsoft.mobilenetwork/nssfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/observabilityservices": {
      "name": "microsoft.mobilenetwork/observabilityservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attachedwifissids": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attachedwifissids",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/edgevirtualnetworks": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/edgevirtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/radioaccessnetworks": {
      "name": "microsoft.mobilenetwork/radioaccessnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/simgroups": {
      "name": "microsoft.mobilenetwork/simgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/sims": {
      "name": "microsoft.mobilenetwork/sims",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/sims/simprofiles": {
      "name": "microsoft.mobilenetwork/sims/simprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/smfdeployments": {
      "name": "microsoft.mobilenetwork/smfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilenetwork/upfdeployments": {
      "name": "microsoft.mobilenetwork/upfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/amfdeployments": {
      "name": "microsoft.mobilepacketcore/amfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/clusterservices": {
      "name": "microsoft.mobilepacketcore/clusterservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/mobilepacketcores": {
      "name": "microsoft.mobilepacketcore/mobilepacketcores",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/networkfunctions": {
      "name": "microsoft.mobilepacketcore/networkfunctions",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/nrfdeployments": {
      "name": "microsoft.mobilepacketcore/nrfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/nssfdeployments": {
      "name": "microsoft.mobilepacketcore/nssfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/observabilityservices": {
      "name": "microsoft.mobilepacketcore/observabilityservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/smfdeployments": {
      "name": "microsoft.mobilepacketcore/smfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.mobilepacketcore/upfdeployments": {
      "name": "microsoft.mobilepacketcore/upfdeployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/instances": {
      "name": "microsoft.modsimworkbench/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/instances/chambers": {
      "name": "microsoft.modsimworkbench/instances/chambers",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/instances/chambers/connectors": {
      "name": "microsoft.modsimworkbench/instances/chambers/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/instances/chambers/workloads": {
      "name": "microsoft.modsimworkbench/instances/chambers/workloads",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/workbenches": {
      "name": "microsoft.modsimworkbench/workbenches",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/workbenches/chambers": {
      "name": "microsoft.modsimworkbench/workbenches/chambers",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/workbenches/chambers/connectors": {
      "name": "microsoft.modsimworkbench/workbenches/chambers/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/workbenches/chambers/storages": {
      "name": "microsoft.modsimworkbench/workbenches/chambers/storages",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/workbenches/chambers/workloads": {
      "name": "microsoft.modsimworkbench/workbenches/chambers/workloads",
      "table": "resources",
      "properties": []
    },
    "microsoft.modsimworkbench/workbenches/sharedstorages": {
      "name": "microsoft.modsimworkbench/workbenches/sharedstorages",
      "table": "resources",
      "properties": []
    },
    "microsoft.monitor/accounts": {
      "name": "microsoft.monitor/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.monitor/pipelinegroups": {
      "name": "microsoft.monitor/pipelinegroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.mysqldiscovery/mysqlsites": {
      "name": "microsoft.mysqldiscovery/mysqlsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/activedirectoryconfigs": {
      "name": "microsoft.netapp/activedirectoryconfigs",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts": {
      "name": "microsoft.netapp/netappaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts/backuppolicies": {
      "name": "microsoft.netapp/netappaccounts/backuppolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts/backupvaults": {
      "name": "microsoft.netapp/netappaccounts/backupvaults",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts/capacitypools": {
      "name": "microsoft.netapp/netappaccounts/capacitypools",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts/capacitypools/caches": {
      "name": "microsoft.netapp/netappaccounts/capacitypools/caches",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts/capacitypools/volumes": {
      "name": "microsoft.netapp/netappaccounts/capacitypools/volumes",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/netappaccounts/snapshotpolicies": {
      "name": "microsoft.netapp/netappaccounts/snapshotpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/scaleaccounts": {
      "name": "microsoft.netapp/scaleaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/scaleaccounts/scalecapacitypools": {
      "name": "microsoft.netapp/scaleaccounts/scalecapacitypools",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/scaleaccounts/scalecapacitypools/scalevolumes": {
      "name": "microsoft.netapp/scaleaccounts/scalecapacitypools/scalevolumes",
      "table": "resources",
      "properties": []
    },
    "microsoft.netapp/scaleaccounts/scalesnapshotpolicies": {
      "name": "microsoft.netapp/scaleaccounts/scalesnapshotpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/applicationgateways": {
      "name": "microsoft.network/applicationgateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/applicationgatewaywebapplicationfirewallpolicies": {
      "name": "microsoft.network/applicationgatewaywebapplicationfirewallpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/applicationsecuritygroups": {
      "name": "microsoft.network/applicationsecuritygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/azurefirewalls": {
      "name": "microsoft.network/azurefirewalls",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/bastionhosts": {
      "name": "microsoft.network/bastionhosts",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/connections": {
      "name": "microsoft.network/connections",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/customipprefixes": {
      "name": "microsoft.network/customipprefixes",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/ddoscustompolicies": {
      "name": "microsoft.network/ddoscustompolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/ddosprotectionplans": {
      "name": "microsoft.network/ddosprotectionplans",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsforwardingrulesets": {
      "name": "microsoft.network/dnsforwardingrulesets",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolverdomainlists": {
      "name": "microsoft.network/dnsresolverdomainlists",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolverpolicies": {
      "name": "microsoft.network/dnsresolverpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolverpolicies/dnssecurityrules": {
      "name": "microsoft.network/dnsresolverpolicies/dnssecurityrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolverpolicies/virtualnetworklinks": {
      "name": "microsoft.network/dnsresolverpolicies/virtualnetworklinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolvers": {
      "name": "microsoft.network/dnsresolvers",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolvers/inboundendpoints": {
      "name": "microsoft.network/dnsresolvers/inboundendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnsresolvers/outboundendpoints": {
      "name": "microsoft.network/dnsresolvers/outboundendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnssecuritypolicies": {
      "name": "microsoft.network/dnssecuritypolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnssecuritypolicies/virtualnetworklinks": {
      "name": "microsoft.network/dnssecuritypolicies/virtualnetworklinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnssecuritypolicydomainlists": {
      "name": "microsoft.network/dnssecuritypolicydomainlists",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dnszones": {
      "name": "microsoft.network/dnszones",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/dscpconfigurations": {
      "name": "microsoft.network/dscpconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/expressroutecircuits": {
      "name": "microsoft.network/expressroutecircuits",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/expressroutecrossconnections": {
      "name": "microsoft.network/expressroutecrossconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/expressroutegateways": {
      "name": "microsoft.network/expressroutegateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/expressrouteports": {
      "name": "microsoft.network/expressrouteports",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/firewallpolicies": {
      "name": "microsoft.network/firewallpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/firewallpolicies/rulegroups": {
      "name": "microsoft.network/firewallpolicies/rulegroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/frontdoors": {
      "name": "microsoft.network/frontdoors",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/frontdoorwebapplicationfirewallpolicies": {
      "name": "microsoft.network/frontdoorwebapplicationfirewallpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/gatewayloadbalanceraliases": {
      "name": "microsoft.network/gatewayloadbalanceraliases",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/ipallocations": {
      "name": "microsoft.network/ipallocations",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/ipgroups": {
      "name": "microsoft.network/ipgroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/loadbalancers": {
      "name": "microsoft.network/loadbalancers",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/localnetworkgateways": {
      "name": "microsoft.network/localnetworkgateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/natgateways": {
      "name": "microsoft.network/natgateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkexperimentprofiles": {
      "name": "microsoft.network/networkexperimentprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkintentpolicies": {
      "name": "microsoft.network/networkintentpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkinterfaces": {
      "name": "microsoft.network/networkinterfaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkmanagers": {
      "name": "microsoft.network/networkmanagers",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkmanagers/ipampools": {
      "name": "microsoft.network/networkmanagers/ipampools",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkmanagers/verifierworkspaces": {
      "name": "microsoft.network/networkmanagers/verifierworkspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkprofiles": {
      "name": "microsoft.network/networkprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networksecuritygroups": {
      "name": "microsoft.network/networksecuritygroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networksecurityperimeters": {
      "name": "microsoft.network/networksecurityperimeters",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkverifiers": {
      "name": "microsoft.network/networkverifiers",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkvirtualappliances": {
      "name": "microsoft.network/networkvirtualappliances",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers": {
      "name": "microsoft.network/networkwatchers",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/agents": {
      "name": "microsoft.network/networkwatchers/agents",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/connectionanalyzers": {
      "name": "microsoft.network/networkwatchers/connectionanalyzers",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/connectionmonitors": {
      "name": "microsoft.network/networkwatchers/connectionmonitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/flowlogs": {
      "name": "microsoft.network/networkwatchers/flowlogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/lenses": {
      "name": "microsoft.network/networkwatchers/lenses",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/networkwatcheragents": {
      "name": "microsoft.network/networkwatchers/networkwatcheragents",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/networkwatchers/pingmeshes": {
      "name": "microsoft.network/networkwatchers/pingmeshes",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/p2svpngateways": {
      "name": "microsoft.network/p2svpngateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/privatednszones": {
      "name": "microsoft.network/privatednszones",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/privatednszones/virtualnetworklinks": {
      "name": "microsoft.network/privatednszones/virtualnetworklinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/privateendpointredirectmaps": {
      "name": "microsoft.network/privateendpointredirectmaps",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/privateendpoints": {
      "name": "microsoft.network/privateendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/privatelinkservices": {
      "name": "microsoft.network/privatelinkservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/publicipaddresses": {
      "name": "microsoft.network/publicipaddresses",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/publicipprefixes": {
      "name": "microsoft.network/publicipprefixes",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/routefilters": {
      "name": "microsoft.network/routefilters",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/routetables": {
      "name": "microsoft.network/routetables",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/sampleresources": {
      "name": "microsoft.network/sampleresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/securitypartnerproviders": {
      "name": "microsoft.network/securitypartnerproviders",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/serviceendpointpolicies": {
      "name": "microsoft.network/serviceendpointpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/servicegateways": {
      "name": "microsoft.network/servicegateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/trafficmanagerprofiles": {
      "name": "microsoft.network/trafficmanagerprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualhubs": {
      "name": "microsoft.network/virtualhubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualhubs/bgpconnections": {
      "name": "microsoft.network/virtualhubs/bgpconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualhubs/ipconfigurations": {
      "name": "microsoft.network/virtualhubs/ipconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualnetworkappliances": {
      "name": "microsoft.network/virtualnetworkappliances",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualnetworkgateways": {
      "name": "microsoft.network/virtualnetworkgateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualnetworks": {
      "name": "microsoft.network/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualnetworktaps": {
      "name": "microsoft.network/virtualnetworktaps",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualrouters": {
      "name": "microsoft.network/virtualrouters",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/virtualwans": {
      "name": "microsoft.network/virtualwans",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/vpngateways": {
      "name": "microsoft.network/vpngateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/vpnserverconfigurations": {
      "name": "microsoft.network/vpnserverconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.network/vpnsites": {
      "name": "microsoft.network/vpnsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkanalytics/dataconnectors": {
      "name": "microsoft.networkanalytics/dataconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkanalytics/datalakehouses": {
      "name": "microsoft.networkanalytics/datalakehouses",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkanalytics/dataproducts": {
      "name": "microsoft.networkanalytics/dataproducts",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkanalytics/metricsingestionendpoints": {
      "name": "microsoft.networkanalytics/metricsingestionendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/baremetalmachines": {
      "name": "microsoft.networkcloud/baremetalmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/cloudservicesnetworks": {
      "name": "microsoft.networkcloud/cloudservicesnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/clustermanagers": {
      "name": "microsoft.networkcloud/clustermanagers",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/clusters": {
      "name": "microsoft.networkcloud/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/clusters/baremetalmachinekeysets": {
      "name": "microsoft.networkcloud/clusters/baremetalmachinekeysets",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/clusters/bmckeysets": {
      "name": "microsoft.networkcloud/clusters/bmckeysets",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/clusters/metricsconfigurations": {
      "name": "microsoft.networkcloud/clusters/metricsconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/defaultcninetworks": {
      "name": "microsoft.networkcloud/defaultcninetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/edgeclusters": {
      "name": "microsoft.networkcloud/edgeclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/edgeclusters/nodes": {
      "name": "microsoft.networkcloud/edgeclusters/nodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/hybridaksclusters": {
      "name": "microsoft.networkcloud/hybridaksclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/kubernetesclusters": {
      "name": "microsoft.networkcloud/kubernetesclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/kubernetesclusters/agentpools": {
      "name": "microsoft.networkcloud/kubernetesclusters/agentpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/kubernetesclusters/features": {
      "name": "microsoft.networkcloud/kubernetesclusters/features",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/l2networks": {
      "name": "microsoft.networkcloud/l2networks",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/l3networks": {
      "name": "microsoft.networkcloud/l3networks",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/racks": {
      "name": "microsoft.networkcloud/racks",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/registrationhubs": {
      "name": "microsoft.networkcloud/registrationhubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/registrationhubs/images": {
      "name": "microsoft.networkcloud/registrationhubs/images",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/registrationhubs/machines": {
      "name": "microsoft.networkcloud/registrationhubs/machines",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/storageappliances": {
      "name": "microsoft.networkcloud/storageappliances",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/trunkednetworks": {
      "name": "microsoft.networkcloud/trunkednetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/virtualmachines": {
      "name": "microsoft.networkcloud/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/virtualmachines/consoles": {
      "name": "microsoft.networkcloud/virtualmachines/consoles",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkcloud/volumes": {
      "name": "microsoft.networkcloud/volumes",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkfunction/azuretrafficcollectors": {
      "name": "microsoft.networkfunction/azuretrafficcollectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkfunction/azuretrafficcollectors/collectorpolicies": {
      "name": "microsoft.networkfunction/azuretrafficcollectors/collectorpolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkfunction/meshvpns": {
      "name": "microsoft.networkfunction/meshvpns",
      "table": "resources",
      "properties": []
    },
    "microsoft.networkfunction/vpnbranches": {
      "name": "microsoft.networkfunction/vpnbranches",
      "table": "resources",
      "properties": []
    },
    "microsoft.nexusidentity/identitycontrollers": {
      "name": "microsoft.nexusidentity/identitycontrollers",
      "table": "resources",
      "properties": []
    },
    "microsoft.nexusidentity/identitysets": {
      "name": "microsoft.nexusidentity/identitysets",
      "table": "resources",
      "properties": []
    },
    "microsoft.notificationhubs/namespaces": {
      "name": "microsoft.notificationhubs/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.notificationhubs/namespaces/notificationhubs": {
      "name": "microsoft.notificationhubs/namespaces/notificationhubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.nutanix/interfaces": {
      "name": "microsoft.nutanix/interfaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.nutanix/nodes": {
      "name": "microsoft.nutanix/nodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.objectstore/osnamespaces": {
      "name": "microsoft.objectstore/osnamespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazure/appliances": {
      "name": "microsoft.offazure/appliances",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazure/hypervsites": {
      "name": "microsoft.offazure/hypervsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazure/importsites": {
      "name": "microsoft.offazure/importsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazure/mastersites": {
      "name": "microsoft.offazure/mastersites",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazure/serversites": {
      "name": "microsoft.offazure/serversites",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazure/vmwaresites": {
      "name": "microsoft.offazure/vmwaresites",
      "table": "resources",
      "properties": []
    },
    "microsoft.offazurespringboot/springbootsites": {
      "name": "microsoft.offazurespringboot/springbootsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.onlineexperimentation/workspaces": {
      "name": "microsoft.onlineexperimentation/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.openenergyplatform/energyservices": {
      "name": "microsoft.openenergyplatform/energyservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.openlogisticsplatform/applicationmanagers": {
      "name": "microsoft.openlogisticsplatform/applicationmanagers",
      "table": "resources",
      "properties": []
    },
    "microsoft.openlogisticsplatform/applicationworkspaces": {
      "name": "microsoft.openlogisticsplatform/applicationworkspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.openlogisticsplatform/workspaces": {
      "name": "microsoft.openlogisticsplatform/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.operationalinsights/clusters": {
      "name": "microsoft.operationalinsights/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.operationalinsights/querypacks": {
      "name": "microsoft.operationalinsights/querypacks",
      "table": "resources",
      "properties": []
    },
    "microsoft.operationalinsights/workspaces": {
      "name": "microsoft.operationalinsights/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.operationsmanagement/solutions": {
      "name": "microsoft.operationsmanagement/solutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.operationsmanagement/views": {
      "name": "microsoft.operationsmanagement/views",
      "table": "resources",
      "properties": []
    },
    "microsoft.oraclediscovery/oraclesites": {
      "name": "microsoft.oraclediscovery/oraclesites",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/cloudaccessrouters": {
      "name": "microsoft.orbital/cloudaccessrouters",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/contactprofiles": {
      "name": "microsoft.orbital/contactprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/edgesites": {
      "name": "microsoft.orbital/edgesites",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/geocatalogs": {
      "name": "microsoft.orbital/geocatalogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/groundstations": {
      "name": "microsoft.orbital/groundstations",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/l2connections": {
      "name": "microsoft.orbital/l2connections",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/sdwancontrollers": {
      "name": "microsoft.orbital/sdwancontrollers",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/spacecrafts": {
      "name": "microsoft.orbital/spacecrafts",
      "table": "resources",
      "properties": []
    },
    "microsoft.orbital/terminals": {
      "name": "microsoft.orbital/terminals",
      "table": "resources",
      "properties": []
    },
    "microsoft.peering/peerings": {
      "name": "microsoft.peering/peerings",
      "table": "resources",
      "properties": []
    },
    "microsoft.peering/peeringservices": {
      "name": "microsoft.peering/peeringservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.pki/pkis": {
      "name": "microsoft.pki/pkis",
      "table": "resources",
      "properties": []
    },
    "microsoft.playfab/playeraccountpools": {
      "name": "microsoft.playfab/playeraccountpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.playfab/titles": {
      "name": "microsoft.playfab/titles",
      "table": "resources",
      "properties": []
    },
    "microsoft.portal/dashboards": {
      "name": "microsoft.portal/dashboards",
      "table": "resources",
      "properties": []
    },
    "microsoft.portalsdk/rootresources": {
      "name": "microsoft.portalsdk/rootresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.portalservices/dashboards": {
      "name": "microsoft.portalservices/dashboards",
      "table": "resources",
      "properties": []
    },
    "microsoft.portalservices/extensions": {
      "name": "microsoft.portalservices/extensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.portalservices/extensions/deployments": {
      "name": "microsoft.portalservices/extensions/deployments",
      "table": "resources",
      "properties": []
    },
    "microsoft.portalservices/extensions/slots": {
      "name": "microsoft.portalservices/extensions/slots",
      "table": "resources",
      "properties": []
    },
    "microsoft.portalservices/extensions/versions": {
      "name": "microsoft.portalservices/extensions/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerbi/privatelinkservicesforpowerbi": {
      "name": "microsoft.powerbi/privatelinkservicesforpowerbi",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerbi/tenants": {
      "name": "microsoft.powerbi/tenants",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerbi/workspacecollections": {
      "name": "microsoft.powerbi/workspacecollections",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerbidedicated/autoscalevcores": {
      "name": "microsoft.powerbidedicated/autoscalevcores",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerbidedicated/capacities": {
      "name": "microsoft.powerbidedicated/capacities",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerplatform/accounts": {
      "name": "microsoft.powerplatform/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.powerplatform/enterprisepolicies": {
      "name": "microsoft.powerplatform/enterprisepolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.premonition/libraries": {
      "name": "microsoft.premonition/libraries",
      "table": "resources",
      "properties": []
    },
    "microsoft.premonition/libraries/analyses": {
      "name": "microsoft.premonition/libraries/analyses",
      "table": "resources",
      "properties": []
    },
    "microsoft.premonition/libraries/samples": {
      "name": "microsoft.premonition/libraries/samples",
      "table": "resources",
      "properties": []
    },
    "microsoft.professionalservice/resources": {
      "name": "microsoft.professionalservice/resources",
      "table": "resources",
      "properties": []
    },
    "microsoft.programmableconnectivity/gateways": {
      "name": "microsoft.programmableconnectivity/gateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.programmableconnectivity/operatorapiconnections": {
      "name": "microsoft.programmableconnectivity/operatorapiconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.programmableconnectivity/operatorconnections": {
      "name": "microsoft.programmableconnectivity/operatorconnections",
      "table": "resources",
      "properties": []
    },
    "microsoft.proposal/proposals": {
      "name": "microsoft.proposal/proposals",
      "table": "resources",
      "properties": []
    },
    "microsoft.providerhub/providermonitorsettings": {
      "name": "microsoft.providerhub/providermonitorsettings",
      "table": "resources",
      "properties": []
    },
    "microsoft.purview/accounts": {
      "name": "microsoft.purview/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.quantum/provideraccounts": {
      "name": "microsoft.quantum/provideraccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.quantum/workspaces": {
      "name": "microsoft.quantum/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.recommendationsservice/accounts": {
      "name": "microsoft.recommendationsservice/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.recommendationsservice/accounts/modeling": {
      "name": "microsoft.recommendationsservice/accounts/modeling",
      "table": "resources",
      "properties": []
    },
    "microsoft.recommendationsservice/accounts/serviceendpoints": {
      "name": "microsoft.recommendationsservice/accounts/serviceendpoints",
      "table": "resources",
      "properties": []
    },
    "microsoft.redhatopenshift/hcpopenshiftclusters": {
      "name": "microsoft.redhatopenshift/hcpopenshiftclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.redhatopenshift/hcpopenshiftclusters/nodepools": {
      "name": "microsoft.redhatopenshift/hcpopenshiftclusters/nodepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.redhatopenshift/openshiftclusters": {
      "name": "microsoft.redhatopenshift/openshiftclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.relay/namespaces": {
      "name": "microsoft.relay/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.remoteapp/collections": {
      "name": "microsoft.remoteapp/collections",
      "table": "resources",
      "properties": []
    },
    "microsoft.resiliency/chaosexperiments": {
      "name": "microsoft.resiliency/chaosexperiments",
      "table": "resources",
      "properties": []
    },
    "microsoft.resourceconnector/appliances": {
      "name": "microsoft.resourceconnector/appliances",
      "table": "resources",
      "properties": []
    },
    "microsoft.resourcegraph/queries": {
      "name": "microsoft.resourcegraph/queries",
      "table": "resources",
      "properties": []
    },
    "microsoft.resources/deploymentscripts": {
      "name": "microsoft.resources/deploymentscripts",
      "table": "resources",
      "properties": []
    },
    "microsoft.resources/mobobrokers": {
      "name": "microsoft.resources/mobobrokers",
      "table": "resources",
      "properties": []
    },
    "microsoft.resources/templatespecs": {
      "name": "microsoft.resources/templatespecs",
      "table": "resources",
      "properties": []
    },
    "microsoft.resources/templatespecs/versions": {
      "name": "microsoft.resources/templatespecs/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.saas/applications": {
      "name": "microsoft.saas/applications",
      "table": "resources",
      "properties": []
    },
    "microsoft.saas/resources": {
      "name": "microsoft.saas/resources",
      "table": "resources",
      "properties": []
    },
    "microsoft.saashub/cloudservices": {
      "name": "microsoft.saashub/cloudservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.scom/managedinstances": {
      "name": "microsoft.scom/managedinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/availabilitysets": {
      "name": "microsoft.scvmm/availabilitysets",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/clouds": {
      "name": "microsoft.scvmm/clouds",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/virtualmachines": {
      "name": "microsoft.scvmm/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/virtualmachines/extensions": {
      "name": "microsoft.scvmm/virtualmachines/extensions",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/virtualmachinetemplates": {
      "name": "microsoft.scvmm/virtualmachinetemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/virtualnetworks": {
      "name": "microsoft.scvmm/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.scvmm/vmmservers": {
      "name": "microsoft.scvmm/vmmservers",
      "table": "resources",
      "properties": []
    },
    "microsoft.search/searchservices": {
      "name": "microsoft.search/searchservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.secretmanagementsampleprovider/forecasts": {
      "name": "microsoft.secretmanagementsampleprovider/forecasts",
      "table": "resources",
      "properties": []
    },
    "microsoft.secretsynccontroller/azurekeyvaultsecretproviderclasses": {
      "name": "microsoft.secretsynccontroller/azurekeyvaultsecretproviderclasses",
      "table": "resources",
      "properties": []
    },
    "microsoft.secretsynccontroller/secretsyncs": {
      "name": "microsoft.secretsynccontroller/secretsyncs",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/assignments": {
      "name": "microsoft.security/assignments",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/automations": {
      "name": "microsoft.security/automations",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/customassessmentautomations": {
      "name": "microsoft.security/customassessmentautomations",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/customentitystoreassignments": {
      "name": "microsoft.security/customentitystoreassignments",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/datascanners": {
      "name": "microsoft.security/datascanners",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/iotsecuritysolutions": {
      "name": "microsoft.security/iotsecuritysolutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/privatelinks": {
      "name": "microsoft.security/privatelinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/securityconnectors": {
      "name": "microsoft.security/securityconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/standards": {
      "name": "microsoft.security/standards",
      "table": "resources",
      "properties": []
    },
    "microsoft.security/vmscanners": {
      "name": "microsoft.security/vmscanners",
      "table": "resources",
      "properties": []
    },
    "microsoft.securitycopilot/capacities": {
      "name": "microsoft.securitycopilot/capacities",
      "table": "resources",
      "properties": []
    },
    "microsoft.securitydetonation/chambers": {
      "name": "microsoft.securitydetonation/chambers",
      "table": "resources",
      "properties": []
    },
    "microsoft.securitydevops/azuredevopsconnectors": {
      "name": "microsoft.securitydevops/azuredevopsconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.securitydevops/githubconnectors": {
      "name": "microsoft.securitydevops/githubconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.securitydevops/gitlabconnectors": {
      "name": "microsoft.securitydevops/gitlabconnectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.securityplatform/accountlinks": {
      "name": "microsoft.securityplatform/accountlinks",
      "table": "resources",
      "properties": []
    },
    "microsoft.sentinelplatformservices/sentinelplatformservices": {
      "name": "microsoft.sentinelplatformservices/sentinelplatformservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicebus/namespaces": {
      "name": "microsoft.servicebus/namespaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabric/clusters": {
      "name": "microsoft.servicefabric/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabric/containergroupsets": {
      "name": "microsoft.servicefabric/containergroupsets",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabric/managedclusters": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/managedclusters"
    },
    "microsoft.servicefabricmesh/applications": {
      "name": "microsoft.servicefabricmesh/applications",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabricmesh/gateways": {
      "name": "microsoft.servicefabricmesh/gateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabricmesh/networks": {
      "name": "microsoft.servicefabricmesh/networks",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabricmesh/secrets": {
      "name": "microsoft.servicefabricmesh/secrets",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicefabricmesh/volumes": {
      "name": "microsoft.servicefabricmesh/volumes",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicenetworking/trafficcontrollers": {
      "name": "microsoft.servicenetworking/trafficcontrollers",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicenetworking/trafficcontrollers/associations": {
      "name": "microsoft.servicenetworking/trafficcontrollers/associations",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicenetworking/trafficcontrollers/frontends": {
      "name": "microsoft.servicenetworking/trafficcontrollers/frontends",
      "table": "resources",
      "properties": []
    },
    "microsoft.servicenetworking/trafficcontrollers/securitypolicies": {
      "name": "microsoft.servicenetworking/trafficcontrollers/securitypolicies",
      "table": "resources",
      "properties": []
    },
    "microsoft.serviceshub/connectors": {
      "name": "microsoft.serviceshub/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.signalrservice/signalr": {
      "name": "microsoft.signalrservice/signalr",
      "table": "resources",
      "properties": []
    },
    "microsoft.signalrservice/signalr/replicas": {
      "name": "microsoft.signalrservice/signalr/replicas",
      "table": "resources",
      "properties": []
    },
    "microsoft.signalrservice/webpubsub": {
      "name": "microsoft.signalrservice/webpubsub",
      "table": "resources",
      "properties": []
    },
    "microsoft.signalrservice/webpubsub/replicas": {
      "name": "microsoft.signalrservice/webpubsub/replicas",
      "table": "resources",
      "properties": []
    },
    "microsoft.singularity/accounts": {
      "name": "microsoft.singularity/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.skytap/nodes": {
      "name": "microsoft.skytap/nodes",
      "table": "resources",
      "properties": []
    },
    "microsoft.softwareplan/softwarelicenses": {
      "name": "microsoft.softwareplan/softwarelicenses",
      "table": "resources",
      "properties": []
    },
    "microsoft.softwareplan/softwaresubscriptions": {
      "name": "microsoft.softwareplan/softwaresubscriptions",
      "table": "resources",
      "properties": []
    },
    "microsoft.solutions/appliancedefinitions": {
      "name": "microsoft.solutions/appliancedefinitions",
      "table": "resources",
      "properties": []
    },
    "microsoft.solutions/appliances": {
      "name": "microsoft.solutions/appliances",
      "table": "resources",
      "properties": []
    },
    "microsoft.solutions/applicationdefinitions": {
      "name": "microsoft.solutions/applicationdefinitions",
      "table": "resources",
      "properties": []
    },
    "microsoft.solutions/applications": {
      "name": "microsoft.solutions/applications",
      "table": "resources",
      "properties": []
    },
    "microsoft.solutions/jitrequests": {
      "name": "microsoft.solutions/jitrequests",
      "table": "resources",
      "properties": []
    },
    "microsoft.sovereign/landingzoneaccounts": {
      "name": "microsoft.sovereign/landingzoneaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.spoolservice/spools": {
      "name": "microsoft.spoolservice/spools",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/instancepools": {
      "name": "microsoft.sql/instancepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/managedinstances": {
      "name": "microsoft.sql/managedinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/managedinstances/databases": {
      "name": "microsoft.sql/managedinstances/databases",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/servers": {
      "name": "microsoft.sql/servers",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/servers/databases": {
      "name": "microsoft.sql/servers/databases",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/servers/elasticpools": {
      "name": "microsoft.sql/servers/elasticpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/servers/jobaccounts": {
      "name": "microsoft.sql/servers/jobaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/servers/jobagents": {
      "name": "microsoft.sql/servers/jobagents",
      "table": "resources",
      "properties": []
    },
    "microsoft.sql/virtualclusters": {
      "name": "microsoft.sql/virtualclusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.sqlvirtualmachine/sqlvirtualmachinegroups": {
      "name": "microsoft.sqlvirtualmachine/sqlvirtualmachinegroups",
      "table": "resources",
      "properties": []
    },
    "microsoft.sqlvirtualmachine/sqlvirtualmachines": {
      "name": "microsoft.sqlvirtualmachine/sqlvirtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.standbypool/standbycontainergrouppools": {
      "name": "microsoft.standbypool/standbycontainergrouppools",
      "table": "resources",
      "properties": []
    },
    "microsoft.standbypool/standbyvirtualmachinepools": {
      "name": "microsoft.standbypool/standbyvirtualmachinepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.storage/datamovers": {
      "name": "microsoft.storage/datamovers",
      "table": "resources",
      "properties": []
    },
    "microsoft.storage/storageaccounts": {
      "name": "microsoft.storage/storageaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.storage/storageaccounts/connectors": {
      "name": "microsoft.storage/storageaccounts/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.storage/storageaccounts/datashares": {
      "name": "microsoft.storage/storageaccounts/datashares",
      "table": "resources",
      "properties": []
    },
    "microsoft.storage/storagetasks": {
      "name": "microsoft.storage/storagetasks",
      "table": "resources",
      "properties": []
    },
    "microsoft.storageactions/storagetasks": {
      "name": "microsoft.storageactions/storagetasks",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagecache/amlfilesystems": {
      "name": "microsoft.storagecache/amlfilesystems",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagecache/caches": {
      "name": "microsoft.storagecache/caches",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagediscovery/storagediscoveryworkspaces": {
      "name": "microsoft.storagediscovery/storagediscoveryworkspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.storageinsights/storagecollectionrules": {
      "name": "microsoft.storageinsights/storagecollectionrules",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagemover/storagemovers": {
      "name": "microsoft.storagemover/storagemovers",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagepool/diskpools": {
      "name": "microsoft.storagepool/diskpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagesync/storagesyncservices": {
      "name": "microsoft.storagesync/storagesyncservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.storagetasks/storagetasks": {
      "name": "microsoft.storagetasks/storagetasks",
      "table": "resources",
      "properties": []
    },
    "microsoft.storsimple/managers": {
      "name": "microsoft.storsimple/managers",
      "table": "resources",
      "properties": []
    },
    "microsoft.streamanalytics/clusters": {
      "name": "microsoft.streamanalytics/clusters",
      "table": "resources",
      "properties": []
    },
    "microsoft.streamanalytics/streamingjobs": {
      "name": "microsoft.streamanalytics/streamingjobs",
      "table": "resources",
      "properties": []
    },
    "microsoft.sustainabilityservices/calculations": {
      "name": "microsoft.sustainabilityservices/calculations",
      "table": "resources",
      "properties": []
    },
    "microsoft.swiftlet/virtualmachines": {
      "name": "microsoft.swiftlet/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.swiftlet/virtualmachinesnapshots": {
      "name": "microsoft.swiftlet/virtualmachinesnapshots",
      "table": "resources",
      "properties": []
    },
    "microsoft.symphony/instances": {
      "name": "microsoft.symphony/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.symphony/solutions": {
      "name": "microsoft.symphony/solutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.symphony/targets": {
      "name": "microsoft.symphony/targets",
      "table": "resources",
      "properties": []
    },
    "microsoft.synapse/privatelinkhubs": {
      "name": "microsoft.synapse/privatelinkhubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.synapse/workspaces": {
      "name": "microsoft.synapse/workspaces",
      "table": "resources",
      "properties": []
    },
    "microsoft.synapse/workspaces/bigdatapools": {
      "name": "microsoft.synapse/workspaces/bigdatapools",
      "table": "resources",
      "properties": []
    },
    "microsoft.synapse/workspaces/kustopools": {
      "name": "microsoft.synapse/workspaces/kustopools",
      "table": "resources",
      "properties": []
    },
    "microsoft.synapse/workspaces/sqlpools": {
      "name": "microsoft.synapse/workspaces/sqlpools",
      "table": "resources",
      "properties": []
    },
    "microsoft.syntex/accounts": {
      "name": "microsoft.syntex/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.syntex/documentprocessors": {
      "name": "microsoft.syntex/documentprocessors",
      "table": "resources",
      "properties": []
    },
    "microsoft.systemintegritymonitoring/simhubs": {
      "name": "microsoft.systemintegritymonitoring/simhubs",
      "table": "resources",
      "properties": []
    },
    "microsoft.systemintegritymonitoring/simhubs/deviceprofiles": {
      "name": "microsoft.systemintegritymonitoring/simhubs/deviceprofiles",
      "table": "resources",
      "properties": []
    },
    "microsoft.testbase/testbaseaccounts": {
      "name": "microsoft.testbase/testbaseaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.testbase/testbaseaccounts/packages": {
      "name": "microsoft.testbase/testbaseaccounts/packages",
      "table": "resources",
      "properties": []
    },
    "microsoft.throttling/throttlingaccounts": {
      "name": "microsoft.throttling/throttlingaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.throttling/throttlingaccounts/rules": {
      "name": "microsoft.throttling/throttlingaccounts/rules",
      "table": "resources",
      "properties": []
    },
    "microsoft.timeseriesinsights/environments": {
      "name": "microsoft.timeseriesinsights/environments",
      "table": "resources",
      "properties": []
    },
    "microsoft.timeseriesinsights/environments/eventsources": {
      "name": "microsoft.timeseriesinsights/environments/eventsources",
      "table": "resources",
      "properties": []
    },
    "microsoft.timeseriesinsights/environments/referencedatasets": {
      "name": "microsoft.timeseriesinsights/environments/referencedatasets",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/activations": {
      "name": "microsoft.toolchainorchestrator/activations",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/campaigns": {
      "name": "microsoft.toolchainorchestrator/campaigns",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/campaigns/versions": {
      "name": "microsoft.toolchainorchestrator/campaigns/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/catalogs": {
      "name": "microsoft.toolchainorchestrator/catalogs",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/catalogs/versions": {
      "name": "microsoft.toolchainorchestrator/catalogs/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/diagnostics": {
      "name": "microsoft.toolchainorchestrator/diagnostics",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/instances": {
      "name": "microsoft.toolchainorchestrator/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/instances/versions": {
      "name": "microsoft.toolchainorchestrator/instances/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/solutions": {
      "name": "microsoft.toolchainorchestrator/solutions",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/solutions/versions": {
      "name": "microsoft.toolchainorchestrator/solutions/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/targets": {
      "name": "microsoft.toolchainorchestrator/targets",
      "table": "resources",
      "properties": []
    },
    "microsoft.toolchainorchestrator/targets/versions": {
      "name": "microsoft.toolchainorchestrator/targets/versions",
      "table": "resources",
      "properties": []
    },
    "microsoft.updatemanager/inventoryconfigurations": {
      "name": "microsoft.updatemanager/inventoryconfigurations",
      "table": "resources",
      "properties": []
    },
    "microsoft.updatemanager/updaterules": {
      "name": "microsoft.updatemanager/updaterules",
      "table": "resources",
      "properties": []
    },
    "microsoft.usagebilling/accounts": {
      "name": "microsoft.usagebilling/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.verifiedid/authorities": {
      "name": "microsoft.verifiedid/authorities",
      "table": "resources",
      "properties": []
    },
    "microsoft.videoindexer/accounts": {
      "name": "microsoft.videoindexer/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.virtualmachineimages/imagetemplates": {
      "name": "microsoft.virtualmachineimages/imagetemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.visualstudio/account": {
      "name": "microsoft.visualstudio/account",
      "table": "resources",
      "properties": []
    },
    "microsoft.visualstudio/account/extension": {
      "name": "microsoft.visualstudio/account/extension",
      "table": "resources",
      "properties": []
    },
    "microsoft.visualstudio/account/project": {
      "name": "microsoft.visualstudio/account/project",
      "table": "resources",
      "properties": []
    },
    "microsoft.vmware/arczones": {
      "name": "microsoft.vmware/arczones",
      "table": "resources",
      "properties": []
    },
    "microsoft.vmware/resourcepools": {
      "name": "microsoft.vmware/resourcepools",
      "table": "resources",
      "properties": []
    },
    "microsoft.vmware/vcenters": {
      "name": "microsoft.vmware/vcenters",
      "table": "resources",
      "properties": []
    },
    "microsoft.vmware/virtualmachines": {
      "name": "microsoft.vmware/virtualmachines",
      "table": "resources",
      "properties": []
    },
    "microsoft.vmware/virtualmachinetemplates": {
      "name": "microsoft.vmware/virtualmachinetemplates",
      "table": "resources",
      "properties": []
    },
    "microsoft.vmware/virtualnetworks": {
      "name": "microsoft.vmware/virtualnetworks",
      "table": "resources",
      "properties": []
    },
    "microsoft.voiceservices/communicationsgateways": {
      "name": "microsoft.voiceservices/communicationsgateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.voiceservices/communicationsgateways/contacts": {
      "name": "microsoft.voiceservices/communicationsgateways/contacts",
      "table": "resources",
      "properties": []
    },
    "microsoft.voiceservices/communicationsgateways/testlines": {
      "name": "microsoft.voiceservices/communicationsgateways/testlines",
      "table": "resources",
      "properties": []
    },
    "microsoft.voiceservices/operatorvoicemailinstances": {
      "name": "microsoft.voiceservices/operatorvoicemailinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.vsonline/accounts": {
      "name": "microsoft.vsonline/accounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.vsonline/plans": {
      "name": "microsoft.vsonline/plans",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/apimanagementaccounts": {
      "name": "microsoft.web/apimanagementaccounts",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/apimanagementaccounts/apis": {
      "name": "microsoft.web/apimanagementaccounts/apis",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/certificates": {
      "name": "microsoft.web/certificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/connectiongateways": {
      "name": "microsoft.web/connectiongateways",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/connections": {
      "name": "microsoft.web/connections",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/containerapps": {
      "name": "microsoft.web/containerapps",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/customapis": {
      "name": "microsoft.web/customapis",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/hostingenvironments": {
      "name": "microsoft.web/hostingenvironments",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/kubeenvironments": {
      "name": "microsoft.web/kubeenvironments",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/serverfarms": {
      "name": "microsoft.web/serverfarms",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/sites": {
      "name": "microsoft.web/sites",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/sites/certificates": {
      "name": "microsoft.web/sites/certificates",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/sites/slots": {
      "name": "microsoft.web/sites/slots",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/staticsites": {
      "name": "microsoft.web/staticsites",
      "table": "resources",
      "properties": []
    },
    "microsoft.web/workerapps": {
      "name": "microsoft.web/workerapps",
      "table": "resources",
      "properties": []
    },
    "microsoft.weightsandbiases/instances": {
      "name": "microsoft.weightsandbiases/instances",
      "table": "resources",
      "properties": []
    },
    "microsoft.whiteboxcadlprovider/whiteboxresources": {
      "name": "microsoft.whiteboxcadlprovider/whiteboxresources",
      "table": "resources",
      "properties": []
    },
    "microsoft.windows365/cloudpcdelegatedmsis": {
      "name": "microsoft.windows365/cloudpcdelegatedmsis",
      "table": "resources",
      "properties": []
    },
    "microsoft.windowsesu/multipleactivationkeys": {
      "name": "microsoft.windowsesu/multipleactivationkeys",
      "table": "resources",
      "properties": []
    },
    "microsoft.windowsiot/deviceservices": {
      "name": "microsoft.windowsiot/deviceservices",
      "table": "resources",
      "properties": []
    },
    "microsoft.windowspushnotificationservices/registrations": {
      "name": "microsoft.windowspushnotificationservices/registrations",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloadbuilder/migrationagents": {
      "name": "microsoft.workloadbuilder/migrationagents",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloadbuilder/workloads": {
      "name": "microsoft.workloadbuilder/workloads",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/connectors": {
      "name": "microsoft.workloads/connectors",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/connectors/acssbackups": {
      "name": "microsoft.workloads/connectors/acssbackups",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/connectors/amsinsights": {
      "name": "microsoft.workloads/connectors/amsinsights",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/connectors/sapvirtualinstancemonitors": {
      "name": "microsoft.workloads/connectors/sapvirtualinstancemonitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/epicvirtualinstances": {
      "name": "microsoft.workloads/epicvirtualinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/epicvirtualinstances/databaseinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/databaseinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/epicvirtualinstances/hyperspacewebinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/hyperspacewebinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/epicvirtualinstances/presentationinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/presentationinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/epicvirtualinstances/sharedinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/sharedinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/epicvirtualinstances/wssinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/wssinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/insights": {
      "name": "microsoft.workloads/insights",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/instancegroupmonitors": {
      "name": "microsoft.workloads/instancegroupmonitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/instancehealthdefinitions": {
      "name": "microsoft.workloads/instancehealthdefinitions",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/instancemonitors": {
      "name": "microsoft.workloads/instancemonitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/monitors": {
      "name": "microsoft.workloads/monitors",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/oraclevirtualinstances": {
      "name": "microsoft.workloads/oraclevirtualinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/oraclevirtualinstances/databaseinstances": {
      "name": "microsoft.workloads/oraclevirtualinstances/databaseinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/phpworkloads": {
      "name": "microsoft.workloads/phpworkloads",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/sapdiscoverysites": {
      "name": "microsoft.workloads/sapdiscoverysites",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/sapdiscoverysites/sapinstances": {
      "name": "microsoft.workloads/sapdiscoverysites/sapinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/sapvirtualinstances": {
      "name": "microsoft.workloads/sapvirtualinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/sapvirtualinstances/applicationinstances": {
      "name": "microsoft.workloads/sapvirtualinstances/applicationinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/sapvirtualinstances/centralinstances": {
      "name": "microsoft.workloads/sapvirtualinstances/centralinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/sapvirtualinstances/databaseinstances": {
      "name": "microsoft.workloads/sapvirtualinstances/databaseinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/virtualinstances": {
      "name": "microsoft.workloads/virtualinstances",
      "table": "resources",
      "properties": []
    },
    "microsoft.workloads/virtualinstances/components": {
      "name": "microsoft.workloads/virtualinstances/components",
      "table": "resources",
      "properties": []
    },
    "microsoft.zerotrustsegmentation/segmentationmanagers": {
      "name": "microsoft.zerotrustsegmentation/segmentationmanagers",
      "table": "resources",
      "properties": []
    },
    "microsoftdnsagent": {
      "name": "microsoftdnsagent",
      "table": "resources",
      "properties": []
    },
    "microsoftmonitoringagent": {
      "name": "microsoftmonitoringagent",
      "table": "resources",
      "properties": []
    },
    "mongodb.atlas/organizations": {
      "name": "mongodb.atlas/organizations",
      "table": "resources",
      "properties": []
    },
    "neon.postgres/organizations": {
      "name": "neon.postgres/organizations",
      "table": "resources",
      "properties": []
    },
    "networkwatcheragentlinux": {
      "name": "networkwatcheragentlinux",
      "table": "resources",
      "properties": []
    },
    "networkwatcheragentwindows": {
      "name": "networkwatcheragentwindows",
      "table": "resources",
      "properties": []
    },
    "newrelic.observability/monitors": {
      "name": "newrelic.observability/monitors",
      "table": "resources",
      "properties": []
    },
    "nginx.nginxplus/nginxdeployments": {
      "name": "nginx.nginxplus/nginxdeployments",
      "table": "resources",
      "properties": []
    },
    "omsagentforlinux": {
      "name": "omsagentforlinux",
      "table": "resources",
      "properties": []
    },
    "oracle.database/autonomousdatabases": {
      "name": "oracle.database/autonomousdatabases",
      "table": "resources",
      "properties": []
    },
    "oracle.database/cloudexadatainfrastructures": {
      "name": "oracle.database/cloudexadatainfrastructures",
      "table": "resources",
      "properties": []
    },
    "oracle.database/cloudvmclusters": {
      "name": "oracle.database/cloudvmclusters",
      "table": "resources",
      "properties": []
    },
    "oracle.database/dbsystems": {
      "name": "oracle.database/dbsystems",
      "table": "resources",
      "properties": []
    },
    "oracle.database/exadbvmclusters": {
      "name": "oracle.database/exadbvmclusters",
      "table": "resources",
      "properties": []
    },
    "oracle.database/exascaledbstoragevaults": {
      "name": "oracle.database/exascaledbstoragevaults",
      "table": "resources",
      "properties": []
    },
    "oracle.database/networkanchors": {
      "name": "oracle.database/networkanchors",
      "table": "resources",
      "properties": []
    },
    "oracle.database/resourceanchors": {
      "name": "oracle.database/resourceanchors",
      "table": "resources",
      "properties": []
    },
    "paloaltonetworks.cloudngfw/firewalls": {
      "name": "paloaltonetworks.cloudngfw/firewalls",
      "table": "resources",
      "properties": []
    },
    "paloaltonetworks.cloudngfw/localrulestacks": {
      "name": "paloaltonetworks.cloudngfw/localrulestacks",
      "table": "resources",
      "properties": []
    },
    "pinecone.vectordb/organizations": {
      "name": "pinecone.vectordb/organizations",
      "table": "resources",
      "properties": []
    },
    "providers.test/softdeletesupportedresources": {
      "name": "providers.test/softdeletesupportedresources",
      "table": "resources",
      "properties": []
    },
    "providers.test/statefulibizaengines": {
      "name": "providers.test/statefulibizaengines",
      "table": "resources",
      "properties": []
    },
    "providers.test/statefulresources": {
      "name": "providers.test/statefulresources",
      "table": "resources",
      "properties": []
    },
    "providers.test/statefulresources/nestedresources": {
      "name": "providers.test/statefulresources/nestedresources",
      "table": "resources",
      "properties": []
    },
    "providers.test/statelessresources": {
      "name": "providers.test/statelessresources",
      "table": "resources",
      "properties": []
    },
    "providers.test/trackedresources": {
      "name": "providers.test/trackedresources",
      "table": "resources",
      "properties": []
    },
    "purestorage.block/reservations": {
      "name": "purestorage.block/reservations",
      "table": "resources",
      "properties": []
    },
    "purestorage.block/storagepools": {
      "name": "purestorage.block/storagepools",
      "table": "resources",
      "properties": []
    },
    "purestorage.block/volumepools": {
      "name": "purestorage.block/volumepools",
      "table": "resources",
      "properties": []
    },
    "qumulo.qaas/storages": {
      "name": "qumulo.qaas/storages",
      "table": "resources",
      "properties": []
    },
    "qumulo.storage/filesystems": {
      "name": "qumulo.storage/filesystems",
      "table": "resources",
      "properties": []
    },
    "sendgrid.email/accounts": {
      "name": "sendgrid.email/accounts",
      "table": "resources",
      "properties": []
    },
    "splitio.experimentation/experimentationworkspaces": {
      "name": "splitio.experimentation/experimentationworkspaces",
      "table": "resources",
      "properties": []
    },
    "sqlassessmentplus": {
      "name": "sqlassessmentplus",
      "table": "resources",
      "properties": []
    },
    "telemetryanddiagnostics": {
      "name": "telemetryanddiagnostics",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/fusiongroups": {
      "name": "wandisco.fusion/fusiongroups",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/fusiongroups/azurezones": {
      "name": "wandisco.fusion/fusiongroups/azurezones",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/fusiongroups/azurezones/plugins": {
      "name": "wandisco.fusion/fusiongroups/azurezones/plugins",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/fusiongroups/managedonpremzones": {
      "name": "wandisco.fusion/fusiongroups/managedonpremzones",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/fusiongroups/replicationrules": {
      "name": "wandisco.fusion/fusiongroups/replicationrules",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators": {
      "name": "wandisco.fusion/migrators",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/datatransferagents": {
      "name": "wandisco.fusion/migrators/datatransferagents",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/exclusiontemplates": {
      "name": "wandisco.fusion/migrators/exclusiontemplates",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/livedatamigrations": {
      "name": "wandisco.fusion/migrators/livedatamigrations",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/metadatamigrations": {
      "name": "wandisco.fusion/migrators/metadatamigrations",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/metadatatargets": {
      "name": "wandisco.fusion/migrators/metadatatargets",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/pathmappings": {
      "name": "wandisco.fusion/migrators/pathmappings",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/targets": {
      "name": "wandisco.fusion/migrators/targets",
      "table": "resources",
      "properties": []
    },
    "wandisco.fusion/migrators/verifications": {
      "name": "wandisco.fusion/migrators/verifications",
      "table": "resources",
      "properties": []
    },
    "windows": {
      "name": "windows",
      "table": "resources",
      "properties": []
    },
    "windowsagent.azuresecuritycenter": {
      "name": "windowsagent.azuresecuritycenter",
      "table": "resources",
      "properties": []
    },
    "windowsagent.sqlserver": {
      "name": "windowsagent.sqlserver",
      "table": "resources",
      "properties": []
    },
    "windowsclientassessmentplus": {
      "name": "windowsclientassessmentplus",
      "table": "resources",
      "properties": []
    },
    "windowsopenssh": {
      "name": "windowsopenssh",
      "table": "resources",
      "properties": []
    },
    "windowsosupdateextension": {
      "name": "windowsosupdateextension",
      "table": "resources",
      "properties": []
    },
    "windowspatchextension": {
      "name": "windowspatchextension",
      "table": "resources",
      "properties": []
    },
    "windowsserverassessment": {
      "name": "windowsserverassessment",
      "table": "resources",
      "properties": []
    },
    "microsoft.authorization/locks/providers/assessments/governanceassignments": {
      "table": "securityresources",
      "type": "microsoft.authorization/locks/providers/assessments/governanceassignments"
    },
    "microsoft.authorization/roleassignments/providers/assessments/governanceassignments": {
      "table": "securityresources",
      "type": "microsoft.authorization/roleassignments/providers/assessments/governanceassignments"
    },
    "microsoft.security/apicollections": {
      "table": "securityresources",
      "type": "microsoft.security/apicollections"
    },
    "microsoft.security/apicollections/apiendpoints": {
      "table": "securityresources",
      "type": "microsoft.security/apicollections/apiendpoints"
    },
    "microsoft.security/assessments": {
      "table": "securityresources",
      "type": "microsoft.security/assessments"
    },
    "microsoft.security/assessments/governanceassignments": {
      "table": "securityresources",
      "type": "microsoft.security/assessments/governanceassignments"
    },
    "microsoft.security/assessments/subassessments": {
      "table": "securityresources",
      "type": "microsoft.security/assessments/subassessments"
    },
    "microsoft.security/attackpaths": {
      "table": "securityresources",
      "type": "microsoft.security/attackpaths"
    },
    "microsoft.security/governancerules": {
      "table": "securityresources",
      "type": "microsoft.security/governancerules"
    },
    "microsoft.security/healthreports": {
      "table": "securityresources",
      "type": "microsoft.security/healthreports"
    },
    "microsoft.security/insights": {
      "table": "securityresources",
      "type": "microsoft.security/insights"
    },
    "microsoft.security/integrations": {
      "table": "securityresources",
      "type": "microsoft.security/integrations"
    },
    "microsoft.security/iotalerts": {
      "table": "securityresources",
      "type": "microsoft.security/iotalerts"
    },
    "microsoft.security/locations/alerts": {
      "table": "securityresources",
      "type": "microsoft.security/locations/alerts"
    },
    "microsoft.security/locations/attackpaths": {
      "table": "securityresources",
      "type": "microsoft.security/locations/attackpaths"
    },
    "microsoft.security/pricings": {
      "table": "securityresources",
      "type": "microsoft.security/pricings"
    },
    "microsoft.security/regulatorycompliancestandards": {
      "table": "securityresources",
      "type": "microsoft.security/regulatorycompliancestandards"
    },
    "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols": {
      "table": "securityresources",
      "type": "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols"
    },
    "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments": {
      "table": "securityresources",
      "type": "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments"
    },
    "microsoft.security/securescores": {
      "table": "securityresources",
      "type": "microsoft.security/securescores"
    },
    "microsoft.security/securescores/securescorecontrols": {
      "table": "securityresources",
      "type": "microsoft.security/securescores/securescorecontrols"
    },
    "microsoft.security/securityconnectors/devops": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops"
    },
    "microsoft.security/securityconnectors/devops/azuredevopsorgs": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops/azuredevopsorgs"
    },
    "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects": {
      "name": "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects",
      "table": "securityresources",
      "properties": []
    },
    "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects/repos": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects/repos"
    },
    "microsoft.security/securityconnectors/devops/githubowners": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops/githubowners"
    },
    "microsoft.security/securityconnectors/devops/githubowners/repos": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops/githubowners/repos"
    },
    "microsoft.security/securityconnectors/devops/gitlabgroups": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops/gitlabgroups"
    },
    "microsoft.security/securityconnectors/devops/gitlabgroups/projects": {
      "table": "securityresources",
      "type": "microsoft.security/securityconnectors/devops/gitlabgroups/projects"
    },
    "microsoft.security/softwareinventories": {
      "table": "securityresources",
      "type": "microsoft.security/softwareinventories"
    },
    "microsoft.security/softwareinventory": {
      "table": "securityresources",
      "type": "microsoft.security/softwareinventory"
    },
    "microsoft.security/standardassignments": {
      "table": "securityresources",
      "type": "microsoft.security/standardassignments"
    },
    "applications": {
      "name": "applications",
      "table": "servicefabricresources",
      "properties": []
    },
    "applicationtypes": {
      "name": "applicationtypes",
      "table": "servicefabricresources",
      "properties": []
    },
    "microsoft.servicefabric/clusters/applications": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/clusters/applications"
    },
    "microsoft.servicefabric/clusters/applications/services": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/clusters/applications/services"
    },
    "microsoft.servicefabric/clusters/applicationtypes": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/clusters/applicationtypes"
    },
    "microsoft.servicefabric/clusters/applicationtypes/versions": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/clusters/applicationtypes/versions"
    },
    "microsoft.servicefabric/managedclusters/applications": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/managedclusters/applications"
    },
    "microsoft.servicefabric/managedclusters/applications/services": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/managedclusters/applications/services"
    },
    "microsoft.servicefabric/managedclusters/applicationtypes": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/managedclusters/applicationtypes"
    },
    "microsoft.servicefabric/managedclusters/applicationtypes/versions": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/managedclusters/applicationtypes/versions"
    },
    "microsoft.servicefabric/managedclusters/nodetypes": {
      "table": "servicefabricresources",
      "type": "microsoft.servicefabric/managedclusters/nodetypes"
    },
    "services": {
      "name": "services",
      "table": "servicefabricresources",
      "properties": []
    },
    "versions": {
      "name": "versions",
      "table": "servicefabricresources",
      "properties": []
    },
    "microsoft.resourcehealth/events": {
      "table": "servicehealthresources",
      "type": "microsoft.resourcehealth/events"
    },
    "microsoft.resourcehealth/events/impactedresources": {
      "table": "servicehealthresources",
      "type": "microsoft.resourcehealth/events/impactedresources"
    },
    "microsoft.compute/locations/sharedgalleries": {
      "name": "microsoft.compute/locations/sharedgalleries",
      "table": "sharedgalleryresources",
      "properties": []
    },
    "microsoft.compute/skualternativespotvmsize/location": {
      "name": "microsoft.compute/skualternativespotvmsize/location",
      "table": "spotresources",
      "properties": []
    },
    "microsoft.compute/skuspotevictionrate/location": {
      "name": "microsoft.compute/skuspotevictionrate/location",
      "table": "spotresources",
      "properties": []
    },
    "microsoft.compute/skuspotpricehistory/ostype/location": {
      "name": "microsoft.compute/skuspotpricehistory/ostype/location",
      "table": "spotresources",
      "properties": []
    },
    "microsoft.resources/tagnamespaces": {
      "table": "tagresources",
      "type": "microsoft.resources/tagnamespaces"
    },
    "microsoft.resources/tagnamespaces/tagnames": {
      "table": "tagresources",
      "type": "microsoft.resources/tagnamespaces/tagnames"
    },
    "microsoft.resources/tagnamespaces/tags": {
      "table": "tagresources",
      "type": "microsoft.resources/tagnamespaces/tags"
    },
    "aka.ms/yourcaliforniaprivacychoices": {
      "table": "resources",
      "type": "aka.ms/yourcaliforniaprivacychoices"
    }
  },
  "keywords": [
    {
      "name": "!between",
      "category": "KQL Keyword"
    },
    {
      "name": "!contains",
      "category": "KQL Keyword"
    },
    {
      "name": "!contains_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "!endswith",
      "category": "KQL Keyword"
    },
    {
      "name": "!endswith_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "!has",
      "category": "KQL Keyword"
    },
    {
      "name": "!has_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "!hasprefix",
      "category": "KQL Keyword"
    },
    {
      "name": "!hasprefix_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "!hassuffix",
      "category": "KQL Keyword"
    },
    {
      "name": "!hassuffix_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "!in",
      "category": "KQL Keyword"
    },
    {
      "name": "!in~",
      "category": "KQL Keyword"
    },
    {
      "name": "!startswith",
      "category": "KQL Keyword"
    },
    {
      "name": "!startswith_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "3Dchart",
      "category": "KQL Keyword"
    },
    {
      "name": "__contextual_datatable",
      "category": "KQL Keyword"
    },
    {
      "name": "__crossCluster",
      "category": "KQL Keyword"
    },
    {
      "name": "__crossDB",
      "category": "KQL Keyword"
    },
    {
      "name": "__executeAndCache",
      "category": "KQL Keyword"
    },
    {
      "name": "__id",
      "category": "KQL Keyword"
    },
    {
      "name": "__isFuzzy",
      "category": "KQL Keyword"
    },
    {
      "name": "__noWithSource",
      "category": "KQL Keyword"
    },
    {
      "name": "__packedColumn",
      "category": "KQL Keyword"
    },
    {
      "name": "__partitionby",
      "category": "KQL Keyword"
    },
    {
      "name": "__projectAway",
      "category": "KQL Keyword"
    },
    {
      "name": "__sourceColumnIndex",
      "category": "KQL Keyword"
    },
    {
      "name": "access",
      "category": "KQL Keyword"
    },
    {
      "name": "accumulate",
      "category": "KQL Keyword"
    },
    {
      "name": "alias",
      "category": "KQL Keyword"
    },
    {
      "name": "and",
      "category": "KQL Keyword"
    },
    {
      "name": "anomalychart",
      "category": "KQL Keyword"
    },
    {
      "name": "areachart",
      "category": "KQL Keyword"
    },
    {
      "name": "as",
      "category": "KQL Keyword"
    },
    {
      "name": "asc",
      "category": "KQL Keyword"
    },
    {
      "name": "assert-schema",
      "category": "KQL Keyword"
    },
    {
      "name": "bagexpansion",
      "category": "KQL Keyword"
    },
    {
      "name": "barchart",
      "category": "KQL Keyword"
    },
    {
      "name": "best_effort",
      "category": "KQL Keyword"
    },
    {
      "name": "between",
      "category": "KQL Keyword"
    },
    {
      "name": "bin",
      "category": "KQL Keyword"
    },
    {
      "name": "bin_legacy",
      "category": "KQL Keyword"
    },
    {
      "name": "bool",
      "category": "KQL Keyword"
    },
    {
      "name": "boolean",
      "category": "KQL Keyword"
    },
    {
      "name": "by",
      "category": "KQL Keyword"
    },
    {
      "name": "byte",
      "category": "KQL Keyword"
    },
    {
      "name": "cachingpolicy",
      "category": "KQL Keyword"
    },
    {
      "name": "callout",
      "category": "KQL Keyword"
    },
    {
      "name": "cancel",
      "category": "KQL Keyword"
    },
    {
      "name": "card",
      "category": "KQL Keyword"
    },
    {
      "name": "char",
      "category": "KQL Keyword"
    },
    {
      "name": "columnchart",
      "category": "KQL Keyword"
    },
    {
      "name": "commands-and-queries",
      "category": "KQL Keyword"
    },
    {
      "name": "consume",
      "category": "KQL Keyword"
    },
    {
      "name": "contains",
      "category": "KQL Keyword"
    },
    {
      "name": "contains_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "containscs",
      "category": "KQL Keyword"
    },
    {
      "name": "count",
      "category": "KQL Keyword"
    },
    {
      "name": "cycles",
      "category": "KQL Keyword"
    },
    {
      "name": "database",
      "category": "KQL Keyword"
    },
    {
      "name": "dataexport",
      "category": "KQL Keyword"
    },
    {
      "name": "dataformat",
      "category": "KQL Keyword"
    },
    {
      "name": "datascope",
      "category": "KQL Keyword"
    },
    {
      "name": "datatable",
      "category": "KQL Keyword"
    },
    {
      "name": "date",
      "category": "KQL Keyword"
    },
    {
      "name": "datetime",
      "category": "KQL Keyword"
    },
    {
      "name": "datetime_pattern",
      "category": "KQL Keyword"
    },
    {
      "name": "decimal",
      "category": "KQL Keyword"
    },
    {
      "name": "declare",
      "category": "KQL Keyword"
    },
    {
      "name": "decodeblocks",
      "category": "KQL Keyword"
    },
    {
      "name": "default",
      "category": "KQL Keyword"
    },
    {
      "name": "desc",
      "category": "KQL Keyword"
    },
    {
      "name": "distinct",
      "category": "KQL Keyword"
    },
    {
      "name": "double",
      "category": "KQL Keyword"
    },
    {
      "name": "dynamic",
      "category": "KQL Keyword"
    },
    {
      "name": "earliest",
      "category": "KQL Keyword"
    },
    {
      "name": "edges",
      "category": "KQL Keyword"
    },
    {
      "name": "encodingpolicy",
      "category": "KQL Keyword"
    },
    {
      "name": "endswith",
      "category": "KQL Keyword"
    },
    {
      "name": "endswith_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "entity_group",
      "category": "KQL Keyword"
    },
    {
      "name": "evaluate",
      "category": "KQL Keyword"
    },
    {
      "name": "expandoutput",
      "category": "KQL Keyword"
    },
    {
      "name": "extend",
      "category": "KQL Keyword"
    },
    {
      "name": "extent_tags_retention",
      "category": "KQL Keyword"
    },
    {
      "name": "external_data",
      "category": "KQL Keyword"
    },
    {
      "name": "externaldata",
      "category": "KQL Keyword"
    },
    {
      "name": "facet",
      "category": "KQL Keyword"
    },
    {
      "name": "filter",
      "category": "KQL Keyword"
    },
    {
      "name": "find",
      "category": "KQL Keyword"
    },
    {
      "name": "first",
      "category": "KQL Keyword"
    },
    {
      "name": "flags",
      "category": "KQL Keyword"
    },
    {
      "name": "float",
      "category": "KQL Keyword"
    },
    {
      "name": "force_remote",
      "category": "KQL Keyword"
    },
    {
      "name": "fork",
      "category": "KQL Keyword"
    },
    {
      "name": "from",
      "category": "KQL Keyword"
    },
    {
      "name": "getschema",
      "category": "KQL Keyword"
    },
    {
      "name": "granny-asc",
      "category": "KQL Keyword"
    },
    {
      "name": "granny-desc",
      "category": "KQL Keyword"
    },
    {
      "name": "graph",
      "category": "KQL Keyword"
    },
    {
      "name": "graph-mark-components",
      "category": "KQL Keyword"
    },
    {
      "name": "graph-match",
      "category": "KQL Keyword"
    },
    {
      "name": "graph-shortest-paths",
      "category": "KQL Keyword"
    },
    {
      "name": "graph-to-table",
      "category": "KQL Keyword"
    },
    {
      "name": "graph-where-edges",
      "category": "KQL Keyword"
    },
    {
      "name": "graph-where-nodes",
      "category": "KQL Keyword"
    },
    {
      "name": "guid",
      "category": "KQL Keyword"
    },
    {
      "name": "harddelete",
      "category": "KQL Keyword"
    },
    {
      "name": "hardretention",
      "category": "KQL Keyword"
    },
    {
      "name": "has",
      "category": "KQL Keyword"
    },
    {
      "name": "has_all",
      "category": "KQL Keyword"
    },
    {
      "name": "has_any",
      "category": "KQL Keyword"
    },
    {
      "name": "has_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "hasprefix",
      "category": "KQL Keyword"
    },
    {
      "name": "hasprefix_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "hassuffix",
      "category": "KQL Keyword"
    },
    {
      "name": "hassuffix_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.concurrency",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.distribution",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.materialized",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.num_partitions",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.progressive_top",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.remote",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.shufflekey",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.spread",
      "category": "KQL Keyword"
    },
    {
      "name": "hint.strategy",
      "category": "KQL Keyword"
    },
    {
      "name": "hotcache",
      "category": "KQL Keyword"
    },
    {
      "name": "id",
      "category": "KQL Keyword"
    },
    {
      "name": "in",
      "category": "KQL Keyword"
    },
    {
      "name": "inline_external_table",
      "category": "KQL Keyword"
    },
    {
      "name": "int",
      "category": "KQL Keyword"
    },
    {
      "name": "int16",
      "category": "KQL Keyword"
    },
    {
      "name": "int32",
      "category": "KQL Keyword"
    },
    {
      "name": "int64",
      "category": "KQL Keyword"
    },
    {
      "name": "int8",
      "category": "KQL Keyword"
    },
    {
      "name": "invoke",
      "category": "KQL Keyword"
    },
    {
      "name": "in~",
      "category": "KQL Keyword"
    },
    {
      "name": "isfuzzy",
      "category": "KQL Keyword"
    },
    {
      "name": "join",
      "category": "KQL Keyword"
    },
    {
      "name": "journal",
      "category": "KQL Keyword"
    },
    {
      "name": "kind",
      "category": "KQL Keyword"
    },
    {
      "name": "ladderchart",
      "category": "KQL Keyword"
    },
    {
      "name": "last",
      "category": "KQL Keyword"
    },
    {
      "name": "latest",
      "category": "KQL Keyword"
    },
    {
      "name": "let",
      "category": "KQL Keyword"
    },
    {
      "name": "like",
      "category": "KQL Keyword"
    },
    {
      "name": "likecs",
      "category": "KQL Keyword"
    },
    {
      "name": "limit",
      "category": "KQL Keyword"
    },
    {
      "name": "linechart",
      "category": "KQL Keyword"
    },
    {
      "name": "long",
      "category": "KQL Keyword"
    },
    {
      "name": "lookup",
      "category": "KQL Keyword"
    },
    {
      "name": "macro-expand",
      "category": "KQL Keyword"
    },
    {
      "name": "make-graph",
      "category": "KQL Keyword"
    },
    {
      "name": "make-series",
      "category": "KQL Keyword"
    },
    {
      "name": "matches regex",
      "category": "KQL Keyword"
    },
    {
      "name": "materialize",
      "category": "KQL Keyword"
    },
    {
      "name": "materialized-view-combine",
      "category": "KQL Keyword"
    },
    {
      "name": "materialized-views",
      "category": "KQL Keyword"
    },
    {
      "name": "mdm",
      "category": "KQL Keyword"
    },
    {
      "name": "missing",
      "category": "KQL Keyword"
    },
    {
      "name": "mv-apply",
      "category": "KQL Keyword"
    },
    {
      "name": "mv-expand",
      "category": "KQL Keyword"
    },
    {
      "name": "mvapply",
      "category": "KQL Keyword"
    },
    {
      "name": "mvexpand",
      "category": "KQL Keyword"
    },
    {
      "name": "nodes",
      "category": "KQL Keyword"
    },
    {
      "name": "nooptimization",
      "category": "KQL Keyword"
    },
    {
      "name": "notcontains",
      "category": "KQL Keyword"
    },
    {
      "name": "notcontainscs",
      "category": "KQL Keyword"
    },
    {
      "name": "notlike",
      "category": "KQL Keyword"
    },
    {
      "name": "notlikecs",
      "category": "KQL Keyword"
    },
    {
      "name": "null",
      "category": "KQL Keyword"
    },
    {
      "name": "nulls",
      "category": "KQL Keyword"
    },
    {
      "name": "of",
      "category": "KQL Keyword"
    },
    {
      "name": "on",
      "category": "KQL Keyword"
    },
    {
      "name": "optional",
      "category": "KQL Keyword"
    },
    {
      "name": "or",
      "category": "KQL Keyword"
    },
    {
      "name": "order",
      "category": "KQL Keyword"
    },
    {
      "name": "others",
      "category": "KQL Keyword"
    },
    {
      "name": "output",
      "category": "KQL Keyword"
    },
    {
      "name": "pack",
      "category": "KQL Keyword"
    },
    {
      "name": "parse",
      "category": "KQL Keyword"
    },
    {
      "name": "parse-kv",
      "category": "KQL Keyword"
    },
    {
      "name": "parse-where",
      "category": "KQL Keyword"
    },
    {
      "name": "partition",
      "category": "KQL Keyword"
    },
    {
      "name": "partitioned-by",
      "category": "KQL Keyword"
    },
    {
      "name": "pathformat",
      "category": "KQL Keyword"
    },
    {
      "name": "pattern",
      "category": "KQL Keyword"
    },
    {
      "name": "piechart",
      "category": "KQL Keyword"
    },
    {
      "name": "pivotchart",
      "category": "KQL Keyword"
    },
    {
      "name": "plotly",
      "category": "KQL Keyword"
    },
    {
      "name": "print",
      "category": "KQL Keyword"
    },
    {
      "name": "project",
      "category": "KQL Keyword"
    },
    {
      "name": "project-away",
      "category": "KQL Keyword"
    },
    {
      "name": "project-by-names",
      "category": "KQL Keyword"
    },
    {
      "name": "project-keep",
      "category": "KQL Keyword"
    },
    {
      "name": "project-rename",
      "category": "KQL Keyword"
    },
    {
      "name": "project-reorder",
      "category": "KQL Keyword"
    },
    {
      "name": "project-smart",
      "category": "KQL Keyword"
    },
    {
      "name": "queries",
      "category": "KQL Keyword"
    },
    {
      "name": "query_parameters",
      "category": "KQL Keyword"
    },
    {
      "name": "query_results",
      "category": "KQL Keyword"
    },
    {
      "name": "range",
      "category": "KQL Keyword"
    },
    {
      "name": "real",
      "category": "KQL Keyword"
    },
    {
      "name": "reduce",
      "category": "KQL Keyword"
    },
    {
      "name": "regex",
      "category": "KQL Keyword"
    },
    {
      "name": "relaxed",
      "category": "KQL Keyword"
    },
    {
      "name": "render",
      "category": "KQL Keyword"
    },
    {
      "name": "restrict",
      "category": "KQL Keyword"
    },
    {
      "name": "restricted_view_access",
      "category": "KQL Keyword"
    },
    {
      "name": "row_level_security",
      "category": "KQL Keyword"
    },
    {
      "name": "rowstore",
      "category": "KQL Keyword"
    },
    {
      "name": "rowstore_references",
      "category": "KQL Keyword"
    },
    {
      "name": "rowstore_sealinfo",
      "category": "KQL Keyword"
    },
    {
      "name": "rowstorepolicy",
      "category": "KQL Keyword"
    },
    {
      "name": "rowstores",
      "category": "KQL Keyword"
    },
    {
      "name": "sample",
      "category": "KQL Keyword"
    },
    {
      "name": "sample-distinct",
      "category": "KQL Keyword"
    },
    {
      "name": "scan",
      "category": "KQL Keyword"
    },
    {
      "name": "scatterchart",
      "category": "KQL Keyword"
    },
    {
      "name": "seal",
      "category": "KQL Keyword"
    },
    {
      "name": "seals",
      "category": "KQL Keyword"
    },
    {
      "name": "search",
      "category": "KQL Keyword"
    },
    {
      "name": "serialize",
      "category": "KQL Keyword"
    },
    {
      "name": "set",
      "category": "KQL Keyword"
    },
    {
      "name": "set-or-append",
      "category": "KQL Keyword"
    },
    {
      "name": "set-or-replace",
      "category": "KQL Keyword"
    },
    {
      "name": "shards",
      "category": "KQL Keyword"
    },
    {
      "name": "simple",
      "category": "KQL Keyword"
    },
    {
      "name": "softdelete",
      "category": "KQL Keyword"
    },
    {
      "name": "softretention",
      "category": "KQL Keyword"
    },
    {
      "name": "sort",
      "category": "KQL Keyword"
    },
    {
      "name": "sql",
      "category": "KQL Keyword"
    },
    {
      "name": "stackedareachart",
      "category": "KQL Keyword"
    },
    {
      "name": "startswith",
      "category": "KQL Keyword"
    },
    {
      "name": "startswith_cs",
      "category": "KQL Keyword"
    },
    {
      "name": "statistics",
      "category": "KQL Keyword"
    },
    {
      "name": "step",
      "category": "KQL Keyword"
    },
    {
      "name": "storedqueryresultcontainers",
      "category": "KQL Keyword"
    },
    {
      "name": "string",
      "category": "KQL Keyword"
    },
    {
      "name": "summarize",
      "category": "KQL Keyword"
    },
    {
      "name": "tablepurge",
      "category": "KQL Keyword"
    },
    {
      "name": "take",
      "category": "KQL Keyword"
    },
    {
      "name": "time",
      "category": "KQL Keyword"
    },
    {
      "name": "timechart",
      "category": "KQL Keyword"
    },
    {
      "name": "timeline",
      "category": "KQL Keyword"
    },
    {
      "name": "timepivot",
      "category": "KQL Keyword"
    },
    {
      "name": "timespan",
      "category": "KQL Keyword"
    },
    {
      "name": "title",
      "category": "KQL Keyword"
    },
    {
      "name": "to",
      "category": "KQL Keyword"
    },
    {
      "name": "top",
      "category": "KQL Keyword"
    },
    {
      "name": "top-hitters",
      "category": "KQL Keyword"
    },
    {
      "name": "top-nested",
      "category": "KQL Keyword"
    },
    {
      "name": "toscalar",
      "category": "KQL Keyword"
    },
    {
      "name": "totable",
      "category": "KQL Keyword"
    },
    {
      "name": "treemap",
      "category": "KQL Keyword"
    },
    {
      "name": "typeof",
      "category": "KQL Keyword"
    },
    {
      "name": "uint",
      "category": "KQL Keyword"
    },
    {
      "name": "uint16",
      "category": "KQL Keyword"
    },
    {
      "name": "uint32",
      "category": "KQL Keyword"
    },
    {
      "name": "uint64",
      "category": "KQL Keyword"
    },
    {
      "name": "uint8",
      "category": "KQL Keyword"
    },
    {
      "name": "ulong",
      "category": "KQL Keyword"
    },
    {
      "name": "union",
      "category": "KQL Keyword"
    },
    {
      "name": "uniqueid",
      "category": "KQL Keyword"
    },
    {
      "name": "unrestrictedviewers",
      "category": "KQL Keyword"
    },
    {
      "name": "uuid",
      "category": "KQL Keyword"
    },
    {
      "name": "verbose",
      "category": "KQL Keyword"
    },
    {
      "name": "view",
      "category": "KQL Keyword"
    },
    {
      "name": "viewers",
      "category": "KQL Keyword"
    },
    {
      "name": "views",
      "category": "KQL Keyword"
    },
    {
      "name": "where",
      "category": "KQL Keyword"
    },
    {
      "name": "with",
      "category": "KQL Keyword"
    },
    {
      "name": "with_itemindex",
      "category": "KQL Keyword"
    },
    {
      "name": "with_match_id",
      "category": "KQL Keyword"
    },
    {
      "name": "with_node_id",
      "category": "KQL Keyword"
    },
    {
      "name": "with_source",
      "category": "KQL Keyword"
    },
    {
      "name": "with_step_name",
      "category": "KQL Keyword"
    },
    {
      "name": "withsource",
      "category": "KQL Keyword"
    },
    {
      "name": "writeaheadlog",
      "category": "KQL Keyword"
    }
  ],
  "operators": [
    {
      "name": "!",
      "category": "KQL Operator"
    },
    {
      "name": "!=",
      "category": "KQL Operator"
    },
    {
      "name": "!~",
      "category": "KQL Operator"
    },
    {
      "name": "%",
      "category": "KQL Operator"
    },
    {
      "name": "(",
      "category": "KQL Operator"
    },
    {
      "name": ")",
      "category": "KQL Operator"
    },
    {
      "name": "*",
      "category": "KQL Operator"
    },
    {
      "name": "+",
      "category": "KQL Operator"
    },
    {
      "name": ",",
      "category": "KQL Operator"
    },
    {
      "name": "-",
      "category": "KQL Operator"
    },
    {
      "name": "--",
      "category": "KQL Operator"
    },
    {
      "name": "-->",
      "category": "KQL Operator"
    },
    {
      "name": "-[",
      "category": "KQL Operator"
    },
    {
      "name": ".",
      "category": "KQL Operator"
    },
    {
      "name": "..",
      "category": "KQL Operator"
    },
    {
      "name": "/",
      "category": "KQL Operator"
    },
    {
      "name": ":",
      "category": "KQL Operator"
    },
    {
      "name": ";",
      "category": "KQL Operator"
    },
    {
      "name": "<",
      "category": "KQL Operator"
    },
    {
      "name": "<--",
      "category": "KQL Operator"
    },
    {
      "name": "<-[",
      "category": "KQL Operator"
    },
    {
      "name": "<=",
      "category": "KQL Operator"
    },
    {
      "name": "<>",
      "category": "KQL Operator"
    },
    {
      "name": "<|",
      "category": "KQL Operator"
    },
    {
      "name": "=",
      "category": "KQL Operator"
    },
    {
      "name": "==",
      "category": "KQL Operator"
    },
    {
      "name": "=>",
      "category": "KQL Operator"
    },
    {
      "name": "=~",
      "category": "KQL Operator"
    },
    {
      "name": ">",
      "category": "KQL Operator"
    },
    {
      "name": ">=",
      "category": "KQL Operator"
    },
    {
      "name": "?",
      "category": "KQL Operator"
    },
    {
      "name": "@",
      "category": "KQL Operator"
    },
    {
      "name": "[",
      "category": "KQL Operator"
    },
    {
      "name": "]",
      "category": "KQL Operator"
    },
    {
      "name": "]-",
      "category": "KQL Operator"
    },
    {
      "name": "]->",
      "category": "KQL Operator"
    },
    {
      "name": "{",
      "category": "KQL Operator"
    },
    {
      "name": "|",
      "category": "KQL Operator"
    },
    {
      "name": "}",
      "category": "KQL Operator"
    }
  ],
  "functions": [
    {
      "name": "abs",
      "category": "KQL Function"
    },
    {
      "name": "acos",
      "category": "KQL Function"
    },
    {
      "name": "ago",
      "category": "KQL Function"
    },
    {
      "name": "all",
      "category": "KQL Function"
    },
    {
      "name": "any",
      "category": "KQL Function"
    },
    {
      "name": "around",
      "category": "KQL Function"
    },
    {
      "name": "array_concat",
      "category": "KQL Function"
    },
    {
      "name": "array_iff",
      "category": "KQL Function"
    },
    {
      "name": "array_iif",
      "category": "KQL Function"
    },
    {
      "name": "array_index_of",
      "category": "KQL Function"
    },
    {
      "name": "array_length",
      "category": "KQL Function"
    },
    {
      "name": "array_reverse",
      "category": "KQL Function"
    },
    {
      "name": "array_rotate_left",
      "category": "KQL Function"
    },
    {
      "name": "array_rotate_right",
      "category": "KQL Function"
    },
    {
      "name": "array_shift_left",
      "category": "KQL Function"
    },
    {
      "name": "array_shift_right",
      "category": "KQL Function"
    },
    {
      "name": "array_slice",
      "category": "KQL Function"
    },
    {
      "name": "array_sort_asc",
      "category": "KQL Function"
    },
    {
      "name": "array_sort_desc",
      "category": "KQL Function"
    },
    {
      "name": "array_split",
      "category": "KQL Function"
    },
    {
      "name": "array_strcat",
      "category": "KQL Function"
    },
    {
      "name": "array_sum",
      "category": "KQL Function"
    },
    {
      "name": "arraylength",
      "category": "KQL Function"
    },
    {
      "name": "asin",
      "category": "KQL Function"
    },
    {
      "name": "assert",
      "category": "KQL Function"
    },
    {
      "name": "atan",
      "category": "KQL Function"
    },
    {
      "name": "atan2",
      "category": "KQL Function"
    },
    {
      "name": "bag_has_key",
      "category": "KQL Function"
    },
    {
      "name": "bag_keys",
      "category": "KQL Function"
    },
    {
      "name": "bag_merge",
      "category": "KQL Function"
    },
    {
      "name": "bag_pack",
      "category": "KQL Function"
    },
    {
      "name": "bag_pack_columns",
      "category": "KQL Function"
    },
    {
      "name": "bag_remove_keys",
      "category": "KQL Function"
    },
    {
      "name": "bag_set_key",
      "category": "KQL Function"
    },
    {
      "name": "bag_zip",
      "category": "KQL Function"
    },
    {
      "name": "base64_decode_toarray",
      "category": "KQL Function"
    },
    {
      "name": "base64_decode_toguid",
      "category": "KQL Function"
    },
    {
      "name": "base64_decode_tostring",
      "category": "KQL Function"
    },
    {
      "name": "base64_decodestring",
      "category": "KQL Function"
    },
    {
      "name": "base64_encode_fromarray",
      "category": "KQL Function"
    },
    {
      "name": "base64_encode_fromguid",
      "category": "KQL Function"
    },
    {
      "name": "base64_encode_tostring",
      "category": "KQL Function"
    },
    {
      "name": "base64_encodestring",
      "category": "KQL Function"
    },
    {
      "name": "beta_cdf",
      "category": "KQL Function"
    },
    {
      "name": "beta_inv",
      "category": "KQL Function"
    },
    {
      "name": "beta_pdf",
      "category": "KQL Function"
    },
    {
      "name": "bin",
      "category": "KQL Function"
    },
    {
      "name": "bin_at",
      "category": "KQL Function"
    },
    {
      "name": "bin_auto",
      "category": "KQL Function"
    },
    {
      "name": "binary_and",
      "category": "KQL Function"
    },
    {
      "name": "binary_not",
      "category": "KQL Function"
    },
    {
      "name": "binary_or",
      "category": "KQL Function"
    },
    {
      "name": "binary_shift_left",
      "category": "KQL Function"
    },
    {
      "name": "binary_shift_right",
      "category": "KQL Function"
    },
    {
      "name": "binary_xor",
      "category": "KQL Function"
    },
    {
      "name": "bitset_count_ones",
      "category": "KQL Function"
    },
    {
      "name": "case",
      "category": "KQL Function"
    },
    {
      "name": "ceiling",
      "category": "KQL Function"
    },
    {
      "name": "cluster",
      "category": "KQL Function"
    },
    {
      "name": "coalesce",
      "category": "KQL Function"
    },
    {
      "name": "column_ifexists",
      "category": "KQL Function"
    },
    {
      "name": "column_names_of",
      "category": "KQL Function"
    },
    {
      "name": "columnifexists",
      "category": "KQL Function"
    },
    {
      "name": "convert_angle",
      "category": "KQL Function"
    },
    {
      "name": "convert_energy",
      "category": "KQL Function"
    },
    {
      "name": "convert_force",
      "category": "KQL Function"
    },
    {
      "name": "convert_length",
      "category": "KQL Function"
    },
    {
      "name": "convert_mass",
      "category": "KQL Function"
    },
    {
      "name": "convert_speed",
      "category": "KQL Function"
    },
    {
      "name": "convert_temperature",
      "category": "KQL Function"
    },
    {
      "name": "convert_volume",
      "category": "KQL Function"
    },
    {
      "name": "cos",
      "category": "KQL Function"
    },
    {
      "name": "cot",
      "category": "KQL Function"
    },
    {
      "name": "countof",
      "category": "KQL Function"
    },
    {
      "name": "current_cluster_endpoint",
      "category": "KQL Function"
    },
    {
      "name": "current_cursor",
      "category": "KQL Function"
    },
    {
      "name": "current_database",
      "category": "KQL Function"
    },
    {
      "name": "current_node_id",
      "category": "KQL Function"
    },
    {
      "name": "current_principal",
      "category": "KQL Function"
    },
    {
      "name": "current_principal_details",
      "category": "KQL Function"
    },
    {
      "name": "current_principal_is_member_of",
      "category": "KQL Function"
    },
    {
      "name": "cursor_after",
      "category": "KQL Function"
    },
    {
      "name": "cursor_before_or_at",
      "category": "KQL Function"
    },
    {
      "name": "cursor_current",
      "category": "KQL Function"
    },
    {
      "name": "database",
      "category": "KQL Function"
    },
    {
      "name": "datepart",
      "category": "KQL Function"
    },
    {
      "name": "datetime_add",
      "category": "KQL Function"
    },
    {
      "name": "datetime_diff",
      "category": "KQL Function"
    },
    {
      "name": "datetime_list_timezones",
      "category": "KQL Function"
    },
    {
      "name": "datetime_local_to_utc",
      "category": "KQL Function"
    },
    {
      "name": "datetime_part",
      "category": "KQL Function"
    },
    {
      "name": "datetime_utc_to_local",
      "category": "KQL Function"
    },
    {
      "name": "dayofmonth",
      "category": "KQL Function"
    },
    {
      "name": "dayofweek",
      "category": "KQL Function"
    },
    {
      "name": "dayofyear",
      "category": "KQL Function"
    },
    {
      "name": "dcount_hll",
      "category": "KQL Function"
    },
    {
      "name": "degrees",
      "category": "KQL Function"
    },
    {
      "name": "dynamic_to_json",
      "category": "KQL Function"
    },
    {
      "name": "endofday",
      "category": "KQL Function"
    },
    {
      "name": "endofmonth",
      "category": "KQL Function"
    },
    {
      "name": "endofweek",
      "category": "KQL Function"
    },
    {
      "name": "endofyear",
      "category": "KQL Function"
    },
    {
      "name": "entity_group",
      "category": "KQL Function"
    },
    {
      "name": "erf",
      "category": "KQL Function"
    },
    {
      "name": "erfc",
      "category": "KQL Function"
    },
    {
      "name": "estimate_data_size",
      "category": "KQL Function"
    },
    {
      "name": "exp",
      "category": "KQL Function"
    },
    {
      "name": "exp10",
      "category": "KQL Function"
    },
    {
      "name": "exp2",
      "category": "KQL Function"
    },
    {
      "name": "extent_id",
      "category": "KQL Function"
    },
    {
      "name": "extent_tags",
      "category": "KQL Function"
    },
    {
      "name": "extentid",
      "category": "KQL Function"
    },
    {
      "name": "external_table",
      "category": "KQL Function"
    },
    {
      "name": "extract",
      "category": "KQL Function"
    },
    {
      "name": "extract_all",
      "category": "KQL Function"
    },
    {
      "name": "extract_json",
      "category": "KQL Function"
    },
    {
      "name": "extractall",
      "category": "KQL Function"
    },
    {
      "name": "extractjson",
      "category": "KQL Function"
    },
    {
      "name": "floor",
      "category": "KQL Function"
    },
    {
      "name": "format_bytes",
      "category": "KQL Function"
    },
    {
      "name": "format_datetime",
      "category": "KQL Function"
    },
    {
      "name": "format_ipv4",
      "category": "KQL Function"
    },
    {
      "name": "format_ipv4_mask",
      "category": "KQL Function"
    },
    {
      "name": "format_timespan",
      "category": "KQL Function"
    },
    {
      "name": "gamma",
      "category": "KQL Function"
    },
    {
      "name": "geo_angle",
      "category": "KQL Function"
    },
    {
      "name": "geo_azimuth",
      "category": "KQL Function"
    },
    {
      "name": "geo_closest_point_on_line",
      "category": "KQL Function"
    },
    {
      "name": "geo_closest_point_on_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_distance_2points",
      "category": "KQL Function"
    },
    {
      "name": "geo_distance_point_to_line",
      "category": "KQL Function"
    },
    {
      "name": "geo_distance_point_to_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_from_wkt",
      "category": "KQL Function"
    },
    {
      "name": "geo_geohash_neighbors",
      "category": "KQL Function"
    },
    {
      "name": "geo_geohash_to_central_point",
      "category": "KQL Function"
    },
    {
      "name": "geo_geohash_to_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_children",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_level",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_neighbors",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_parent",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_rings",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_to_central_point",
      "category": "KQL Function"
    },
    {
      "name": "geo_h3cell_to_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_info_from_ip_address",
      "category": "KQL Function"
    },
    {
      "name": "geo_intersection_2lines",
      "category": "KQL Function"
    },
    {
      "name": "geo_intersection_2polygons",
      "category": "KQL Function"
    },
    {
      "name": "geo_intersection_line_with_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_intersects_2lines",
      "category": "KQL Function"
    },
    {
      "name": "geo_intersects_2polygons",
      "category": "KQL Function"
    },
    {
      "name": "geo_intersects_line_with_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_buffer",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_centroid",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_densify",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_interpolate_point",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_length",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_locate_point",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_simplify",
      "category": "KQL Function"
    },
    {
      "name": "geo_line_to_s2cells",
      "category": "KQL Function"
    },
    {
      "name": "geo_point_buffer",
      "category": "KQL Function"
    },
    {
      "name": "geo_point_in_circle",
      "category": "KQL Function"
    },
    {
      "name": "geo_point_in_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_point_to_geohash",
      "category": "KQL Function"
    },
    {
      "name": "geo_point_to_h3cell",
      "category": "KQL Function"
    },
    {
      "name": "geo_point_to_s2cell",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_area",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_buffer",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_centroid",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_densify",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_perimeter",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_simplify",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_to_h3cells",
      "category": "KQL Function"
    },
    {
      "name": "geo_polygon_to_s2cells",
      "category": "KQL Function"
    },
    {
      "name": "geo_s2cell_neighbors",
      "category": "KQL Function"
    },
    {
      "name": "geo_s2cell_to_central_point",
      "category": "KQL Function"
    },
    {
      "name": "geo_s2cell_to_polygon",
      "category": "KQL Function"
    },
    {
      "name": "geo_simplify_polygons_array",
      "category": "KQL Function"
    },
    {
      "name": "geo_union_lines_array",
      "category": "KQL Function"
    },
    {
      "name": "geo_union_polygons_array",
      "category": "KQL Function"
    },
    {
      "name": "getmonth",
      "category": "KQL Function"
    },
    {
      "name": "gettype",
      "category": "KQL Function"
    },
    {
      "name": "getyear",
      "category": "KQL Function"
    },
    {
      "name": "graph",
      "category": "KQL Function"
    },
    {
      "name": "gzip_compress_to_base64_string",
      "category": "KQL Function"
    },
    {
      "name": "gzip_decompress_from_base64_string",
      "category": "KQL Function"
    },
    {
      "name": "has_any_index",
      "category": "KQL Function"
    },
    {
      "name": "has_any_ipv4",
      "category": "KQL Function"
    },
    {
      "name": "has_any_ipv4_prefix",
      "category": "KQL Function"
    },
    {
      "name": "has_ipv4",
      "category": "KQL Function"
    },
    {
      "name": "has_ipv4_prefix",
      "category": "KQL Function"
    },
    {
      "name": "hash",
      "category": "KQL Function"
    },
    {
      "name": "hash_combine",
      "category": "KQL Function"
    },
    {
      "name": "hash_many",
      "category": "KQL Function"
    },
    {
      "name": "hash_md5",
      "category": "KQL Function"
    },
    {
      "name": "hash_sha1",
      "category": "KQL Function"
    },
    {
      "name": "hash_sha256",
      "category": "KQL Function"
    },
    {
      "name": "hash_xxhash64",
      "category": "KQL Function"
    },
    {
      "name": "hll_isvalid",
      "category": "KQL Function"
    },
    {
      "name": "hll_merge",
      "category": "KQL Function"
    },
    {
      "name": "hourofday",
      "category": "KQL Function"
    },
    {
      "name": "iff",
      "category": "KQL Function"
    },
    {
      "name": "iif",
      "category": "KQL Function"
    },
    {
      "name": "indexof",
      "category": "KQL Function"
    },
    {
      "name": "indexof_regex",
      "category": "KQL Function"
    },
    {
      "name": "ingestion_time",
      "category": "KQL Function"
    },
    {
      "name": "inner_nodes",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_compare",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_is_in_any_range",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_is_in_range",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_is_match",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_is_private",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_netmask_suffix",
      "category": "KQL Function"
    },
    {
      "name": "ipv4_range_to_cidr_list",
      "category": "KQL Function"
    },
    {
      "name": "ipv6_compare",
      "category": "KQL Function"
    },
    {
      "name": "ipv6_is_in_any_range",
      "category": "KQL Function"
    },
    {
      "name": "ipv6_is_in_range",
      "category": "KQL Function"
    },
    {
      "name": "ipv6_is_match",
      "category": "KQL Function"
    },
    {
      "name": "isascii",
      "category": "KQL Function"
    },
    {
      "name": "iscolumnexists",
      "category": "KQL Function"
    },
    {
      "name": "isempty",
      "category": "KQL Function"
    },
    {
      "name": "isfinite",
      "category": "KQL Function"
    },
    {
      "name": "isinf",
      "category": "KQL Function"
    },
    {
      "name": "isnan",
      "category": "KQL Function"
    },
    {
      "name": "isnotempty",
      "category": "KQL Function"
    },
    {
      "name": "isnotnull",
      "category": "KQL Function"
    },
    {
      "name": "isnull",
      "category": "KQL Function"
    },
    {
      "name": "isutf8",
      "category": "KQL Function"
    },
    {
      "name": "jaccard_index",
      "category": "KQL Function"
    },
    {
      "name": "labels",
      "category": "KQL Function"
    },
    {
      "name": "log",
      "category": "KQL Function"
    },
    {
      "name": "log10",
      "category": "KQL Function"
    },
    {
      "name": "log2",
      "category": "KQL Function"
    },
    {
      "name": "loggamma",
      "category": "KQL Function"
    },
    {
      "name": "make_datetime",
      "category": "KQL Function"
    },
    {
      "name": "make_string",
      "category": "KQL Function"
    },
    {
      "name": "make_timespan",
      "category": "KQL Function"
    },
    {
      "name": "map",
      "category": "KQL Function"
    },
    {
      "name": "materialized_view",
      "category": "KQL Function"
    },
    {
      "name": "max_of",
      "category": "KQL Function"
    },
    {
      "name": "merge_tdigest",
      "category": "KQL Function"
    },
    {
      "name": "min_of",
      "category": "KQL Function"
    },
    {
      "name": "monthofyear",
      "category": "KQL Function"
    },
    {
      "name": "new_guid",
      "category": "KQL Function"
    },
    {
      "name": "next",
      "category": "KQL Function"
    },
    {
      "name": "node_degree_in",
      "category": "KQL Function"
    },
    {
      "name": "node_degree_out",
      "category": "KQL Function"
    },
    {
      "name": "node_id",
      "category": "KQL Function"
    },
    {
      "name": "not",
      "category": "KQL Function"
    },
    {
      "name": "notempty",
      "category": "KQL Function"
    },
    {
      "name": "notnull",
      "category": "KQL Function"
    },
    {
      "name": "now",
      "category": "KQL Function"
    },
    {
      "name": "pack",
      "category": "KQL Function"
    },
    {
      "name": "pack_all",
      "category": "KQL Function"
    },
    {
      "name": "pack_array",
      "category": "KQL Function"
    },
    {
      "name": "pack_dictionary",
      "category": "KQL Function"
    },
    {
      "name": "parse_command_line",
      "category": "KQL Function"
    },
    {
      "name": "parse_csv",
      "category": "KQL Function"
    },
    {
      "name": "parse_ipv4",
      "category": "KQL Function"
    },
    {
      "name": "parse_ipv4_mask",
      "category": "KQL Function"
    },
    {
      "name": "parse_ipv6",
      "category": "KQL Function"
    },
    {
      "name": "parse_ipv6_mask",
      "category": "KQL Function"
    },
    {
      "name": "parse_json",
      "category": "KQL Function"
    },
    {
      "name": "parse_path",
      "category": "KQL Function"
    },
    {
      "name": "parse_url",
      "category": "KQL Function"
    },
    {
      "name": "parse_urlquery",
      "category": "KQL Function"
    },
    {
      "name": "parse_user_agent",
      "category": "KQL Function"
    },
    {
      "name": "parse_version",
      "category": "KQL Function"
    },
    {
      "name": "parse_xml",
      "category": "KQL Function"
    },
    {
      "name": "parsejson",
      "category": "KQL Function"
    },
    {
      "name": "parseurl",
      "category": "KQL Function"
    },
    {
      "name": "parseurlquery",
      "category": "KQL Function"
    },
    {
      "name": "percentile_tdigest",
      "category": "KQL Function"
    },
    {
      "name": "percentiles_array_tdigest",
      "category": "KQL Function"
    },
    {
      "name": "percentrank_tdigest",
      "category": "KQL Function"
    },
    {
      "name": "pi",
      "category": "KQL Function"
    },
    {
      "name": "pow",
      "category": "KQL Function"
    },
    {
      "name": "prev",
      "category": "KQL Function"
    },
    {
      "name": "punycode_domain_from_string",
      "category": "KQL Function"
    },
    {
      "name": "punycode_domain_to_string",
      "category": "KQL Function"
    },
    {
      "name": "punycode_from_string",
      "category": "KQL Function"
    },
    {
      "name": "punycode_to_string",
      "category": "KQL Function"
    },
    {
      "name": "radians",
      "category": "KQL Function"
    },
    {
      "name": "rand",
      "category": "KQL Function"
    },
    {
      "name": "range",
      "category": "KQL Function"
    },
    {
      "name": "rank_tdigest",
      "category": "KQL Function"
    },
    {
      "name": "regex_quote",
      "category": "KQL Function"
    },
    {
      "name": "repeat",
      "category": "KQL Function"
    },
    {
      "name": "replace",
      "category": "KQL Function"
    },
    {
      "name": "replace_regex",
      "category": "KQL Function"
    },
    {
      "name": "replace_string",
      "category": "KQL Function"
    },
    {
      "name": "replace_strings",
      "category": "KQL Function"
    },
    {
      "name": "reverse",
      "category": "KQL Function"
    },
    {
      "name": "round",
      "category": "KQL Function"
    },
    {
      "name": "row_cumsum",
      "category": "KQL Function"
    },
    {
      "name": "row_number",
      "category": "KQL Function"
    },
    {
      "name": "row_rank",
      "category": "KQL Function"
    },
    {
      "name": "row_rank_dense",
      "category": "KQL Function"
    },
    {
      "name": "row_rank_min",
      "category": "KQL Function"
    },
    {
      "name": "row_window_session",
      "category": "KQL Function"
    },
    {
      "name": "rowstore_ordinal_range",
      "category": "KQL Function"
    },
    {
      "name": "series_abs",
      "category": "KQL Function"
    },
    {
      "name": "series_acos",
      "category": "KQL Function"
    },
    {
      "name": "series_add",
      "category": "KQL Function"
    },
    {
      "name": "series_asin",
      "category": "KQL Function"
    },
    {
      "name": "series_atan",
      "category": "KQL Function"
    },
    {
      "name": "series_ceiling",
      "category": "KQL Function"
    },
    {
      "name": "series_cos",
      "category": "KQL Function"
    },
    {
      "name": "series_cosine_similarity",
      "category": "KQL Function"
    },
    {
      "name": "series_decompose",
      "category": "KQL Function"
    },
    {
      "name": "series_decompose_anomalies",
      "category": "KQL Function"
    },
    {
      "name": "series_decompose_forecast",
      "category": "KQL Function"
    },
    {
      "name": "series_divide",
      "category": "KQL Function"
    },
    {
      "name": "series_dot_product",
      "category": "KQL Function"
    },
    {
      "name": "series_equals",
      "category": "KQL Function"
    },
    {
      "name": "series_exp",
      "category": "KQL Function"
    },
    {
      "name": "series_fft",
      "category": "KQL Function"
    },
    {
      "name": "series_fill_backward",
      "category": "KQL Function"
    },
    {
      "name": "series_fill_const",
      "category": "KQL Function"
    },
    {
      "name": "series_fill_forward",
      "category": "KQL Function"
    },
    {
      "name": "series_fill_linear",
      "category": "KQL Function"
    },
    {
      "name": "series_fir",
      "category": "KQL Function"
    },
    {
      "name": "series_fit_2lines",
      "category": "KQL Function"
    },
    {
      "name": "series_fit_2lines_dynamic",
      "category": "KQL Function"
    },
    {
      "name": "series_fit_line",
      "category": "KQL Function"
    },
    {
      "name": "series_fit_line_dynamic",
      "category": "KQL Function"
    },
    {
      "name": "series_fit_poly",
      "category": "KQL Function"
    },
    {
      "name": "series_floor",
      "category": "KQL Function"
    },
    {
      "name": "series_greater",
      "category": "KQL Function"
    },
    {
      "name": "series_greater_equals",
      "category": "KQL Function"
    },
    {
      "name": "series_ifft",
      "category": "KQL Function"
    },
    {
      "name": "series_iir",
      "category": "KQL Function"
    },
    {
      "name": "series_less",
      "category": "KQL Function"
    },
    {
      "name": "series_less_equals",
      "category": "KQL Function"
    },
    {
      "name": "series_log",
      "category": "KQL Function"
    },
    {
      "name": "series_magnitude",
      "category": "KQL Function"
    },
    {
      "name": "series_multiply",
      "category": "KQL Function"
    },
    {
      "name": "series_not_equals",
      "category": "KQL Function"
    },
    {
      "name": "series_outliers",
      "category": "KQL Function"
    },
    {
      "name": "series_pearson_correlation",
      "category": "KQL Function"
    },
    {
      "name": "series_periods_detect",
      "category": "KQL Function"
    },
    {
      "name": "series_periods_validate",
      "category": "KQL Function"
    },
    {
      "name": "series_pow",
      "category": "KQL Function"
    },
    {
      "name": "series_product",
      "category": "KQL Function"
    },
    {
      "name": "series_seasonal",
      "category": "KQL Function"
    },
    {
      "name": "series_sign",
      "category": "KQL Function"
    },
    {
      "name": "series_sin",
      "category": "KQL Function"
    },
    {
      "name": "series_stats",
      "category": "KQL Function"
    },
    {
      "name": "series_stats_dynamic",
      "category": "KQL Function"
    },
    {
      "name": "series_subtract",
      "category": "KQL Function"
    },
    {
      "name": "series_sum",
      "category": "KQL Function"
    },
    {
      "name": "series_tan",
      "category": "KQL Function"
    },
    {
      "name": "set_difference",
      "category": "KQL Function"
    },
    {
      "name": "set_equals",
      "category": "KQL Function"
    },
    {
      "name": "set_has_element",
      "category": "KQL Function"
    },
    {
      "name": "set_intersect",
      "category": "KQL Function"
    },
    {
      "name": "set_union",
      "category": "KQL Function"
    },
    {
      "name": "sign",
      "category": "KQL Function"
    },
    {
      "name": "sin",
      "category": "KQL Function"
    },
    {
      "name": "split",
      "category": "KQL Function"
    },
    {
      "name": "sqrt",
      "category": "KQL Function"
    },
    {
      "name": "startofday",
      "category": "KQL Function"
    },
    {
      "name": "startofmonth",
      "category": "KQL Function"
    },
    {
      "name": "startofweek",
      "category": "KQL Function"
    },
    {
      "name": "startofyear",
      "category": "KQL Function"
    },
    {
      "name": "stored_query_result",
      "category": "KQL Function"
    },
    {
      "name": "strcat",
      "category": "KQL Function"
    },
    {
      "name": "strcat_array",
      "category": "KQL Function"
    },
    {
      "name": "strcat_delim",
      "category": "KQL Function"
    },
    {
      "name": "strcmp",
      "category": "KQL Function"
    },
    {
      "name": "string_size",
      "category": "KQL Function"
    },
    {
      "name": "strlen",
      "category": "KQL Function"
    },
    {
      "name": "strrep",
      "category": "KQL Function"
    },
    {
      "name": "substring",
      "category": "KQL Function"
    },
    {
      "name": "table",
      "category": "KQL Function"
    },
    {
      "name": "tan",
      "category": "KQL Function"
    },
    {
      "name": "tdigest_isvalid",
      "category": "KQL Function"
    },
    {
      "name": "tdigest_merge",
      "category": "KQL Function"
    },
    {
      "name": "to_utf8",
      "category": "KQL Function"
    },
    {
      "name": "tobool",
      "category": "KQL Function"
    },
    {
      "name": "toboolean",
      "category": "KQL Function"
    },
    {
      "name": "todatetime",
      "category": "KQL Function"
    },
    {
      "name": "todecimal",
      "category": "KQL Function"
    },
    {
      "name": "todouble",
      "category": "KQL Function"
    },
    {
      "name": "todynamic",
      "category": "KQL Function"
    },
    {
      "name": "toguid",
      "category": "KQL Function"
    },
    {
      "name": "tohex",
      "category": "KQL Function"
    },
    {
      "name": "toint",
      "category": "KQL Function"
    },
    {
      "name": "tolong",
      "category": "KQL Function"
    },
    {
      "name": "tolower",
      "category": "KQL Function"
    },
    {
      "name": "toobject",
      "category": "KQL Function"
    },
    {
      "name": "toreal",
      "category": "KQL Function"
    },
    {
      "name": "tostring",
      "category": "KQL Function"
    },
    {
      "name": "totime",
      "category": "KQL Function"
    },
    {
      "name": "totimespan",
      "category": "KQL Function"
    },
    {
      "name": "toupper",
      "category": "KQL Function"
    },
    {
      "name": "translate",
      "category": "KQL Function"
    },
    {
      "name": "treepath",
      "category": "KQL Function"
    },
    {
      "name": "trim",
      "category": "KQL Function"
    },
    {
      "name": "trim_end",
      "category": "KQL Function"
    },
    {
      "name": "trim_start",
      "category": "KQL Function"
    },
    {
      "name": "unicode_codepoints_from_string",
      "category": "KQL Function"
    },
    {
      "name": "unicode_codepoints_to_string",
      "category": "KQL Function"
    },
    {
      "name": "unixtime_microseconds_todatetime",
      "category": "KQL Function"
    },
    {
      "name": "unixtime_milliseconds_todatetime",
      "category": "KQL Function"
    },
    {
      "name": "unixtime_nanoseconds_todatetime",
      "category": "KQL Function"
    },
    {
      "name": "unixtime_seconds_todatetime",
      "category": "KQL Function"
    },
    {
      "name": "url_decode",
      "category": "KQL Function"
    },
    {
      "name": "url_encode",
      "category": "KQL Function"
    },
    {
      "name": "url_encode_component",
      "category": "KQL Function"
    },
    {
      "name": "week_of_year",
      "category": "KQL Function"
    },
    {
      "name": "weekofyear",
      "category": "KQL Function"
    },
    {
      "name": "welch_test",
      "category": "KQL Function"
    },
    {
      "name": "zip",
      "category": "KQL Function"
    },
    {
      "name": "zlib_compress_to_base64_string",
      "category": "KQL Function"
    },
    {
      "name": "zlib_decompress_from_base64_string",
      "category": "KQL Function"
    }
  ],
  "aggregates": [
    {
      "name": "any",
      "category": "Aggregate Function"
    },
    {
      "name": "anyif",
      "category": "Aggregate Function"
    },
    {
      "name": "arg_max",
      "category": "Aggregate Function"
    },
    {
      "name": "arg_min",
      "category": "Aggregate Function"
    },
    {
      "name": "argmax",
      "category": "Aggregate Function"
    },
    {
      "name": "argmin",
      "category": "Aggregate Function"
    },
    {
      "name": "avg",
      "category": "Aggregate Function"
    },
    {
      "name": "avgif",
      "category": "Aggregate Function"
    },
    {
      "name": "binary_all_and",
      "category": "Aggregate Function"
    },
    {
      "name": "binary_all_or",
      "category": "Aggregate Function"
    },
    {
      "name": "binary_all_xor",
      "category": "Aggregate Function"
    },
    {
      "name": "buildschema",
      "category": "Aggregate Function"
    },
    {
      "name": "cnt",
      "category": "Aggregate Function"
    },
    {
      "name": "count",
      "category": "Aggregate Function"
    },
    {
      "name": "count_distinct",
      "category": "Aggregate Function"
    },
    {
      "name": "count_distinctif",
      "category": "Aggregate Function"
    },
    {
      "name": "countif",
      "category": "Aggregate Function"
    },
    {
      "name": "covariance",
      "category": "Aggregate Function"
    },
    {
      "name": "covarianceif",
      "category": "Aggregate Function"
    },
    {
      "name": "covariancep",
      "category": "Aggregate Function"
    },
    {
      "name": "covariancepif",
      "category": "Aggregate Function"
    },
    {
      "name": "dcount",
      "category": "Aggregate Function"
    },
    {
      "name": "dcountif",
      "category": "Aggregate Function"
    },
    {
      "name": "hll",
      "category": "Aggregate Function"
    },
    {
      "name": "hll_if",
      "category": "Aggregate Function"
    },
    {
      "name": "hll_merge",
      "category": "Aggregate Function"
    },
    {
      "name": "make_bag",
      "category": "Aggregate Function"
    },
    {
      "name": "make_bag_if",
      "category": "Aggregate Function"
    },
    {
      "name": "make_dictionary",
      "category": "Aggregate Function"
    },
    {
      "name": "make_list",
      "category": "Aggregate Function"
    },
    {
      "name": "make_list_if",
      "category": "Aggregate Function"
    },
    {
      "name": "make_list_with_nulls",
      "category": "Aggregate Function"
    },
    {
      "name": "make_set",
      "category": "Aggregate Function"
    },
    {
      "name": "make_set_if",
      "category": "Aggregate Function"
    },
    {
      "name": "makelist",
      "category": "Aggregate Function"
    },
    {
      "name": "makeset",
      "category": "Aggregate Function"
    },
    {
      "name": "max",
      "category": "Aggregate Function"
    },
    {
      "name": "maxif",
      "category": "Aggregate Function"
    },
    {
      "name": "merge_tdigest",
      "category": "Aggregate Function"
    },
    {
      "name": "min",
      "category": "Aggregate Function"
    },
    {
      "name": "minif",
      "category": "Aggregate Function"
    },
    {
      "name": "passthrough",
      "category": "Aggregate Function"
    },
    {
      "name": "percentile",
      "category": "Aggregate Function"
    },
    {
      "name": "percentiles",
      "category": "Aggregate Function"
    },
    {
      "name": "percentiles_array",
      "category": "Aggregate Function"
    },
    {
      "name": "percentilesw",
      "category": "Aggregate Function"
    },
    {
      "name": "percentilesw_array",
      "category": "Aggregate Function"
    },
    {
      "name": "percentilew",
      "category": "Aggregate Function"
    },
    {
      "name": "stdev",
      "category": "Aggregate Function"
    },
    {
      "name": "stdevif",
      "category": "Aggregate Function"
    },
    {
      "name": "stdevp",
      "category": "Aggregate Function"
    },
    {
      "name": "sum",
      "category": "Aggregate Function"
    },
    {
      "name": "sumif",
      "category": "Aggregate Function"
    },
    {
      "name": "take_any",
      "category": "Aggregate Function"
    },
    {
      "name": "take_anyif",
      "category": "Aggregate Function"
    },
    {
      "name": "tdigest",
      "category": "Aggregate Function"
    },
    {
      "name": "tdigest_merge",
      "category": "Aggregate Function"
    },
    {
      "name": "variance",
      "category": "Aggregate Function"
    },
    {
      "name": "varianceif",
      "category": "Aggregate Function"
    },
    {
      "name": "variancep",
      "category": "Aggregate Function"
    },
    {
      "name": "variancepif",
      "category": "Aggregate Function"
    }
  ],
  "lastUpdated": "2025-09-11T13:20:42.137Z"
}