{
  "tables": {
    "advisorresources": {
      "name": "advisorresources",
      "resourceTypes": [
        "microsoft.advisor/assessments",
        "microsoft.advisor/configurations",
        "microsoft.advisor/recommendations",
        "microsoft.advisor/recommendations/suppressions",
        "microsoft.advisor/resiliencyreviews",
        "microsoft.advisor/suppressions",
        "microsoft.advisor/triagerecommendations",
        "microsoft.advisor/triageresources"
      ],
      "examples": [
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'Cost'\n| extend\nresources = tostring(properties.resourceMetadata.resourceId),\nsavings = todouble(properties.extendedProperties.savingsAmount),\nsolution = tostring(properties.shortDescription.solution),\ncurrency = tostring(properties.extendedProperties.savingsCurrency)\n| summarize\ndcount(resources),\nbin(sum(savings), 0.01)\nby solution, currency\n| project solution, dcount_resources, sum_savings, currency\n| order by sum_savings desc",
          "source": "kql",
          "length": 533,
          "startsWithTable": true
        },
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'HighAvailability'\n| where properties.shortDescription.solution == 'Upgrade to the latest version of the Azure Connected Machine agent'\n| project\nid,\nJoinId = toupper(properties.resourceMetadata.resourceId),\nmachineName = tostring(properties.impactedValue),\nagentVersion = tostring(properties.extendedProperties.installedVersion),\nexpectedVersion = tostring(properties.extendedProperties.latestVersion)\n| join kind=leftouter(\nResources\n| where type == 'microsoft.hybridcompute/machines'\n| project\nmachineId = toupper(id),\nstatus = tostring (properties.status)\n) on $left.JoinId == $right.machineId\n| where status != 'Expired'\n| summarize by id, machineName, agentVersion, expectedVersion\n| order by tolower(machineName) asc",
          "source": "kql",
          "length": 823,
          "startsWithTable": true
        },
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'HighAvailability'\n| where properties.shortDescription.solution == 'Upgrade to the latest version of the Azure Connected Machine agent'\n| project  id,  JoinId = toupper(properties.resourceMetadata.resourceId),  machineName = tostring(properties.impactedValue),  agentVersion = tostring(properties.extendedProperties.installedVersion),  expectedVersion = tostring(properties.extendedProperties.latestVersion)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project  machineId = toupper(id),  status = tostring (properties.status) ) on \\$left.JoinId == \\$right.machineId\n| where status != 'Expired'\n| summarize by id, machineName, agentVersion, expectedVersion\n| order by tolower(machineName) asc",
          "source": "cli",
          "length": 832,
          "startsWithTable": true
        },
        {
          "code": "AdvisorResources\n| where type == 'microsoft.advisor/recommendations'\n| where properties.category == 'HighAvailability'\n| where properties.shortDescription.solution == 'Upgrade to the latest version of the Azure Connected Machine agent'\n| project  id,  JoinId = toupper(properties.resourceMetadata.resourceId),  machineName = tostring(properties.impactedValue),  agentVersion = tostring(properties.extendedProperties.installedVersion),  expectedVersion = tostring(properties.extendedProperties.latestVersion)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project  machineId = toupper(id),  status = tostring (properties.status) ) on $left.JoinId == $right.machineId\n| where status != 'Expired'\n| summarize by id, machineName, agentVersion, expectedVersion\n| order by tolower(machineName) asc",
          "source": "powershell",
          "length": 830,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Advisor"
    },
    "aksresources": {
      "name": "aksresources",
      "resourceTypes": [
        "microsoft.containerservice/fleetmemberships",
        "microsoft.containerservice/fleets/autoupgradeprofiles",
        "microsoft.containerservice/fleets/gates",
        "microsoft.containerservice/fleets/members",
        "microsoft.containerservice/fleets/updateruns",
        "microsoft.containerservice/fleets/updatestrategies"
      ],
      "examples": []
    },
    "alertsmanagementresources": {
      "name": "alertsmanagementresources",
      "resourceTypes": [
        "microsoft.alertsmanagement/alerts"
      ],
      "examples": [
        {
          "code": "alertsmanagementresources\n| where type =~ 'microsoft.alertsmanagement/alerts'\n| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()\n| project Severity = tostring(properties.essentials.severity)\n| summarize AlertsCount = count() by Severity",
          "source": "kql",
          "length": 312,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where type =~ 'microsoft.alertsmanagement/alerts'\n| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()\n| project Severity = tostring(properties.essentials.severity),\nAlertState= tostring(properties.essentials.alertState)\n| summarize AlertsCount = count() by Severity, AlertState",
          "source": "kql",
          "length": 380,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| project\nalertId = id,\nname,\nmonitorCondition = tostring(properties.essentials.monitorCondition),\nseverity = tostring(properties.essentials.severity),\nmonitorService = tostring(properties.essentials.monitorService),\nalertState = tostring(properties.essentials.alertState),\ntargetResourceType = tostring(properties.essentials.targetResourceType),\ntargetResource = tostring(properties.essentials.targetResource),\nsubscriptionId,\nstartDateTime = todatetime(properties.essentials.startDateTime),\nlastModifiedDateTime = todatetime(properties.essentials.lastModifiedDateTime),\ndimensions = properties.context.context.condition.allOf[0].dimensions, properties",
          "source": "kql",
          "length": 734,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where type =~ 'microsoft.alertsmanagement/alerts'\n| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()\n| project Severity = tostring(properties.essentials.severity),\nMonitorCondition = tostring(properties.essentials.monitorCondition),\nObjectState = tostring(properties.essentials.alertState),\nMonitorService = tostring(properties.essentials.monitorService),\nAlertRuleId = tostring(properties.essentials.alertRule),\nSignalType = tostring(properties.essentials.signalType),\nTargetResource = tostring(properties.essentials.targetResourceName),\nTargetResourceType = tostring(properties.essentials.targetResourceName), id\n| summarize AlertsCount = count() by Severity, MonitorService , TargetResourceType",
          "source": "kql",
          "length": 801,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| where tostring(properties.essentials.monitorService)  \"ActivityLog Administrative\"\n| project // converting extracted fields to string / datetime to allow grouping\nalertId = id,\nname,\nmonitorCondition = tostring(properties.essentials.monitorCondition),\nseverity = tostring(properties.essentials.severity),\nmonitorService = tostring(properties.essentials.monitorService),\nalertState = tostring(properties.essentials.alertState),\ntargetResourceType = tostring(properties.essentials.targetResourceType),\ntargetResource = tostring(properties.essentials.targetResource),\nsubscriptionId,\nstartDateTime = todatetime(properties.essentials.startDateTime),\nlastModifiedDateTime = todatetime(properties.essentials.lastModifiedDateTime),\ndimensions = properties.context.context.condition.allOf[0].dimensions, // usefor metric alerts and log search alerts\nproperties\n| extend targetResource = tolower(targetResource)\n| join kind=leftouter\n( resources | project targetResource = tolower(id), targetResourceTags = tags) on targetResource\n| project-away targetResource1",
          "source": "kql",
          "length": 1135,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| where tostring(properties.essentials.monitorService)",
          "source": "cli",
          "length": 135,
          "startsWithTable": true
        },
        {
          "code": "alertsmanagementresources\n| where properties.essentials.startDateTime > ago(12h)\n| project   alertId = id,   name,   monitorCondition = tostring(properties.essentials.monitorCondition),   severity = tostring(properties.essentials.severity),   monitorService = tostring(properties.essentials.monitorService),   alertState = tostring(properties.essentials.alertState),   targetResourceType = tostring(properties.essentials.targetResourceType),   targetResource = tostring(properties.essentials.targetResource),   subscriptionId,   startDateTime = todatetime(properties.essentials.startDateTime),   lastModifiedDateTime = todatetime(properties.essentials.lastModifiedDateTime),   dimensions = properties.context.context.condition.allOf[0].dimensions, properties",
          "source": "cli",
          "length": 758,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.AlertsManagement"
    },
    "appserviceresources": {
      "name": "appserviceresources",
      "resourceTypes": [
        "microsoft.web/sites/config",
        "microsoft.web/sites/slots/config",
        "microsoft.web/sites/workflows"
      ],
      "examples": [
        {
          "code": "AppServiceResources\n| where type =~ 'microsoft.web/sites/config'\n| project id, name, properties.MinTlsVersion",
          "source": "kql",
          "length": 109,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Web"
    },
    "authorizationresources": {
      "name": "authorizationresources",
      "resourceTypes": [
        "microsoft.authorization/classicadministrators",
        "microsoft.authorization/roleassignments",
        "microsoft.authorization/roledefinitions"
      ],
      "examples": [
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/classicadministrators'\n| extend state = properties.adminState\n| extend roles = split(properties.role, ';')\n| take 5",
          "source": "kql",
          "length": 179,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roledefinitions'\n| extend assignableScopes = properties.assignableScopes\n| extend permissionsList = properties.permissions\n| extend isServiceRole = properties.isServiceRole\n| take 5",
          "source": "kql",
          "length": 245,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roleassignments'\n| extend roleDefinitionId = properties.roleDefinitionId\n| extend principalType = properties.principalType\n| extend principalId = properties.principalId\n| extend scope = properties.scope\n| take 5",
          "source": "kql",
          "length": 275,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roledefinitions'\n| extend assignableScopes = properties.assignableScopes\n| extend permissionsList = properties.permissions\n| extend isServiceRole = properties.isServiceRole\n| mv-expand permissionsList\n| extend Actions = permissionsList.Actions\n| extend notActions = permissionsList.notActions\n| extend DataActions = permissionsList.DataActions\n| extend notDataActions = permissionsList.notDataActions\n| take 5",
          "source": "kql",
          "length": 473,
          "startsWithTable": true
        },
        {
          "code": "AuthorizationResources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| where tolower(properties.type) == \"customrole\"\n| extend rdId = tolower(id)\n| extend Scope = tolower(properties.assignableScopes)\n| join kind = leftouter (\nAuthorizationResources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| extend RoleId = tolower(tostring(properties.roleDefinitionId))\n| summarize RoleAssignmentCount = count() by RoleId\n) on $left.rdId == $right.RoleId\n| where isempty(RoleAssignmentCount)\n| project RoleDefinitionId = rdId, RoleDefinitionName = tostring(properties.roleName), Scope",
          "source": "kql",
          "length": 598,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ 'microsoft.authorization/roledefinitions'\n| extend assignableScopes = properties.assignableScopes\n| extend permissionsList = properties.permissions\n| extend isServiceRole = properties.isServiceRole\n| mv-expand permissionsList\n| extend Actions = permissionsList.Actions\n| extend notActions = permissionsList.notActions\n| extend DataActions = permissionsList.DataActions\n| extend notDataActions = permissionsList.notDataActions\n| summarize make_set(Actions), make_set(notActions), make_set(DataActions), make_set(notDataActions), any(assignableScopes, isServiceRole) by id",
          "source": "kql",
          "length": 609,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleId = tolower(tostring(properties.roleDefinitionId))\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| project RoleDefinitionName, RoleId\n) on $left.RoleId == $right.RoleId\n| extend principalId = tostring(properties.principalId)\n| extend principal_to_ra = pack(principalId, id)\n| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 756,
          "startsWithTable": true
        },
        {
          "code": "AuthorizationResources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend PrincipalId = tostring(properties.principalId)\n| extend Scope = tolower(properties.scope)\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| join kind = leftouter (\nAuthorizationResources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| extend RoleType = tostring(properties.type)\n| where RoleType == \"BuiltInRole\"\n| extend RoleId_RoleName = pack(RoleId, RoleName)\n) on $left.RoleDefinitionId == $right.RoleId\n| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 783,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleId = tolower(tostring(properties.roleDefinitionId))\n| extend condition = tostring(properties.condition)\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| project RoleDefinitionName, RoleId\n) on $left.RoleId == $right.RoleId\n| extend principalId = tostring(properties.principalId)\n| extend principal_to_ra = pack(principalId, id)\n| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName, condition\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 819,
          "startsWithTable": true
        },
        {
          "code": "AuthorizationResources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend PrincipalId = tostring(properties.principalId)\n| extend Scope = tolower(properties.scope)\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| extend condition = tostring(properties.condition)\n| join kind = leftouter (\nAuthorizationResources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleName = tostring(properties.roleName)\n| extend RoleId = tolower(id)\n| extend RoleType = tostring(properties.type)\n| where RoleType == \"BuiltInRole\"\n| extend RoleId_RoleName = pack(RoleId, RoleName)\n) on $left.RoleDefinitionId == $right.RoleId\n| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope, condition\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 846,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| extend PrincipalId = tolower(properties.principalId)\n| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, \"_\", PrincipalId)\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend rdId = tolower(id)\n| project RoleDefinitionName, rdId\n) on $left.RoleDefinitionId == $right.rdId\n| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName\n| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, \"_\", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, \"_\", 1)[0], count_, Scopes\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 947,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| where type =~ \"microsoft.authorization/roleassignments\"\n| where id startswith \"/subscriptions\"\n| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))\n| extend PrincipalId = tolower(properties.principalId)\n| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, \"_\", PrincipalId)\n| extend condition = tostring(properties.condition)\n| join kind = leftouter (\nauthorizationresources\n| where type =~ \"microsoft.authorization/roledefinitions\"\n| extend RoleDefinitionName = tostring(properties.roleName)\n| extend rdId = tolower(id)\n| project RoleDefinitionName, rdId\n) on $left.RoleDefinitionId == $right.rdId\n| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName\n| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, \"_\", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, \"_\", 1)[0], count_, Scopes, condition\n| where count_ > 1\n| order by count_ desc",
          "source": "kql",
          "length": 1010,
          "startsWithTable": true
        },
        {
          "code": "authorizationresources\n| summarize count()",
          "source": "powershell",
          "length": 42,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Authorization"
    },
    "awsresources": {
      "name": "awsresources",
      "resourceTypes": [
        "microsoft.awsconnector/ec2instances",
        "microsoft.awsconnector/eksclusters"
      ],
      "examples": [],
      "description": "Related to Microsoft.AwsConnector"
    },
    "azurebusinesscontinuityresources": {
      "name": "azurebusinesscontinuityresources",
      "resourceTypes": [
        "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems",
        "microsoft.azurebusinesscontinuity/unifiedprotecteditems"
      ],
      "examples": [],
      "description": "Related to Microsoft.AzureBusinessContinuity"
    },
    "azuredevopsplatformresources": {
      "name": "azuredevopsplatformresources",
      "resourceTypes": [
        "microsoft.azuredevopsplatform/organizations"
      ],
      "examples": []
    },
    "batchresources": {
      "name": "batchresources",
      "resourceTypes": [
        "microsoft.batch/batchaccounts/pools"
      ],
      "examples": []
    },
    "capabilityresources": {
      "name": "capabilityresources",
      "resourceTypes": [
        "microsoft.resources/capabilities"
      ],
      "examples": []
    },
    "chaosresources": {
      "name": "chaosresources",
      "resourceTypes": [
        "microsoft.chaos/experiments/executions",
        "microsoft.chaos/experiments/statuses",
        "microsoft.chaos/targets",
        "microsoft.chaos/targets/capabilities"
      ],
      "examples": [],
      "description": "Related to Microsoft.Chaos"
    },
    "communitygalleryresources": {
      "name": "communitygalleryresources",
      "resourceTypes": [
        "microsoft.compute/locations/communitygalleries",
        "microsoft.compute/locations/communitygalleries/applications",
        "microsoft.compute/locations/communitygalleries/applications/versions",
        "microsoft.compute/locations/communitygalleries/images",
        "microsoft.compute/locations/communitygalleries/images/versions"
      ],
      "examples": [],
      "description": "Related to Microsoft.Compute"
    },
    "computeresources": {
      "name": "computeresources",
      "resourceTypes": [
        "microsoft.compute/virtualmachinescalesets/virtualmachines",
        "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces",
        "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses"
      ],
      "examples": [
        {
          "code": "ComputeResources\n| where type =~ 'microsoft.compute/virtualmachinescalesets/virtualmachines'\n| extend powerState = properties.extended.instanceView.powerState.code\n| project name, powerState, id",
          "source": "kql",
          "length": 194,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Compute Virtual Machine Scale Sets"
    },
    "containerserviceeventresources": {
      "name": "containerserviceeventresources",
      "resourceTypes": [
        "microsoft.containerservice/managedclusters/scheduledevents"
      ],
      "examples": []
    },
    "deploymentresources": {
      "name": "deploymentresources",
      "resourceTypes": [
        "microsoft.resources/deploymentstacks"
      ],
      "examples": []
    },
    "desktopvirtualizationresources": {
      "name": "desktopvirtualizationresources",
      "resourceTypes": [
        "microsoft.desktopvirtualization/hostpools/sessionhosts"
      ],
      "examples": [],
      "description": "Related to Microsoft.DesktopVirtualization"
    },
    "dnsresources": {
      "name": "dnsresources",
      "resourceTypes": [
        "microsoft.network/dnszones/a",
        "microsoft.network/dnszones/aaaa",
        "microsoft.network/dnszones/caa",
        "microsoft.network/dnszones/cname",
        "microsoft.network/dnszones/ds",
        "microsoft.network/dnszones/mx",
        "microsoft.network/dnszones/naptr",
        "microsoft.network/dnszones/ns",
        "microsoft.network/dnszones/ptr",
        "microsoft.network/dnszones/soa",
        "microsoft.network/dnszones/srv",
        "microsoft.network/dnszones/tlsa",
        "microsoft.network/dnszones/txt",
        "microsoft.network/privatednszones/a",
        "microsoft.network/privatednszones/aaaa",
        "microsoft.network/privatednszones/cname",
        "microsoft.network/privatednszones/mx",
        "microsoft.network/privatednszones/ptr",
        "microsoft.network/privatednszones/soa",
        "microsoft.network/privatednszones/srv",
        "microsoft.network/privatednszones/txt"
      ],
      "examples": [],
      "description": "Related to Microsoft.Network"
    },
    "edgeorderresources": {
      "name": "edgeorderresources",
      "resourceTypes": [
        "microsoft.edgeorder/orders"
      ],
      "examples": [],
      "description": "Related to Microsoft.EdgeOrder"
    },
    "elasticsanresources": {
      "name": "elasticsanresources",
      "resourceTypes": [
        "microsoft.elasticsan/elasticsans",
        "microsoft.elasticsan/elasticsans/volumegroups",
        "microsoft.elasticsan/elasticsans/volumegroups/volumes"
      ],
      "examples": [],
      "description": "Related to Microsoft.ElasticSan"
    },
    "extendedlocationresources": {
      "name": "extendedlocationresources",
      "resourceTypes": [
        "microsoft.extendedlocation/customlocations/enabledresourcetypes"
      ],
      "examples": [
        {
          "code": "ExtendedLocationResources\n| where type == 'microsoft.extendedlocation/customlocations/enabledresourcetypes'",
          "source": "kql",
          "length": 107,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.ExtendedLocation"
    },
    "extensibilityresourcechanges": {
      "name": "extensibilityresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "featureresources": {
      "name": "featureresources",
      "resourceTypes": [
        "microsoft.features/featureprovidernamespaces/featureconfigurations",
        "microsoft.features/featureproviders/subscriptionfeatureregistrations"
      ],
      "examples": [],
      "description": "Related to Microsoft.Features"
    },
    "gcpresources": {
      "name": "gcpresources",
      "resourceTypes": [
        "microsoft.gcpconnector/computeinstances"
      ],
      "examples": []
    },
    "guestconfigurationresources": {
      "name": "guestconfigurationresources",
      "resourceTypes": [
        "microsoft.guestconfiguration/guestconfigurationassignments",
        "microsoft.guestconfiguration/guestconfigurationassignments/reports"
      ],
      "examples": [
        {
          "code": "GuestConfigurationResources\n| where type =~ 'microsoft.guestconfiguration/guestconfigurationassignments'\n| extend vmid = split(properties.targetResourceId,'/')\n| mvexpand properties.latestAssignmentReport.resources\n| where properties_latestAssignmentReport_resources.resourceId != 'Invalid assignment package.'\n| project machine = tostring(vmid[(-1)]),type = tostring(vmid[(-3)])\n| distinct machine, type\n| summarize count() by type",
          "source": "kql",
          "length": 432,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where name in ('installed_application_linux')\n| project id, name, resources = properties.latestAssignmentReport.resources, vmid = split(properties.targetResourceId,'/')[(-1)], status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| where reasons.phrase contains 'chrome'\n| project id, vmid, name, status, resource = resources.resourceId, reason = reasons.phrase",
          "source": "kql",
          "length": 601,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where type =~ 'microsoft.guestconfiguration/guestconfigurationassignments'\n| project id, name, resources = properties.latestAssignmentReport.resources, vmid = split(properties.targetResourceId,'/')[(-1)], status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| project id, vmid, name, status, resource = tostring(resources.resourceId), reason = reasons.phrase\n| summarize count() by resource, name\n| order by count_\n| limit 100",
          "source": "kql",
          "length": 667,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where type =~ 'microsoft.guestconfiguration/guestconfigurationassignments'\n| where properties.complianceStatus == 'NonCompliant'\n| project id, name, resources = properties.latestAssignmentReport.resources, machine = split(properties.targetResourceId,'/')[(-1)], status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| where machine == 'MACHINENAME'\n| project id, machine, name, status, resource = resources.resourceId, reason = reasons.phrase",
          "source": "kql",
          "length": 682,
          "startsWithTable": true
        },
        {
          "code": "GuestConfigurationResources\n| where name in ('WindowsPendingReboot')\n| project id, name, resources = properties.latestAssignmentReport.resources, vmid = split(properties.targetResourceId,'/'), status = tostring(properties.complianceStatus)\n| extend resources = iff(isnull(resources[0]), dynamic([{}]), resources)\n| mvexpand resources\n| extend reasons = resources.reasons\n| extend reasons = iff(isnull(reasons[0]), dynamic([{}]), reasons)\n| mvexpand reasons\n| project id, vmid, name, status, resource = resources.resourceId, reason = reasons.phrase\n| summarize name = any(name), status = any(status), vmid = any(vmid), resources = make_list_if(resource, isnotnull(resource)), reasons = make_list_if(reason, isnotnull(reason)) by id = tolower(id)\n| project id, machine = tostring(vmid[(-1)]), type = tostring(vmid[(-3)]), name, status, reasons",
          "source": "kql",
          "length": 841,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.GuestConfiguration"
    },
    "healthresourcechanges": {
      "name": "healthresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources"
    },
    "healthresources": {
      "name": "healthresources",
      "resourceTypes": [
        "microsoft.resourcehealth/availabilitystatuses",
        "microsoft.resourcehealth/resourceannotations"
      ],
      "examples": [
        {
          "code": "HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| summarize count() by subscriptionId, AvailabilityState = tostring(properties.availabilityState)",
          "source": "kql",
          "length": 177,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| summarize by ResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState)",
          "source": "kql",
          "length": 214,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| where tostring(properties.availabilityState) != 'Available'\n| summarize by ResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState)",
          "source": "kql",
          "length": 276,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])\n| where AvailabilityState != 'Available'\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| join kind = inner (\nHealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/resourceannotations'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))) on $left.VmId == $right.VmId\n| join kind = inner (Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId))\non $left.VmId1 == $right.VmId\n| extend AnnotationName = tostring(properties['annotationName']), ImpactType = tostring(properties['impactType']), Context = tostring(properties['context']), Summary = tostring(properties['summary']), Reason = tostring(properties['reason']), OccurredTime = todatetime(properties['occurredTime'])\n| project VmId, OccurredTime, AvailabilityState, AnnotationName, ImpactType, Context, Summary, Reason\n| project-rename ['Virtual Machine ID'] = VmId, ['Time Since Not Available'] = OccurredTime, ['Availability State'] = AvailabilityState, ['Annotation Name'] = AnnotationName, ['Impact Type'] = ImpactType",
          "source": "kql",
          "length": 1641,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])\n| where AvailabilityState != 'Available'\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/resourceannotations'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))) on \\$left.VmId == \\$right.VmId\n| join kind = inner (Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)) on \\$left.VmId1 == \\$right.VmId\n| extend AnnotationName = tostring(properties['annotationName']), ImpactType = tostring(properties['impactType']), Context = tostring(properties['context']), Summary = tostring(properties['summary']), Reason = tostring(properties['reason']), OccurredTime = todatetime(properties['occurredTime'])\n| project VmId, OccurredTime, AvailabilityState, AnnotationName, ImpactType, Context, Summary, Reason\n| project-rename ['Virtual Machine ID'] = VmId, ['Time Since Not Available'] = OccurredTime, ['Availability State'] = AvailabilityState, ['Annotation Name'] = AnnotationName, ['Impact Type'] = ImpactType",
          "source": "cli",
          "length": 1644,
          "startsWithTable": true
        },
        {
          "code": "HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])\n| where AvailabilityState != 'Available'\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/resourceannotations'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))) on $left.VmId == $right.VmId\n| join kind = inner (Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)) on $left.VmId1 == $right.VmId\n| extend AnnotationName = tostring(properties['annotationName']), ImpactType = tostring(properties['impactType']), Context = tostring(properties['context']), Summary = tostring(properties['summary']), Reason = tostring(properties['reason']), OccurredTime = todatetime(properties['occurredTime'])\n| project VmId, OccurredTime, AvailabilityState, AnnotationName, ImpactType, Context, Summary, Reason\n| project-rename ['Virtual Machine ID'] = VmId, ['Time Since Not Available'] = OccurredTime, ['Availability State'] = AvailabilityState, ['Annotation Name'] = AnnotationName, ['Impact Type'] = ImpactType",
          "source": "powershell",
          "length": 1640,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.ResourceHealth"
    },
    "impactreportresources": {
      "name": "impactreportresources",
      "resourceTypes": [
        "microsoft.impact/connectors",
        "microsoft.impact/workloadimpacts",
        "microsoft.impact/workloadimpacts/insights"
      ],
      "examples": []
    },
    "insightsresources": {
      "name": "insightsresources",
      "resourceTypes": [
        "microsoft.insights/datacollectionruleassociations",
        "microsoft.insights/tenantactiongroups"
      ],
      "examples": [
        {
          "code": "insightsresources\n| where type == 'microsoft.insights/datacollectionruleassociations'\n| where id contains 'microsoft.compute/virtualmachines/'\n| project id = trim_start('/', tolower(id)), properties\n| extend idComponents = split(id, '/')\n| extend subscription = tolower(tostring(idComponents[1])), resourceGroup = tolower(tostring(idComponents[3])), vmName = tolower(tostring(idComponents[7]))\n| extend dcrId = properties['dataCollectionRuleId']\n| where isnotnull(dcrId)\n| extend dcrId = tostring(dcrId)\n| summarize dcrList = make_list(dcrId), dcrCount = count() by subscription, resourceGroup, vmName\n| sort by dcrCount desc",
          "source": "kql",
          "length": 625,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Insights"
    },
    "iotsecurityresources": {
      "name": "iotsecurityresources",
      "resourceTypes": [
        "microsoft.iotfirmwaredefense/firmwaregroups/firmwares",
        "microsoft.iotfirmwaredefense/workspaces/firmwares",
        "microsoft.iotsecurity/locations/devicegroups/alerts",
        "microsoft.iotsecurity/locations/devicegroups/devices",
        "microsoft.iotsecurity/locations/devicegroups/recommendations",
        "microsoft.iotsecurity/locations/devicegroups/vulnerabilities",
        "microsoft.iotsecurity/locations/sites",
        "microsoft.iotsecurity/locations/sites/sensors",
        "microsoft.iotsecurity/onpremisesensors",
        "microsoft.iotsecurity/sensors",
        "microsoft.iotsecurity/sites"
      ],
      "examples": [
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/sites'\n| where properties.tags['key'] =~ 'value1'",
          "source": "kql",
          "length": 109,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/sensors'\n| summarize count() by tostring(properties.sensorType)",
          "source": "kql",
          "length": 123,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/locations/devicegroups/recommendations'\n| where properties.severity == 'High'",
          "source": "kql",
          "length": 137,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/locations/devicegroups/devices'\n| summarize count() by tostring(properties.operatingSystem.platform)",
          "source": "kql",
          "length": 160,
          "startsWithTable": true
        },
        {
          "code": "iotsecurityresources\n| where type == 'microsoft.iotsecurity/locations/devicegroups/alerts'\n| where todatetime(properties.startTimeUtc) > ago(30d) and properties.status == 'New'",
          "source": "kql",
          "length": 176,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.IoTSecurity and Microsoft.IoTFirmwareDefense"
    },
    "kubernetesconfigurationresources": {
      "name": "kubernetesconfigurationresources",
      "resourceTypes": [
        "microsoft.kubernetesconfiguration/extensions",
        "microsoft.kubernetesconfiguration/fluxconfigurations",
        "microsoft.kubernetesconfiguration/namespaces",
        "microsoft.kubernetesconfiguration/sourcecontrolconfigurations"
      ],
      "examples": [
        {
          "code": "kubernetesconfigurationresources\n| where type == 'microsoft.kubernetesconfiguration/fluxconfigurations'\n| where properties.complianceState == 'Non-Compliant'\n| project id",
          "source": "kql",
          "length": 170,
          "startsWithTable": true
        },
        {
          "code": "KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType  == 'microsoft.azuremonitor.containers'\n| parse id with connectedClusterId '/providers/Microsoft.KubernetesConfiguration/Extensions' *\n| project connectedClusterId",
          "source": "kql",
          "length": 292,
          "startsWithTable": true
        },
        {
          "code": "KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType == 'microsoft.azuremonitor.containers'\n| parse id with connectedClusterId '/providers/Microsoft.KubernetesConfiguration/Extensions' *\n| project connectedClusterId",
          "source": "cli",
          "length": 291,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.KubernetesConfiguration"
    },
    "kustoresources": {
      "name": "kustoresources",
      "resourceTypes": [
        "microsoft.kusto/clusters/databases/dataconnections"
      ],
      "examples": [],
      "description": "Related to Microsoft.Kusto"
    },
    "machinesinventoryinsightsresources": {
      "name": "machinesinventoryinsightsresources",
      "resourceTypes": [
        "microsoft.offazure/hypervsites/machines/inventoryinsights",
        "microsoft.offazure/hypervsites/machines/inventoryinsights/pendingupdates",
        "microsoft.offazure/hypervsites/machines/inventoryinsights/software",
        "microsoft.offazure/hypervsites/machines/inventoryinsights/vulnerabilities",
        "microsoft.offazure/serversites/machines/inventoryinsights",
        "microsoft.offazure/serversites/machines/inventoryinsights/pendingupdates",
        "microsoft.offazure/serversites/machines/inventoryinsights/software",
        "microsoft.offazure/serversites/machines/inventoryinsights/vulnerabilities",
        "microsoft.offazure/serversites/machines/pendingupdates",
        "microsoft.offazure/serversites/machines/software",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights/pendingupdates",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights/software",
        "microsoft.offazure/vmwaresites/machines/inventoryinsights/vulnerabilities"
      ],
      "examples": []
    },
    "maintenanceresourcechanges": {
      "name": "maintenanceresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "maintenanceresources": {
      "name": "maintenanceresources",
      "resourceTypes": [
        "microsoft.containerservice/managedclusters/scheduledevents",
        "microsoft.maintenance/applyupdates",
        "microsoft.maintenance/computemrpresponse/applyupdates",
        "microsoft.maintenance/configurationassignments",
        "microsoft.maintenance/maintenanceconfigurations/applyupdates",
        "microsoft.maintenance/updates"
      ],
      "examples": [],
      "description": "Related to Microsoft.Maintenance"
    },
    "managedservicesresources": {
      "name": "managedservicesresources",
      "resourceTypes": [
        "microsoft.managedservices/registrationassignments",
        "microsoft.managedservices/registrationdefinitions"
      ],
      "examples": [],
      "description": "Related to Microsoft.ManagedServices"
    },
    "migrateresources": {
      "name": "migrateresources",
      "resourceTypes": [
        "microsoft.applicationmigration/discoveryhubs/applications",
        "microsoft.applicationmigration/discoveryhubs/applications/members",
        "microsoft.applicationmigration/pgsqlsites/agents",
        "microsoft.applicationmigration/pgsqlsites/pgsqldatabases",
        "microsoft.applicationmigration/pgsqlsites/pgsqlinstances",
        "microsoft.applicationmigration/storagesites/agents",
        "microsoft.applicationmigration/storagesites/fileshares",
        "microsoft.migrate/assessmentprojects/aksassessments",
        "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/aksassessments/clusters",
        "microsoft.migrate/assessmentprojects/aksassessments/costdetails",
        "microsoft.migrate/assessmentprojects/aksassessments/summaries",
        "microsoft.migrate/assessmentprojects/applicationassessments",
        "microsoft.migrate/assessmentprojects/applicationassessments/assessedapplications",
        "microsoft.migrate/assessmentprojects/assessments",
        "microsoft.migrate/assessmentprojects/assessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/assessments/summaries",
        "microsoft.migrate/assessmentprojects/avsassessments",
        "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines",
        "microsoft.migrate/assessmentprojects/avsassessments/summaries",
        "microsoft.migrate/assessmentprojects/businesscases",
        "microsoft.migrate/assessmentprojects/castconnections",
        "microsoft.migrate/assessmentprojects/groups",
        "microsoft.migrate/assessmentprojects/groups/assessments",
        "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/groups/avsassessments",
        "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities",
        "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups/webappassessments",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries",
        "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans",
        "microsoft.migrate/assessmentprojects/heterogeneousassessments",
        "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries",
        "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines",
        "microsoft.migrate/assessmentprojects/mysqlassessments",
        "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances",
        "microsoft.migrate/assessmentprojects/mysqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/pgsqlassessments",
        "microsoft.migrate/assessmentprojects/pgsqlassessments/assessedinstances",
        "microsoft.migrate/assessmentprojects/pgsqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/sqlassessments",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances",
        "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines",
        "microsoft.migrate/assessmentprojects/sqlassessments/summaries",
        "microsoft.migrate/assessmentprojects/webappassessments",
        "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/webappassessments/summaries",
        "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments/assessedwebapps",
        "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries",
        "microsoft.migrate/castscanreports",
        "microsoft.migrate/castscanreports/codescanissues",
        "microsoft.migrate/migrateprojects/migrationentities",
        "microsoft.migrate/migrateprojects/migrationentitygroups",
        "microsoft.migrate/migrateprojects/tasks",
        "microsoft.migrate/migrateprojects/waves",
        "microsoft.migrate/migrateprojects/waves/workloads",
        "microsoft.mysqldiscovery/mysqlsites/mysqlservers",
        "microsoft.offazure/hypervsites/clusters",
        "microsoft.offazure/hypervsites/hosts",
        "microsoft.offazure/hypervsites/machines",
        "microsoft.offazure/hypervsites/machines/softwareinventories",
        "microsoft.offazure/importsites/machines",
        "microsoft.offazure/mastersites/sqlsites/sqldatabases",
        "microsoft.offazure/mastersites/sqlsites/sqlservers",
        "microsoft.offazure/mastersites/webappsites/extendedmachines",
        "microsoft.offazure/mastersites/webappsites/iiswebapplications",
        "microsoft.offazure/mastersites/webappsites/iiswebservers",
        "microsoft.offazure/mastersites/webappsites/tomcatwebapplications",
        "microsoft.offazure/mastersites/webappsites/tomcatwebservers",
        "microsoft.offazure/serversites/machines",
        "microsoft.offazure/serversites/machines/softwareinventories",
        "microsoft.offazure/vmwaresites/hosts",
        "microsoft.offazure/vmwaresites/machines",
        "microsoft.offazure/vmwaresites/machines/softwareinventories",
        "microsoft.offazure/vmwaresites/vcenters",
        "microsoft.offazurespringboot/springbootsites/springbootapps",
        "microsoft.offazurespringboot/springbootsites/springbootservers"
      ],
      "examples": [],
      "description": "Related to Microsoft.OffAzure"
    },
    "networkresourcechanges": {
      "name": "networkresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "networkresources": {
      "name": "networkresources",
      "resourceTypes": [
        "microsoft.network/effectiveconnectivityconfigurations",
        "microsoft.network/effectivesecurityadminrules",
        "microsoft.network/firewallpolicies/rulecollectiongroups",
        "microsoft.network/networkgroupmemberships",
        "microsoft.network/networkmanagerconnections",
        "microsoft.network/networkmanagers/connectivityconfigurations",
        "microsoft.network/networkmanagers/connectivityconfigurations/snapshots",
        "microsoft.network/networkmanagers/connectivityregionalgoalstates",
        "microsoft.network/networkmanagers/networkgroups",
        "microsoft.network/networkmanagers/networkgroups/aggregatedipaddressspaces",
        "microsoft.network/networkmanagers/networkgroups/members",
        "microsoft.network/networkmanagers/networkgroups/staticmembers",
        "microsoft.network/networkmanagers/regionalgoalstates",
        "microsoft.network/networkmanagers/routingconfigurations",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules/snapshots",
        "microsoft.network/networkmanagers/routingconfigurations/rulecollections/snapshots",
        "microsoft.network/networkmanagers/routingconfigurations/snapshots",
        "microsoft.network/networkmanagers/routingregionalgoalstates",
        "microsoft.network/networkmanagers/securityadminconfigurations",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules/snapshots",
        "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/snapshots",
        "microsoft.network/networkmanagers/securityadminconfigurations/snapshots",
        "microsoft.network/networkmanagers/securityadminregionalgoalstates",
        "microsoft.network/networkmanagers/securityuserconfigurations",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules/snapshots",
        "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/snapshots",
        "microsoft.network/networkmanagers/securityuserconfigurations/snapshots",
        "microsoft.network/networkmanagers/securityuserregionalgoalstates",
        "microsoft.network/networkmanagers/verifierworkspaces/reachabilityanalysisintents",
        "microsoft.network/networksecurityperimeters/linkreferences",
        "microsoft.network/networksecurityperimeters/links",
        "microsoft.network/networksecurityperimeters/loggingconfigurations",
        "microsoft.network/networksecurityperimeters/profiles",
        "microsoft.network/networksecurityperimeters/profiles/accessrules",
        "microsoft.network/networksecurityperimeters/resourceassociations",
        "microsoft.network/rulecollectiongroups",
        "microsoft.network/virtualnetworks/subnets/effectiveroutingrules",
        "microsoft.network/virtualnetworks/subnets/effectivesecurityuserrules"
      ],
      "examples": [],
      "description": "Related to Microsoft.Network"
    },
    "orbitalresources": {
      "name": "orbitalresources",
      "resourceTypes": [
        "microsoft.orbital/spacecrafts/contacts"
      ],
      "examples": []
    },
    "patchassessmentresources": {
      "name": "patchassessmentresources",
      "resourceTypes": [
        "microsoft.compute/virtualmachines/patchassessmentresults",
        "microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches",
        "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults",
        "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults/softwarepatches",
        "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults",
        "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults/softwarepatches",
        "microsoft.hybridcompute/machines/patchassessmentresults",
        "microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches"
      ],
      "examples": [
        {
          "code": "PatchAssessmentResources\n| where type has 'softwarepatches' and properties !has 'version'\n| extend machineName = tostring(split(id, '/', 8)), resourceType = tostring(split(type, '/', 0)), tostring(rgName = split(id, '/', 4)), tostring(RunID = split(id, '/', 10))\n| extend prop = parse_json(properties)\n| extend lTime = todatetime(prop.lastModifiedDateTime), patchName = tostring(prop.patchName), kbId = tostring(prop.kbId), installationState = tostring(prop.installationState), classifications = tostring(prop.classifications)\n| where lTime > ago(7d)\n| project lTime, RunID, machineName, rgName, resourceType, patchName, kbId, classifications, installationState\n| sort by RunID",
          "source": "kql",
          "length": 677,
          "startsWithTable": true
        },
        {
          "code": "PatchAssessmentResources\n| where type has 'softwarepatches' and properties has 'version'\n| extend machineName = tostring(split(id, '/', 8)), resourceType = tostring(split(type, '/', 0)), tostring(rgName = split(id, '/', 4)), tostring(RunID = split(id, '/', 10))\n| extend prop = parse_json(properties)\n| extend lTime = todatetime(prop.lastModifiedDateTime), patchName = tostring(prop.patchName), version = tostring(prop.version), installationState = tostring(prop.installationState), classifications = tostring(prop.classifications)\n| where lTime > ago(7d)\n| project lTime, RunID, machineName, rgName, resourceType, patchName, version, classifications, installationState\n| sort by RunID",
          "source": "kql",
          "length": 685,
          "startsWithTable": true
        },
        {
          "code": "PatchAssessmentResources\n| where type !has 'softwarepatches'\n| extend machineName = tostring(split(id, '/', 8)), resourceType = tostring(split(type, '/', 0)), tostring(rgName = split(id, '/', 4))\n| extend prop = parse_json(properties)\n| extend lTime = todatetime(prop.lastModifiedDateTime), OS = tostring(prop.osType), installedPatchCount = tostring(prop.installedPatchCount), failedPatchCount = tostring(prop.failedPatchCount), pendingPatchCount = tostring(prop.pendingPatchCount), excludedPatchCount = tostring(prop.excludedPatchCount), notSelectedPatchCount = tostring(prop.notSelectedPatchCount)\n| where lTime > ago(7d)\n| project lTime, RunID=name,machineName, rgName, resourceType, OS, installedPatchCount, failedPatchCount, pendingPatchCount, excludedPatchCount, notSelectedPatchCount",
          "source": "kql",
          "length": 790,
          "startsWithTable": true
        },
        {
          "code": "PatchAssessmentResources\n| where type !has 'softwarepatches'\n| extend prop = parse_json(properties)\n| extend lastTime = properties.lastModifiedDateTime\n| extend updateRollupCount = prop.availablePatchCountByClassification.updateRollup, featurePackCount = prop.availablePatchCountByClassification.featurePack, servicePackCount = prop.availablePatchCountByClassification.servicePack, definitionCount = prop.availablePatchCountByClassification.definition, securityCount = prop.availablePatchCountByClassification.security, criticalCount = prop.availablePatchCountByClassification.critical, updatesCount = prop.availablePatchCountByClassification.updates, toolsCount = prop.availablePatchCountByClassification.tools, otherCount = prop.availablePatchCountByClassification.other, OS = prop.osType\n| project lastTime, id, OS, updateRollupCount, featurePackCount, servicePackCount, definitionCount, securityCount, criticalCount, updatesCount, toolsCount, otherCount",
          "source": "kql",
          "length": 957,
          "startsWithTable": true
        }
      ],
      "description": "Related to Azure Virtual Machines patch assessment Microsoft.Compute and Microsoft.HybridCompute"
    },
    "patchinstallationresources": {
      "name": "patchinstallationresources",
      "resourceTypes": [
        "microsoft.compute/virtualmachines/patchinstallationresults",
        "microsoft.compute/virtualmachines/patchinstallationresults/softwarepatches",
        "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults",
        "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults/softwarepatches",
        "microsoft.hybridcompute/machines/patchinstallationresults",
        "microsoft.hybridcompute/machines/patchinstallationresults/softwarepatches"
      ],
      "examples": [],
      "description": "Related to Azure Virtual Machines patch installation Microsoft.Compute and Microsoft.HybridCompute"
    },
    "policyresources": {
      "name": "policyresources",
      "resourceTypes": [
        "microsoft.authorization/policyassignments",
        "microsoft.authorization/policydefinitions",
        "microsoft.authorization/policydefinitions/versions",
        "microsoft.authorization/policyenrollments",
        "microsoft.authorization/policyexemptions",
        "microsoft.authorization/policysetdefinitions",
        "microsoft.authorization/policysetdefinitions/versions",
        "microsoft.policyinsights/componentpolicystates",
        "microsoft.policyinsights/policymetadata",
        "microsoft.policyinsights/policystates"
      ],
      "examples": [
        {
          "code": "PolicyResources\n| where type == 'microsoft.authorization/policyexemptions'\n| summarize count() by tostring(properties.policyAssignmentId)",
          "source": "kql",
          "length": 137,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| extend complianceState = tostring(properties.complianceState)\n| summarize count() by complianceState",
          "source": "kql",
          "length": 174,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| where properties.complianceState == 'NonCompliant'\n| extend NonCompliantResourceId = properties.resourceId, PolicyAssignmentName = properties.policyAssignmentName",
          "source": "kql",
          "length": 236,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.authorization/policyexemptions'\n| extend expiresOnC = todatetime(properties.expiresOn)\n| where isnotnull(expiresOnC)\n| where expiresOnC >= now() and expiresOnC < now(+90d)\n| project name, expiresOnC",
          "source": "kql",
          "length": 241,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| extend complianceState = tostring(properties.complianceState)\n| extend resourceLocation = tostring(properties.resourceLocation)\n| summarize count() by resourceLocation, complianceState",
          "source": "kql",
          "length": 258,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\nresourceId = tostring(properties.resourceId),\nresourceType = tolower(tostring(properties.resourceType)),\npolicyAssignmentId = tostring(properties.policyAssignmentId),\npolicyDefinitionId = tostring(properties.policyDefinitionId),\npolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\nstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, resourceType\n| summarize counts = count() by resourceType, max_stateWeight\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by resourceType\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project resourceType,\noverAllComplianceState = iff(overallStateWeight == 300, 'noncompliant', iff(overallStateWeight == 200, 'compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount",
          "source": "kql",
          "length": 1632,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\nresourceId = tostring(properties.resourceId),\npolicyAssignmentId = tostring(properties.policyAssignmentId),\npolicyAssignmentScope = tostring(properties.policyAssignmentScope),\npolicyAssignmentName = tostring(properties.policyAssignmentName),\npolicyDefinitionId = tostring(properties.policyDefinitionId),\npolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\nstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,\ncomplianceState = iff(overallStateWeight == 300, 'noncompliant', iff(overallStateWeight == 200, 'compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount",
          "source": "kql",
          "length": 1892,
          "startsWithTable": true
        },
        {
          "code": "PolicyResources\n| where type == 'microsoft.policyinsights/policystates'\n| where properties.complianceState == 'NonCompliant'",
          "source": "powershell",
          "length": 124,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.PolicyInsights"
    },
    "quotaresourcechanges": {
      "name": "quotaresourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": []
    },
    "recoveryservicesresources": {
      "name": "recoveryservicesresources",
      "resourceTypes": [
        "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems",
        "microsoft.azurebusinesscontinuity/unifiedprotecteditems",
        "microsoft.dataprotection/backupvaults/backupinstances",
        "microsoft.dataprotection/backupvaults/backupjobs",
        "microsoft.dataprotection/backupvaults/backuppolicies",
        "microsoft.dataprotection/backupvaults/deletedbackupinstances",
        "microsoft.recoveryservices/locations/deletedvaults",
        "microsoft.recoveryservices/locations/deletedvaults/backupfabrics/protectioncontainers/protecteditems",
        "microsoft.recoveryservices/vaults",
        "microsoft.recoveryservices/vaults/alerts",
        "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protectableitems",
        "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems",
        "microsoft.recoveryservices/vaults/backupjobs",
        "microsoft.recoveryservices/vaults/backuppolicies",
        "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationmigrationitems",
        "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotectableitems",
        "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotecteditems",
        "microsoft.recoveryservices/vaults/replicationjobs",
        "microsoft.recoveryservices/vaults/replicationpolicies",
        "microsoft.recoveryservices/vaults/replicationrecoveryplans"
      ],
      "examples": [],
      "description": "Related to Microsoft.DataProtection and Microsoft.RecoveryServices"
    },
    "resourcechanges": {
      "name": "resourcechanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources"
    },
    "resourcecontainerchanges": {
      "name": "resourcecontainerchanges",
      "resourceTypes": [
        "microsoft.resources/changes"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources"
    },
    "resourcecontainers": {
      "name": "resourcecontainers",
      "resourceTypes": [
        "microsoft.management/managementgroups",
        "microsoft.management/servicegroups",
        "microsoft.resources/subscriptions",
        "microsoft.resources/subscriptions/resourcegroups"
      ],
      "examples": [
        {
          "code": "resourcecontainers\n| where type == \"microsoft.management/servicegroups\"",
          "source": "kql",
          "length": 71,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project subscriptionId, name",
          "source": "kql",
          "length": 101,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type=='microsoft.resources/subscriptions/resourcegroups' | project name, type  | limit 5\n| union  (Resources | project name, type | limit 5)",
          "source": "kql",
          "length": 167,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.resources/subscriptions'\n| extend  mgParent = properties.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project subscriptionId, name, mgParent, MGHierarchy, mgParent.name",
          "source": "kql",
          "length": 249,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| extend  mgParent = properties.details.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project name, properties.displayName, mgParent, MGHierarchy, mgParent.name",
          "source": "kql",
          "length": 269,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| project mgname = name\n| join kind=leftouter (resourcecontainers | where type=~ 'microsoft.resources/subscriptions'\n| extend  mgParent = properties.managementGroupAncestorsChain | project id, mgname = tostring(mgParent[0].name)) on mgname\n| summarize count() by mgname",
          "source": "kql",
          "length": 344,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| union (\nresources\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n)\n| distinct tagKey, tagValue\n| where tagKey !startswith \"hidden-\"",
          "source": "kql",
          "length": 395,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type=='microsoft.resources/subscriptions/resourcegroups'\n| project name, type\n| limit 5\n| union  (Resources\n| project name, type\n| limit 5)",
          "source": "cli",
          "length": 166,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.resources/subscriptions'\n| extend mgParent = properties.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project subscriptionId, name, mgParent, MGHierarchy, mgParent.name",
          "source": "cli",
          "length": 248,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| extend mgParent = properties.details.managementGroupAncestorsChain\n| mv-expand with_itemindex=MGHierarchy mgParent\n| project name, properties.displayName, mgParent, MGHierarchy, mgParent.name",
          "source": "cli",
          "length": 268,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where type =~ 'microsoft.management/managementgroups'\n| project mgname = name\n| join kind=leftouter (resourcecontainers\n| where type=~ 'microsoft.resources/subscriptions'\n| extend mgParent = properties.managementGroupAncestorsChain\n| project id, mgname = tostring(mgParent[0].name)) on mgname\n| summarize count() by mgname",
          "source": "cli",
          "length": 343,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| union (resources\n| where notempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey]) )\n| distinct tagKey, tagValue\n| where tagKey !startswith",
          "source": "cli",
          "length": 382,
          "startsWithTable": true
        },
        {
          "code": "ResourceContainers\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| union ( resources\n| where isnotempty(tags)\n| project tags\n| mvexpand tags\n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey]) )\n| distinct tagKey, tagValue\n| where tagKey !startswith",
          "source": "cli",
          "length": 385,
          "startsWithTable": true
        }
      ],
      "description": "Includes management group (Microsoft.Management/managementGroups), subscription (Microsoft.Resources/subscriptions) and resource group (Microsoft.Resources/subscriptions/resourcegroups) resource types and data"
    },
    "resources": {
      "name": "resources",
      "resourceTypes": [
        "admincenter",
        "advancedthreatprotection.windows",
        "agents",
        "arizeai.observabilityeval/organizations",
        "assessmentplatform",
        "astronomer.astro/organizations",
        "azuremonitorlinuxagent",
        "azuremonitorwindowsagent",
        "azuresecuritylinuxagent",
        "azuresecuritywindowsagent",
        "changetracking-linux",
        "changetracking-windows",
        "citrix.services/xenappessentials",
        "citrix.services/xendesktopessentials",
        "commvault.contentstore/cloudaccounts",
        "customscript",
        "customscriptextension",
        "dell.storage/filesystems",
        "dependencyagentlinux",
        "dependencyagentwindows",
        "dynatrace.observability/monitors",
        "firstparty",
        "github.enterprise/accounts",
        "github.network/networksettings",
        "hns",
        "hybridworkerforlinux",
        "hybridworkerforwindows",
        "iaasantimalware",
        "informatica.datamanagement/organizations",
        "keyvaultforlinux",
        "keyvaultforwindows",
        "lambdatest.hyperexecute/organizations",
        "liftrbasic.samplerp/organizations",
        "linuxagent.azuresecuritycenter",
        "linuxagent.sqlserver",
        "linuxosupdateextension",
        "linuxpatchextension",
        "mde.linux",
        "mde.windows",
        "microsoft apps/connectedenvironments/certificates",
        "microsoft.aad/domainservices",
        "microsoft.aadiam/azureadmetrics",
        "microsoft.aadiam/privatelinkforazuread",
        "microsoft.aadiam/tenants",
        "microsoft.agfoodplatform/farmbeats",
        "microsoft.agricultureplatform/agriservices",
        "microsoft.alertsmanagement/actionrules",
        "microsoft.alertsmanagement/prometheusrulegroups",
        "microsoft.alertsmanagement/smartdetectoralertrules",
        "microsoft.alicespringsdataplane/e4k",
        "microsoft.alicespringsdataplane/e4k/broker",
        "microsoft.alicespringsdataplane/e4k/broker/authentication",
        "microsoft.alicespringsdataplane/e4k/broker/listener",
        "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector",
        "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector/topicmap",
        "microsoft.analysisservices/servers",
        "microsoft.anybuild/clusters",
        "microsoft.apicenter/catalogs",
        "microsoft.apicenter/services",
        "microsoft.apimanagement/gateways",
        "microsoft.apimanagement/service",
        "microsoft.app/agents",
        "microsoft.app/agentspaces",
        "microsoft.app/appgroups",
        "microsoft.app/builders",
        "microsoft.app/connectedenvironments",
        "microsoft.app/connectedenvironments/certificates",
        "microsoft.app/containerapps",
        "microsoft.app/jobs",
        "microsoft.app/managedenvironments",
        "microsoft.app/managedenvironments/certificates",
        "microsoft.app/managedenvironments/managedcertificates",
        "microsoft.app/sessionpools",
        "microsoft.app/spaces",
        "microsoft.appassessment/migrateprojects",
        "microsoft.appconfiguration/configurationstores",
        "microsoft.applicationmigration/codescansites",
        "microsoft.applicationmigration/discoveryhubs",
        "microsoft.applicationmigration/pgsqlsites",
        "microsoft.applicationmigration/storagesites",
        "microsoft.applink/applinks",
        "microsoft.applink/applinks/applinkmembers",
        "microsoft.appplatform/spring",
        "microsoft.appsecurity/policies",
        "microsoft.arcnetworking/arcnwloadbalancers",
        "microsoft.aszlabhardware/labservers",
        "microsoft.aszlabhardware/reservations",
        "microsoft.aszlabhardware/servers",
        "microsoft.attestation/attestationproviders",
        "microsoft.authorization/elevateaccessroleassignment",
        "microsoft.authorization/resourcemanagementprivatelinks",
        "microsoft.automanage/accounts",
        "microsoft.automanage/configurationprofilepreferences",
        "microsoft.automanage/configurationprofiles",
        "microsoft.automanage/configurationprofiles/versions",
        "microsoft.automanage/patchjobconfigurations",
        "microsoft.automanage/patchtiers",
        "microsoft.automation/automationaccounts",
        "microsoft.automation/automationaccounts/configurations",
        "microsoft.automation/automationaccounts/runbooks",
        "microsoft.autonomousdevelopmentplatform/accounts",
        "microsoft.autonomousdevelopmentplatform/workspaces",
        "microsoft.autonomoussystems/workspaces",
        "microsoft.avs/privateclouds",
        "microsoft.awsconnector/accessanalyzeranalyzers",
        "microsoft.awsconnector/acmcertificatesummaries",
        "microsoft.awsconnector/apigatewayrestapis",
        "microsoft.awsconnector/apigatewaystages",
        "microsoft.awsconnector/appsyncgraphqlapis",
        "microsoft.awsconnector/autoscalingautoscalinggroups",
        "microsoft.awsconnector/cloudformationstacks",
        "microsoft.awsconnector/cloudformationstacksets",
        "microsoft.awsconnector/cloudfrontdistributions",
        "microsoft.awsconnector/cloudtrailtrails",
        "microsoft.awsconnector/cloudwatchalarms",
        "microsoft.awsconnector/codebuildprojects",
        "microsoft.awsconnector/codebuildsourcecredentialsinfos",
        "microsoft.awsconnector/configserviceconfigurationrecorders",
        "microsoft.awsconnector/configserviceconfigurationrecorderstatuses",
        "microsoft.awsconnector/configservicedeliverychannels",
        "microsoft.awsconnector/databasemigrationservicereplicationinstances",
        "microsoft.awsconnector/daxclusters",
        "microsoft.awsconnector/dynamodbcontinuousbackupsdescriptions",
        "microsoft.awsconnector/dynamodbtables",
        "microsoft.awsconnector/ec2accountattributes",
        "microsoft.awsconnector/ec2addresses",
        "microsoft.awsconnector/ec2flowlogs",
        "microsoft.awsconnector/ec2images",
        "microsoft.awsconnector/ec2instancestatuses",
        "microsoft.awsconnector/ec2ipams",
        "microsoft.awsconnector/ec2keypairs",
        "microsoft.awsconnector/ec2networkacls",
        "microsoft.awsconnector/ec2networkinterfaces",
        "microsoft.awsconnector/ec2routetables",
        "microsoft.awsconnector/ec2securitygroups",
        "microsoft.awsconnector/ec2snapshots",
        "microsoft.awsconnector/ec2subnets",
        "microsoft.awsconnector/ec2volumes",
        "microsoft.awsconnector/ec2vpcendpoints",
        "microsoft.awsconnector/ec2vpcpeeringconnections",
        "microsoft.awsconnector/ec2vpcs",
        "microsoft.awsconnector/ecrimagedetails",
        "microsoft.awsconnector/ecrrepositories",
        "microsoft.awsconnector/ecsclusters",
        "microsoft.awsconnector/ecsservices",
        "microsoft.awsconnector/ecstaskdefinitions",
        "microsoft.awsconnector/efsfilesystems",
        "microsoft.awsconnector/efsmounttargets",
        "microsoft.awsconnector/eksnodegroups",
        "microsoft.awsconnector/elasticbeanstalkapplications",
        "microsoft.awsconnector/elasticbeanstalkconfigurationtemplates",
        "microsoft.awsconnector/elasticbeanstalkenvironments",
        "microsoft.awsconnector/elasticloadbalancingv2listeners",
        "microsoft.awsconnector/elasticloadbalancingv2loadbalancers",
        "microsoft.awsconnector/elasticloadbalancingv2targetgroups",
        "microsoft.awsconnector/elasticloadbalancingv2targethealthdescriptions",
        "microsoft.awsconnector/emrclusters",
        "microsoft.awsconnector/guarddutydetectors",
        "microsoft.awsconnector/iamaccesskeylastuseds",
        "microsoft.awsconnector/iamaccesskeymetadata",
        "microsoft.awsconnector/iamgroups",
        "microsoft.awsconnector/iaminstanceprofiles",
        "microsoft.awsconnector/iammfadevices",
        "microsoft.awsconnector/iampasswordpolicies",
        "microsoft.awsconnector/iampolicyversions",
        "microsoft.awsconnector/iamroles",
        "microsoft.awsconnector/iamservercertificates",
        "microsoft.awsconnector/iamvirtualmfadevices",
        "microsoft.awsconnector/kmsaliases",
        "microsoft.awsconnector/kmskeys",
        "microsoft.awsconnector/lambdafunctioncodelocations",
        "microsoft.awsconnector/lambdafunctionconfigurations",
        "microsoft.awsconnector/lambdafunctions",
        "microsoft.awsconnector/lightsailbuckets",
        "microsoft.awsconnector/lightsailinstances",
        "microsoft.awsconnector/logsloggroups",
        "microsoft.awsconnector/logslogstreams",
        "microsoft.awsconnector/logsmetricfilters",
        "microsoft.awsconnector/logssubscriptionfilters",
        "microsoft.awsconnector/macie2jobsummaries",
        "microsoft.awsconnector/macieallowlists",
        "microsoft.awsconnector/networkfirewallfirewallpolicies",
        "microsoft.awsconnector/networkfirewallfirewalls",
        "microsoft.awsconnector/networkfirewallrulegroups",
        "microsoft.awsconnector/opensearchdomainstatuses",
        "microsoft.awsconnector/organizationsaccounts",
        "microsoft.awsconnector/organizationsorganizations",
        "microsoft.awsconnector/rdsdbclusters",
        "microsoft.awsconnector/rdsdbinstances",
        "microsoft.awsconnector/rdsdbsnapshotattributesresults",
        "microsoft.awsconnector/rdsdbsnapshots",
        "microsoft.awsconnector/rdseventsubscriptions",
        "microsoft.awsconnector/rdsexporttasks",
        "microsoft.awsconnector/redshiftclusterparametergroups",
        "microsoft.awsconnector/redshiftclusters",
        "microsoft.awsconnector/route53domainsdomainsummaries",
        "microsoft.awsconnector/route53hostedzones",
        "microsoft.awsconnector/route53resourcerecordsets",
        "microsoft.awsconnector/s3accesscontrolpolicies",
        "microsoft.awsconnector/s3accesspoints",
        "microsoft.awsconnector/s3bucketpolicies",
        "microsoft.awsconnector/s3buckets",
        "microsoft.awsconnector/sagemakerapps",
        "microsoft.awsconnector/sagemakernotebookinstancesummaries",
        "microsoft.awsconnector/secretsmanagerresourcepolicies",
        "microsoft.awsconnector/secretsmanagersecrets",
        "microsoft.awsconnector/snssubscriptions",
        "microsoft.awsconnector/snstopics",
        "microsoft.awsconnector/sqsqueues",
        "microsoft.awsconnector/ssminstanceinformations",
        "microsoft.awsconnector/ssmparameters",
        "microsoft.awsconnector/ssmresourcecompliancesummaryitems",
        "microsoft.awsconnector/wafv2loggingconfigurations",
        "microsoft.awsconnector/wafwebaclsummaries",
        "microsoft.azureactivedirectory/b2cdirectories",
        "microsoft.azureactivedirectory/ciamdirectories",
        "microsoft.azureactivedirectory/guestusages",
        "microsoft.azurearcdata/datacontrollers",
        "microsoft.azurearcdata/postgresinstances",
        "microsoft.azurearcdata/sqlmanagedinstances",
        "microsoft.azurearcdata/sqlserveresulicenses",
        "microsoft.azurearcdata/sqlserverinstances",
        "microsoft.azurearcdata/sqlserverinstances/availabilitygroups",
        "microsoft.azurearcdata/sqlserverinstances/databases",
        "microsoft.azurearcdata/sqlserverlicenses",
        "microsoft.azurecis/dstsserviceclientidentities",
        "microsoft.azuredata/sqlbigdataclusters",
        "microsoft.azuredata/sqlserverregistrations",
        "microsoft.azuredatatransfer/connections",
        "microsoft.azuredatatransfer/connections/flows",
        "microsoft.azuredatatransfer/pipelines",
        "microsoft.azuredatatransfer/pipelines/flowprofiles",
        "microsoft.azurefleet/fleets",
        "microsoft.azureimagetestingforlinux/jobs",
        "microsoft.azureimagetestingforlinux/jobtemplates",
        "microsoft.azurelargeinstance/azurelargeinstances",
        "microsoft.azurelargeinstance/azurelargestorageinstances",
        "microsoft.azurepercept/accounts",
        "microsoft.azureplaywrightservice/accounts",
        "microsoft.azurescan/scanningaccounts",
        "microsoft.azuresphere/catalogs",
        "microsoft.azuresphere/catalogs/products",
        "microsoft.azurestack/linkedsubscriptions",
        "microsoft.azurestack/registrations",
        "microsoft.azurestackhci/clusters",
        "microsoft.azurestackhci/devicepools",
        "microsoft.azurestackhci/edgemachines",
        "microsoft.azurestackhci/edgenodepools",
        "microsoft.azurestackhci/galleryimages",
        "microsoft.azurestackhci/logicalnetworks",
        "microsoft.azurestackhci/marketplacegalleryimages",
        "microsoft.azurestackhci/networkinterfaces",
        "microsoft.azurestackhci/networksecuritygroups",
        "microsoft.azurestackhci/storagecontainers",
        "microsoft.azurestackhci/virtualharddisks",
        "microsoft.azurestackhci/virtualmachines",
        "microsoft.azurestackhci/virtualmachines/extensions",
        "microsoft.azurestackhci/virtualnetworks",
        "microsoft.backupsolutions/vmwareapplications",
        "microsoft.bakeryhybrid/pies",
        "microsoft.baremetal/baremetalconnections",
        "microsoft.baremetal/consoleconnections",
        "microsoft.baremetal/crayservers",
        "microsoft.baremetal/monitoringservers",
        "microsoft.baremetal/peeringsettings",
        "microsoft.baremetalinfrastructure/baremetalinstances",
        "microsoft.baremetalinfrastructure/baremetalstorageinstances",
        "microsoft.batch/batchaccounts",
        "microsoft.billingbenefits/credits",
        "microsoft.billingbenefits/discounts",
        "microsoft.billingbenefits/incentiveschedules",
        "microsoft.billingbenefits/maccs",
        "microsoft.bing/accounts",
        "microsoft.biztalkservices/biztalk",
        "microsoft.bluefin/instances",
        "microsoft.bluefin/instances/datasets",
        "microsoft.bluefin/instances/pipelines",
        "microsoft.botservice/botservices",
        "microsoft.cache/redis",
        "microsoft.cache/redisenterprise",
        "microsoft.cdn/cdnwebapplicationfirewallpolicies",
        "microsoft.cdn/edgeactions",
        "microsoft.cdn/edgeactions/attachments",
        "microsoft.cdn/edgeactions/executionfilters",
        "microsoft.cdn/edgeactions/versions",
        "microsoft.cdn/profiles",
        "microsoft.cdn/profiles/afdendpoints",
        "microsoft.cdn/profiles/endpoints",
        "microsoft.certificateregistration/certificateorders",
        "microsoft.chaos/applications",
        "microsoft.chaos/experiments",
        "microsoft.chaos/privateaccesses",
        "microsoft.chaos/resilienceprofiles",
        "microsoft.classiccompute/domainnames",
        "microsoft.classiccompute/virtualmachines",
        "microsoft.classicnetwork/networksecuritygroups",
        "microsoft.classicnetwork/reservedips",
        "microsoft.classicnetwork/virtualnetworks",
        "microsoft.classicstorage/storageaccounts",
        "microsoft.cleanroom/cleanrooms",
        "microsoft.cleanroom/collaborations",
        "microsoft.cleanroom/consortiums",
        "microsoft.cleanroom/microservices",
        "microsoft.clouddeviceplatform/delegatedidentities",
        "microsoft.cloudes/accounts",
        "microsoft.cloudhealth/healthmodels",
        "microsoft.cloudtest/accounts",
        "microsoft.cloudtest/buildcaches",
        "microsoft.cloudtest/hostedpools",
        "microsoft.cloudtest/images",
        "microsoft.cloudtest/pools",
        "microsoft.clusterstor/nodes",
        "microsoft.codesigning/codesigningaccounts",
        "microsoft.codespaces/plans",
        "microsoft.cognition/syntheticsaccounts",
        "microsoft.cognitivesearch/indexes",
        "microsoft.cognitiveservices/accounts",
        "microsoft.cognitiveservices/accounts/projects",
        "microsoft.cognitiveservices/commitmentplans",
        "microsoft.community/communitytrainings",
        "microsoft.compositesolutions/compositesolutiondefinitions",
        "microsoft.compositesolutions/compositesolutions",
        "microsoft.compute/availabilitysets",
        "microsoft.compute/capacityreservationgroups",
        "microsoft.compute/capacityreservationgroups/capacityreservations",
        "microsoft.compute/cloudservices",
        "microsoft.compute/cloudservices/roleinstances/networkinterfaces",
        "microsoft.compute/cloudservices/roleinstances/networkinterfaces/ipconfigurations/publicipaddresses",
        "microsoft.compute/diskaccesses",
        "microsoft.compute/diskencryptionsets",
        "microsoft.compute/disks",
        "microsoft.compute/galleries",
        "microsoft.compute/galleries/applications",
        "microsoft.compute/galleries/applications/versions",
        "microsoft.compute/galleries/images",
        "microsoft.compute/galleries/images/versions",
        "microsoft.compute/galleries/invmaccesscontrolprofiles",
        "microsoft.compute/galleries/invmaccesscontrolprofiles/versions",
        "microsoft.compute/galleries/remotecontainerimages",
        "microsoft.compute/galleries/scripts",
        "microsoft.compute/galleries/scripts/versions",
        "microsoft.compute/galleries/serviceartifacts",
        "microsoft.compute/hostgroups",
        "microsoft.compute/hostgroups/hosts",
        "microsoft.compute/images",
        "microsoft.compute/proximityplacementgroups",
        "microsoft.compute/restorepointcollections",
        "microsoft.compute/sharedvmextensions",
        "microsoft.compute/sharedvmextensions/versions",
        "microsoft.compute/sharedvmimages",
        "microsoft.compute/sharedvmimages/versions",
        "microsoft.compute/snapshots",
        "microsoft.compute/sshpublickeys",
        "microsoft.compute/swiftlets",
        "microsoft.compute/virtualmachines",
        "microsoft.compute/virtualmachines/extensions",
        "microsoft.compute/virtualmachines/runcommands",
        "microsoft.compute/virtualmachines/vmapplications",
        "microsoft.compute/virtualmachinescalesets",
        "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses",
        "microsoft.computeschedule/autoactions",
        "microsoft.computeschedule/scheduledactions",
        "microsoft.confidentialledger/ledgers",
        "microsoft.confidentialledger/managedccfs",
        "microsoft.confluent/organizations",
        "microsoft.connectedcache/cachenodes",
        "microsoft.connectedcache/enterprisecustomers",
        "microsoft.connectedcache/enterprisemcccustomers",
        "microsoft.connectedcache/enterprisemcccustomers/enterprisemcccachenodes",
        "microsoft.connectedcache/ispcustomers",
        "microsoft.connectedcache/ispcustomers/ispcachenodes",
        "microsoft.connectedcredentials/credentials",
        "microsoft.connectedopenstack/heatstacks",
        "microsoft.connectedopenstack/openstackidentities",
        "microsoft.connectedvehicle/platformaccounts",
        "microsoft.connectedvmwarevsphere/clusters",
        "microsoft.connectedvmwarevsphere/datastores",
        "microsoft.connectedvmwarevsphere/hosts",
        "microsoft.connectedvmwarevsphere/resourcepools",
        "microsoft.connectedvmwarevsphere/vcenters",
        "microsoft.connectedvmwarevsphere/virtualmachines",
        "microsoft.connectedvmwarevsphere/virtualmachines/extensions",
        "microsoft.connectedvmwarevsphere/virtualmachinetemplates",
        "microsoft.connectedvmwarevsphere/virtualnetworks",
        "microsoft.containerinstance/containergroupprofiles",
        "microsoft.containerinstance/containergroups",
        "microsoft.containerinstance/containerscalesets",
        "microsoft.containerinstance/ngroups",
        "microsoft.containerregistry/registries",
        "microsoft.containerregistry/registries/agentpools",
        "microsoft.containerregistry/registries/buildtasks",
        "microsoft.containerregistry/registries/replications",
        "microsoft.containerregistry/registries/taskruns",
        "microsoft.containerregistry/registries/tasks",
        "microsoft.containerregistry/registries/webhooks",
        "microsoft.containerservice/containerservices",
        "microsoft.containerservice/fleets",
        "microsoft.containerservice/fleets/managednamespaces",
        "microsoft.containerservice/managedclusters",
        "microsoft.containerservice/managedclusters/managednamespaces",
        "microsoft.containerservice/managedclustersnapshots",
        "microsoft.containerservice/snapshots",
        "microsoft.containerstorage/pools",
        "microsoft.contoso/clusters",
        "microsoft.contoso/employees",
        "microsoft.contoso/employees/desks",
        "microsoft.contoso/installations",
        "microsoft.contoso/recipes",
        "microsoft.contoso/towers",
        "microsoft.costmanagement/connectors",
        "microsoft.customproviders/resourceproviders",
        "microsoft.d365customerinsights/instances",
        "microsoft.dashboard/dashboards",
        "microsoft.dashboard/grafana",
        "microsoft.dashboard/grafana/integrationfabrics",
        "microsoft.dashboard/grafana/managedprivateendpoints",
        "microsoft.dataaccelerator/indexclusters",
        "microsoft.databasefleetmanager/fleets",
        "microsoft.databasewatcher/watchers",
        "microsoft.databox/jobs",
        "microsoft.databoxedge/databoxedgedevices",
        "microsoft.databricks/accessconnectors",
        "microsoft.databricks/workspaces",
        "microsoft.datacollaboration/workspaces",
        "microsoft.datadog/monitors",
        "microsoft.datafactory/factories",
        "microsoft.datalakeanalytics/accounts",
        "microsoft.datalakestore/accounts",
        "microsoft.datamigration/controllers",
        "microsoft.datamigration/migrationservices",
        "microsoft.datamigration/services",
        "microsoft.datamigration/services/projects",
        "microsoft.datamigration/slots",
        "microsoft.datamigration/sqlmigrationservices",
        "microsoft.dataplatform/capacities",
        "microsoft.dataprotection/backupvaults",
        "microsoft.dataprotection/resourceguards",
        "microsoft.datareplication/replicationfabrics",
        "microsoft.datareplication/replicationvaults",
        "microsoft.datashare/accounts",
        "microsoft.dbformariadb/servers",
        "microsoft.dbformysql/flexibleservers",
        "microsoft.dbformysql/servers",
        "microsoft.dbforpostgresql/flexibleservers",
        "microsoft.dbforpostgresql/servergroupsv2",
        "microsoft.dbforpostgresql/servers",
        "microsoft.delegatednetwork/controller",
        "microsoft.delegatednetwork/delegatedsubnets",
        "microsoft.delegatednetwork/orchestratorinstances",
        "microsoft.delegatednetwork/orchestrators",
        "microsoft.dependencymap/maps",
        "microsoft.dependencymap/maps/discoverysources",
        "microsoft.desktopvirtualization/appattachpackages",
        "microsoft.desktopvirtualization/applicationgroups",
        "microsoft.desktopvirtualization/connectionpolicies",
        "microsoft.desktopvirtualization/hostpools",
        "microsoft.desktopvirtualization/repositoryfolders",
        "microsoft.desktopvirtualization/scalingplans",
        "microsoft.desktopvirtualization/workspaces",
        "microsoft.devai/instances",
        "microsoft.devai/instances/experiments",
        "microsoft.devai/instances/sandboxes",
        "microsoft.devai/instances/sandboxes/experiments",
        "microsoft.devcenter/devcenters",
        "microsoft.devcenter/devcenters/devboxdefinitions",
        "microsoft.devcenter/networkconnections",
        "microsoft.devcenter/plans",
        "microsoft.devcenter/projects",
        "microsoft.devcenter/projects/pools",
        "microsoft.developmentwindows365/developmentcloudpcdelegatedmsis",
        "microsoft.devhub/iacprofiles",
        "microsoft.devhub/workflow",
        "microsoft.devhub/workflows",
        "microsoft.deviceonboarding/discoveryservices",
        "microsoft.deviceonboarding/discoveryservices/ownershipvoucherpublickeys",
        "microsoft.deviceonboarding/onboardingservices",
        "microsoft.deviceonboarding/onboardingservices/policies",
        "microsoft.deviceregistry/assetendpointprofiles",
        "microsoft.deviceregistry/assets",
        "microsoft.deviceregistry/devices",
        "microsoft.deviceregistry/discoveredassetendpointprofiles",
        "microsoft.deviceregistry/discoveredassets",
        "microsoft.deviceregistry/namespaces",
        "microsoft.deviceregistry/namespaces/assets",
        "microsoft.deviceregistry/namespaces/credentials",
        "microsoft.deviceregistry/namespaces/devices",
        "microsoft.deviceregistry/namespaces/discoveredassets",
        "microsoft.deviceregistry/namespaces/discovereddevices",
        "microsoft.deviceregistry/schemaregistries",
        "microsoft.devices/iothubs",
        "microsoft.devices/provisioningservices",
        "microsoft.deviceupdate/accounts",
        "microsoft.deviceupdate/accounts/agents",
        "microsoft.deviceupdate/accounts/instances",
        "microsoft.deviceupdate/updateaccounts",
        "microsoft.deviceupdate/updateaccounts/activedeployments",
        "microsoft.deviceupdate/updateaccounts/agents",
        "microsoft.deviceupdate/updateaccounts/deployments",
        "microsoft.deviceupdate/updateaccounts/deviceclasses",
        "microsoft.deviceupdate/updateaccounts/updates",
        "microsoft.devops/pipelines",
        "microsoft.devopsinfrastructure/pools",
        "microsoft.devtestlab/labcenters",
        "microsoft.devtestlab/labs",
        "microsoft.devtestlab/labs/servicerunners",
        "microsoft.devtestlab/labs/virtualmachines",
        "microsoft.devtestlab/schedules",
        "microsoft.devtunnels/tunnelplans",
        "microsoft.digitaltwins/digitaltwinsinstances",
        "microsoft.discovery/agents",
        "microsoft.discovery/bookshelves",
        "microsoft.discovery/datacontainers",
        "microsoft.discovery/datacontainers/dataassets",
        "microsoft.discovery/models",
        "microsoft.discovery/storages",
        "microsoft.discovery/supercomputers",
        "microsoft.discovery/supercomputers/nodepools",
        "microsoft.discovery/tools",
        "microsoft.discovery/workflows",
        "microsoft.discovery/workspaces",
        "microsoft.discovery/workspaces/projects",
        "microsoft.dns/dnszones/cname",
        "microsoft.documentdb/cassandraclusters",
        "microsoft.documentdb/databaseaccounts",
        "microsoft.documentdb/fleets",
        "microsoft.documentdb/garnetclusters",
        "microsoft.documentdb/managedresources",
        "microsoft.documentdb/mongoclusters",
        "microsoft.documentdb/throughputpools",
        "microsoft.domainregistration/domains",
        "microsoft.durabletask/namespaces",
        "microsoft.durabletask/schedulers",
        "microsoft.dynamics365fraudprotection/instances",
        "microsoft.easm/workspaces",
        "microsoft.edge/capabilitylists",
        "microsoft.edge/configtemplates",
        "microsoft.edge/configurations",
        "microsoft.edge/contexts",
        "microsoft.edge/deploymenttargets",
        "microsoft.edge/diagnostics",
        "microsoft.edge/disconnectedoperations",
        "microsoft.edge/hierarchylists",
        "microsoft.edge/schemas",
        "microsoft.edge/solutionbindings",
        "microsoft.edge/solutions",
        "microsoft.edge/solutiontemplates",
        "microsoft.edge/targets",
        "microsoft.edge/winfields",
        "microsoft.edgeorder/addresses",
        "microsoft.edgeorder/bootstrapconfigurations",
        "microsoft.edgeorder/orderitems",
        "microsoft.edgezones/edgezones",
        "microsoft.elastic/monitors",
        "microsoft.elasticsan/elasticsans",
        "microsoft.elasticsan/elasticsans/volumegroups",
        "microsoft.energydataplatform/energyservices",
        "microsoft.enterprisesupport/enterprisesupports",
        "microsoft.entraidgovernance/guestgovernanceusage",
        "microsoft.eventgrid/domains",
        "microsoft.eventgrid/namespaces",
        "microsoft.eventgrid/partnerconfigurations",
        "microsoft.eventgrid/partnerdestinations",
        "microsoft.eventgrid/partnernamespaces",
        "microsoft.eventgrid/partnerregistrations",
        "microsoft.eventgrid/partnertopics",
        "microsoft.eventgrid/systemtopics",
        "microsoft.eventgrid/topics",
        "microsoft.eventhub/clusters",
        "microsoft.eventhub/namespaces",
        "microsoft.experimentation/experimentworkspaces",
        "microsoft.extendedlocation/customlocations",
        "microsoft.extendedlocation/customlocations/resourcesyncrules",
        "microsoft.fabric/capacities",
        "microsoft.fabric/privatelinkservicesforfabric",
        "microsoft.fairfieldgardens/provisioningresources",
        "microsoft.fairfieldgardens/provisioningresources/provisioningpolicies",
        "microsoft.falcon/namespaces",
        "microsoft.fidalgo/projects/pools",
        "microsoft.fileshares/fileshares",
        "microsoft.fluidrelay/fluidrelayservers",
        "microsoft.footprintmonitoring/profiles",
        "microsoft.gaming/titles",
        "microsoft.gcpconnector/cloudfunctions",
        "microsoft.gcpconnector/storagebuckets",
        "microsoft.graph/azureadapplication",
        "microsoft.graphservices/accounts",
        "microsoft.hanaonazure/hanainstances",
        "microsoft.hanaonazure/sapmonitors",
        "microsoft.hardware/orders",
        "microsoft.hardwaresecuritymodules/cloudhsmclusters",
        "microsoft.hardwaresecuritymodules/dedicatedhsms",
        "microsoft.hdinsight/clusterpools",
        "microsoft.hdinsight/clusterpools/clusters",
        "microsoft.hdinsight/clusters",
        "microsoft.healthbot/healthbots",
        "microsoft.healthcareapis/services",
        "microsoft.healthcareapis/services/privateendpointconnections",
        "microsoft.healthcareapis/workspaces",
        "microsoft.healthcareapis/workspaces/analyticsconnectors",
        "microsoft.healthcareapis/workspaces/dicomservices",
        "microsoft.healthcareapis/workspaces/fhirservices",
        "microsoft.healthcareapis/workspaces/iotconnectors",
        "microsoft.healthcareinterop/dicomconnectors",
        "microsoft.healthcareinterop/dicomdirectchannels",
        "microsoft.healthcareinterop/dicomedgeconnectors",
        "microsoft.healthcareinterop/fhirqueryeventbatchchannels",
        "microsoft.healthcareinterop/fhirqueryflatfilebatchchannels",
        "microsoft.healthcareinterop/hl7connectors",
        "microsoft.healthcareinterop/hl7edgeconnectors",
        "microsoft.healthcareinterop/hubs",
        "microsoft.healthcareinterop/onelakeconnectors",
        "microsoft.healthcareinterop/storageaccountconnectors",
        "microsoft.healthdataaiservices/deidservices",
        "microsoft.healthmodel/healthmodels",
        "microsoft.healthplatform/accounts",
        "microsoft.hpcworkbench/instances",
        "microsoft.hpcworkbench/instances/chambers",
        "microsoft.hpcworkbench/instances/chambers/accessprofiles",
        "microsoft.hpcworkbench/instances/chambers/workloads",
        "microsoft.hpcworkbench/instances/consortiums",
        "microsoft.hybridcloud/cloudconnections",
        "microsoft.hybridcloud/cloudconnectors",
        "microsoft.hybridcompute/gateways",
        "microsoft.hybridcompute/licenses",
        "microsoft.hybridcompute/machines",
        "microsoft.hybridcompute/machines/extensions",
        "microsoft.hybridcompute/machines/licenseprofiles",
        "microsoft.hybridcompute/machines/runcommands",
        "microsoft.hybridcompute/privatelinkscopes",
        "microsoft.hybridconnectivity/publiccloudconnectors",
        "microsoft.hybridcontainerservice/provisionedclusters",
        "microsoft.hybridcontainerservice/provisionedclusters/agentpools",
        "microsoft.hybridcontainerservice/storagespaces",
        "microsoft.hybridcontainerservice/virtualnetworks",
        "microsoft.hybriddata/datamanagers",
        "microsoft.hybridnetwork/configurationgroupvalues",
        "microsoft.hybridnetwork/devices",
        "microsoft.hybridnetwork/networkfunctions",
        "microsoft.hybridnetwork/publishers",
        "microsoft.hybridnetwork/publishers/artifactstores",
        "microsoft.hybridnetwork/publishers/artifactstores/artifactmanifests",
        "microsoft.hybridnetwork/publishers/configurationgroupschemas",
        "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups",
        "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions",
        "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/previewsubscriptions",
        "microsoft.hybridnetwork/publishers/networkservicedesigngroups",
        "microsoft.hybridnetwork/publishers/networkservicedesigngroups/networkservicedesignversions",
        "microsoft.hybridnetwork/servicemanagementcontainers",
        "microsoft.hybridnetwork/servicemanagementcontainers/rolloutsequences",
        "microsoft.hybridnetwork/servicemanagementcontainers/rollouttiers",
        "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications",
        "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts",
        "microsoft.hybridnetwork/sitenetworkservices",
        "microsoft.hybridnetwork/sites",
        "microsoft.ibmpower/powervirtualmachines",
        "microsoft.ibmpower/powervirtualmachines/interfaces",
        "microsoft.importexport/jobs",
        "microsoft.insights/actiongroups",
        "microsoft.insights/activitylogalerts",
        "microsoft.insights/autoscalesettings",
        "microsoft.insights/components",
        "microsoft.insights/datacollectionendpoints",
        "microsoft.insights/datacollectionrules",
        "microsoft.insights/firstparty",
        "microsoft.insights/guestdiagnosticsettings",
        "microsoft.insights/metricalerts",
        "microsoft.insights/notificationgroups",
        "microsoft.insights/notificationrules",
        "microsoft.insights/privatelinkscopes",
        "microsoft.insights/scheduledqueryrules",
        "microsoft.insights/webtests",
        "microsoft.insights/workbooks",
        "microsoft.insights/workbooktemplates",
        "microsoft.integrationspaces/spaces",
        "microsoft.integrationspaces/spaces/applications",
        "microsoft.iotcentral/iotapps",
        "microsoft.iotfirmwaredefense/workspaces",
        "microsoft.iotoperations/instances",
        "microsoft.iotoperationsdataprocessor/instances",
        "microsoft.iotoperationsdataprocessor/instances/datasets",
        "microsoft.iotoperationsdataprocessor/instances/pipelines",
        "microsoft.iotoperationsmq/mq",
        "microsoft.iotoperationsmq/mq/broker",
        "microsoft.iotoperationsmq/mq/broker/authentication",
        "microsoft.iotoperationsmq/mq/broker/authorization",
        "microsoft.iotoperationsmq/mq/broker/listener",
        "microsoft.iotoperationsmq/mq/datalakeconnector",
        "microsoft.iotoperationsmq/mq/datalakeconnector/topicmap",
        "microsoft.iotoperationsmq/mq/diagnosticservice",
        "microsoft.iotoperationsmq/mq/kafkaconnector",
        "microsoft.iotoperationsmq/mq/kafkaconnector/topicmap",
        "microsoft.iotoperationsmq/mq/mqttbridgeconnector",
        "microsoft.iotoperationsmq/mq/mqttbridgeconnector/topicmap",
        "microsoft.iotoperationsorchestrator/instances",
        "microsoft.iotoperationsorchestrator/solutions",
        "microsoft.iotoperationsorchestrator/targets",
        "microsoft.keyvault/hsmpools",
        "microsoft.keyvault/managedhsms",
        "microsoft.keyvault/vaults",
        "microsoft.kubernetes/connectedclusters",
        "microsoft.kubernetesconfiguration/privatelinkscopes",
        "microsoft.kusto/clusters",
        "microsoft.kx/kdbinsightsenterprise",
        "microsoft.labservices/labaccounts",
        "microsoft.labservices/labplans",
        "microsoft.labservices/labs",
        "microsoft.liftrpilot/organizations",
        "microsoft.liftrpilot/testtrackedresources",
        "microsoft.liftrpilot/testtrackedsyncresources",
        "microsoft.loadtestservice/loadtests",
        "microsoft.loadtestservice/playwrightworkspaces",
        "microsoft.logic/businessprocesses",
        "microsoft.logic/integrationaccounts",
        "microsoft.logic/integrationserviceenvironments",
        "microsoft.logic/integrationserviceenvironments/managedapis",
        "microsoft.logic/templates",
        "microsoft.logic/workflows",
        "microsoft.machinelearning/webservices",
        "microsoft.machinelearningservices/inferencemodels",
        "microsoft.machinelearningservices/registries",
        "microsoft.machinelearningservices/virtualclusters",
        "microsoft.machinelearningservices/workspaces",
        "microsoft.machinelearningservices/workspaces/batchendpoints",
        "microsoft.machinelearningservices/workspaces/batchendpoints/deployments",
        "microsoft.machinelearningservices/workspaces/inferencepools",
        "microsoft.machinelearningservices/workspaces/inferencepools/endpoints",
        "microsoft.machinelearningservices/workspaces/inferencepools/groups",
        "microsoft.machinelearningservices/workspaces/onlineendpoints",
        "microsoft.machinelearningservices/workspaces/onlineendpoints/deployments",
        "microsoft.machinelearningservices/workspaces/registries",
        "microsoft.machinelearningservices/workspaces/serverlessendpoints",
        "microsoft.maintenance/maintenanceconfigurations",
        "microsoft.maintenance/maintenancepolicies",
        "microsoft.maintenance/orchestrationpreferences",
        "microsoft.managedidentity/userassignedidentities",
        "microsoft.managednetworkfabric/accesscontrollists",
        "microsoft.managednetworkfabric/internetgatewayrules",
        "microsoft.managednetworkfabric/internetgateways",
        "microsoft.managednetworkfabric/ipcommunities",
        "microsoft.managednetworkfabric/ipcommunitylists",
        "microsoft.managednetworkfabric/ipextendedcommunities",
        "microsoft.managednetworkfabric/ipprefixes",
        "microsoft.managednetworkfabric/ipprefixlists",
        "microsoft.managednetworkfabric/l2isolationdomains",
        "microsoft.managednetworkfabric/l3isolationdomains",
        "microsoft.managednetworkfabric/neighborgroups",
        "microsoft.managednetworkfabric/networkdevices",
        "microsoft.managednetworkfabric/networkfabriccontrollers",
        "microsoft.managednetworkfabric/networkfabrics",
        "microsoft.managednetworkfabric/networkmonitors",
        "microsoft.managednetworkfabric/networkpacketbrokers",
        "microsoft.managednetworkfabric/networkracks",
        "microsoft.managednetworkfabric/networktaprules",
        "microsoft.managednetworkfabric/networktaps",
        "microsoft.managednetworkfabric/routepolicies",
        "microsoft.managedstorageclass/managedstorageclass",
        "microsoft.manufacturingplatform/manufacturingdataservices",
        "microsoft.maps/accounts",
        "microsoft.maps/accounts/creators",
        "microsoft.messagingcatalog/catalogs",
        "microsoft.messagingconnectors/connectors",
        "microsoft.metaverse/metaverses",
        "microsoft.migrate/assessmentprojects",
        "microsoft.migrate/migrateprojects",
        "microsoft.migrate/modernizeprojects",
        "microsoft.migrate/movecollections",
        "microsoft.migrate/projects",
        "microsoft.mission/catalogs",
        "microsoft.mission/communities",
        "microsoft.mission/communities/communityendpoints",
        "microsoft.mission/communities/transithubs",
        "microsoft.mission/enclaveconnections",
        "microsoft.mission/externalconnections",
        "microsoft.mission/internalconnections",
        "microsoft.mission/virtualenclaves",
        "microsoft.mission/virtualenclaves/enclaveendpoints",
        "microsoft.mission/virtualenclaves/endpoints",
        "microsoft.mission/virtualenclaves/workloads",
        "microsoft.mixedreality/objectanchorsaccounts",
        "microsoft.mixedreality/objectunderstandingaccounts",
        "microsoft.mixedreality/remoterenderingaccounts",
        "microsoft.mixedreality/spatialanchorsaccounts",
        "microsoft.mixedreality/spatialmapsaccounts",
        "microsoft.mobilenetwork/amfdeployments",
        "microsoft.mobilenetwork/clusterservices",
        "microsoft.mobilenetwork/mobilenetworks",
        "microsoft.mobilenetwork/mobilenetworks/datanetworks",
        "microsoft.mobilenetwork/mobilenetworks/edgenetworksecuritygroups",
        "microsoft.mobilenetwork/mobilenetworks/services",
        "microsoft.mobilenetwork/mobilenetworks/simpolicies",
        "microsoft.mobilenetwork/mobilenetworks/sites",
        "microsoft.mobilenetwork/mobilenetworks/slices",
        "microsoft.mobilenetwork/mobilenetworks/wifissids",
        "microsoft.mobilenetwork/nrfdeployments",
        "microsoft.mobilenetwork/nssfdeployments",
        "microsoft.mobilenetwork/observabilityservices",
        "microsoft.mobilenetwork/packetcorecontrolplanes",
        "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes",
        "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks",
        "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attachedwifissids",
        "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/edgevirtualnetworks",
        "microsoft.mobilenetwork/radioaccessnetworks",
        "microsoft.mobilenetwork/simgroups",
        "microsoft.mobilenetwork/sims",
        "microsoft.mobilenetwork/sims/simprofiles",
        "microsoft.mobilenetwork/smfdeployments",
        "microsoft.mobilenetwork/upfdeployments",
        "microsoft.mobilepacketcore/amfdeployments",
        "microsoft.mobilepacketcore/clusterservices",
        "microsoft.mobilepacketcore/mobilepacketcores",
        "microsoft.mobilepacketcore/networkfunctions",
        "microsoft.mobilepacketcore/nrfdeployments",
        "microsoft.mobilepacketcore/nssfdeployments",
        "microsoft.mobilepacketcore/observabilityservices",
        "microsoft.mobilepacketcore/smfdeployments",
        "microsoft.mobilepacketcore/upfdeployments",
        "microsoft.modsimworkbench/instances",
        "microsoft.modsimworkbench/instances/chambers",
        "microsoft.modsimworkbench/instances/chambers/connectors",
        "microsoft.modsimworkbench/instances/chambers/workloads",
        "microsoft.modsimworkbench/workbenches",
        "microsoft.modsimworkbench/workbenches/chambers",
        "microsoft.modsimworkbench/workbenches/chambers/connectors",
        "microsoft.modsimworkbench/workbenches/chambers/storages",
        "microsoft.modsimworkbench/workbenches/chambers/workloads",
        "microsoft.modsimworkbench/workbenches/sharedstorages",
        "microsoft.monitor/accounts",
        "microsoft.monitor/pipelinegroups",
        "microsoft.mysqldiscovery/mysqlsites",
        "microsoft.netapp/activedirectoryconfigs",
        "microsoft.netapp/netappaccounts",
        "microsoft.netapp/netappaccounts/backuppolicies",
        "microsoft.netapp/netappaccounts/backupvaults",
        "microsoft.netapp/netappaccounts/capacitypools",
        "microsoft.netapp/netappaccounts/capacitypools/caches",
        "microsoft.netapp/netappaccounts/capacitypools/volumes",
        "microsoft.netapp/netappaccounts/snapshotpolicies",
        "microsoft.netapp/scaleaccounts",
        "microsoft.netapp/scaleaccounts/scalecapacitypools",
        "microsoft.netapp/scaleaccounts/scalecapacitypools/scalevolumes",
        "microsoft.netapp/scaleaccounts/scalesnapshotpolicies",
        "microsoft.network/applicationgateways",
        "microsoft.network/applicationgatewaywebapplicationfirewallpolicies",
        "microsoft.network/applicationsecuritygroups",
        "microsoft.network/azurefirewalls",
        "microsoft.network/bastionhosts",
        "microsoft.network/connections",
        "microsoft.network/customipprefixes",
        "microsoft.network/ddoscustompolicies",
        "microsoft.network/ddosprotectionplans",
        "microsoft.network/dnsforwardingrulesets",
        "microsoft.network/dnsresolverdomainlists",
        "microsoft.network/dnsresolverpolicies",
        "microsoft.network/dnsresolverpolicies/dnssecurityrules",
        "microsoft.network/dnsresolverpolicies/virtualnetworklinks",
        "microsoft.network/dnsresolvers",
        "microsoft.network/dnsresolvers/inboundendpoints",
        "microsoft.network/dnsresolvers/outboundendpoints",
        "microsoft.network/dnssecuritypolicies",
        "microsoft.network/dnssecuritypolicies/virtualnetworklinks",
        "microsoft.network/dnssecuritypolicydomainlists",
        "microsoft.network/dnszones",
        "microsoft.network/dscpconfigurations",
        "microsoft.network/expressroutecircuits",
        "microsoft.network/expressroutecrossconnections",
        "microsoft.network/expressroutegateways",
        "microsoft.network/expressrouteports",
        "microsoft.network/firewallpolicies",
        "microsoft.network/firewallpolicies/rulegroups",
        "microsoft.network/frontdoors",
        "microsoft.network/frontdoorwebapplicationfirewallpolicies",
        "microsoft.network/gatewayloadbalanceraliases",
        "microsoft.network/ipallocations",
        "microsoft.network/ipgroups",
        "microsoft.network/loadbalancers",
        "microsoft.network/localnetworkgateways",
        "microsoft.network/natgateways",
        "microsoft.network/networkexperimentprofiles",
        "microsoft.network/networkintentpolicies",
        "microsoft.network/networkinterfaces",
        "microsoft.network/networkmanagers",
        "microsoft.network/networkmanagers/ipampools",
        "microsoft.network/networkmanagers/verifierworkspaces",
        "microsoft.network/networkprofiles",
        "microsoft.network/networksecuritygroups",
        "microsoft.network/networksecurityperimeters",
        "microsoft.network/networkverifiers",
        "microsoft.network/networkvirtualappliances",
        "microsoft.network/networkwatchers",
        "microsoft.network/networkwatchers/agents",
        "microsoft.network/networkwatchers/connectionanalyzers",
        "microsoft.network/networkwatchers/connectionmonitors",
        "microsoft.network/networkwatchers/flowlogs",
        "microsoft.network/networkwatchers/lenses",
        "microsoft.network/networkwatchers/networkwatcheragents",
        "microsoft.network/networkwatchers/pingmeshes",
        "microsoft.network/p2svpngateways",
        "microsoft.network/privatednszones",
        "microsoft.network/privatednszones/virtualnetworklinks",
        "microsoft.network/privateendpointredirectmaps",
        "microsoft.network/privateendpoints",
        "microsoft.network/privatelinkservices",
        "microsoft.network/publicipaddresses",
        "microsoft.network/publicipprefixes",
        "microsoft.network/routefilters",
        "microsoft.network/routetables",
        "microsoft.network/sampleresources",
        "microsoft.network/securitypartnerproviders",
        "microsoft.network/serviceendpointpolicies",
        "microsoft.network/servicegateways",
        "microsoft.network/trafficmanagerprofiles",
        "microsoft.network/virtualhubs",
        "microsoft.network/virtualhubs/bgpconnections",
        "microsoft.network/virtualhubs/ipconfigurations",
        "microsoft.network/virtualnetworkappliances",
        "microsoft.network/virtualnetworkgateways",
        "microsoft.network/virtualnetworks",
        "microsoft.network/virtualnetworktaps",
        "microsoft.network/virtualrouters",
        "microsoft.network/virtualwans",
        "microsoft.network/vpngateways",
        "microsoft.network/vpnserverconfigurations",
        "microsoft.network/vpnsites",
        "microsoft.networkanalytics/dataconnectors",
        "microsoft.networkanalytics/datalakehouses",
        "microsoft.networkanalytics/dataproducts",
        "microsoft.networkanalytics/metricsingestionendpoints",
        "microsoft.networkcloud/baremetalmachines",
        "microsoft.networkcloud/cloudservicesnetworks",
        "microsoft.networkcloud/clustermanagers",
        "microsoft.networkcloud/clusters",
        "microsoft.networkcloud/clusters/baremetalmachinekeysets",
        "microsoft.networkcloud/clusters/bmckeysets",
        "microsoft.networkcloud/clusters/metricsconfigurations",
        "microsoft.networkcloud/defaultcninetworks",
        "microsoft.networkcloud/edgeclusters",
        "microsoft.networkcloud/edgeclusters/nodes",
        "microsoft.networkcloud/hybridaksclusters",
        "microsoft.networkcloud/kubernetesclusters",
        "microsoft.networkcloud/kubernetesclusters/agentpools",
        "microsoft.networkcloud/kubernetesclusters/features",
        "microsoft.networkcloud/l2networks",
        "microsoft.networkcloud/l3networks",
        "microsoft.networkcloud/racks",
        "microsoft.networkcloud/registrationhubs",
        "microsoft.networkcloud/registrationhubs/images",
        "microsoft.networkcloud/registrationhubs/machines",
        "microsoft.networkcloud/storageappliances",
        "microsoft.networkcloud/trunkednetworks",
        "microsoft.networkcloud/virtualmachines",
        "microsoft.networkcloud/virtualmachines/consoles",
        "microsoft.networkcloud/volumes",
        "microsoft.networkfunction/azuretrafficcollectors",
        "microsoft.networkfunction/azuretrafficcollectors/collectorpolicies",
        "microsoft.networkfunction/meshvpns",
        "microsoft.networkfunction/vpnbranches",
        "microsoft.nexusidentity/identitycontrollers",
        "microsoft.nexusidentity/identitysets",
        "microsoft.notificationhubs/namespaces",
        "microsoft.notificationhubs/namespaces/notificationhubs",
        "microsoft.nutanix/interfaces",
        "microsoft.nutanix/nodes",
        "microsoft.objectstore/osnamespaces",
        "microsoft.offazure/appliances",
        "microsoft.offazure/hypervsites",
        "microsoft.offazure/importsites",
        "microsoft.offazure/mastersites",
        "microsoft.offazure/serversites",
        "microsoft.offazure/vmwaresites",
        "microsoft.offazurespringboot/springbootsites",
        "microsoft.onlineexperimentation/workspaces",
        "microsoft.openenergyplatform/energyservices",
        "microsoft.openlogisticsplatform/applicationmanagers",
        "microsoft.openlogisticsplatform/applicationworkspaces",
        "microsoft.openlogisticsplatform/workspaces",
        "microsoft.operationalinsights/clusters",
        "microsoft.operationalinsights/querypacks",
        "microsoft.operationalinsights/workspaces",
        "microsoft.operationsmanagement/solutions",
        "microsoft.operationsmanagement/views",
        "microsoft.oraclediscovery/oraclesites",
        "microsoft.orbital/cloudaccessrouters",
        "microsoft.orbital/contactprofiles",
        "microsoft.orbital/edgesites",
        "microsoft.orbital/geocatalogs",
        "microsoft.orbital/groundstations",
        "microsoft.orbital/l2connections",
        "microsoft.orbital/sdwancontrollers",
        "microsoft.orbital/spacecrafts",
        "microsoft.orbital/terminals",
        "microsoft.peering/peerings",
        "microsoft.peering/peeringservices",
        "microsoft.pki/pkis",
        "microsoft.playfab/playeraccountpools",
        "microsoft.playfab/titles",
        "microsoft.portal/dashboards",
        "microsoft.portalsdk/rootresources",
        "microsoft.portalservices/dashboards",
        "microsoft.portalservices/extensions",
        "microsoft.portalservices/extensions/deployments",
        "microsoft.portalservices/extensions/slots",
        "microsoft.portalservices/extensions/versions",
        "microsoft.powerbi/privatelinkservicesforpowerbi",
        "microsoft.powerbi/tenants",
        "microsoft.powerbi/workspacecollections",
        "microsoft.powerbidedicated/autoscalevcores",
        "microsoft.powerbidedicated/capacities",
        "microsoft.powerplatform/accounts",
        "microsoft.powerplatform/enterprisepolicies",
        "microsoft.premonition/libraries",
        "microsoft.premonition/libraries/analyses",
        "microsoft.premonition/libraries/samples",
        "microsoft.professionalservice/resources",
        "microsoft.programmableconnectivity/gateways",
        "microsoft.programmableconnectivity/operatorapiconnections",
        "microsoft.programmableconnectivity/operatorconnections",
        "microsoft.proposal/proposals",
        "microsoft.providerhub/providermonitorsettings",
        "microsoft.purview/accounts",
        "microsoft.quantum/provideraccounts",
        "microsoft.quantum/workspaces",
        "microsoft.recommendationsservice/accounts",
        "microsoft.recommendationsservice/accounts/modeling",
        "microsoft.recommendationsservice/accounts/serviceendpoints",
        "microsoft.recoveryservices/vaults",
        "microsoft.redhatopenshift/hcpopenshiftclusters",
        "microsoft.redhatopenshift/hcpopenshiftclusters/nodepools",
        "microsoft.redhatopenshift/openshiftclusters",
        "microsoft.relay/namespaces",
        "microsoft.remoteapp/collections",
        "microsoft.resiliency/chaosexperiments",
        "microsoft.resourceconnector/appliances",
        "microsoft.resourcegraph/queries",
        "microsoft.resources/deploymentscripts",
        "microsoft.resources/mobobrokers",
        "microsoft.resources/templatespecs",
        "microsoft.resources/templatespecs/versions",
        "microsoft.saas/applications",
        "microsoft.saas/resources",
        "microsoft.saashub/cloudservices",
        "microsoft.scom/managedinstances",
        "microsoft.scvmm/availabilitysets",
        "microsoft.scvmm/clouds",
        "microsoft.scvmm/virtualmachines",
        "microsoft.scvmm/virtualmachines/extensions",
        "microsoft.scvmm/virtualmachinetemplates",
        "microsoft.scvmm/virtualnetworks",
        "microsoft.scvmm/vmmservers",
        "microsoft.search/searchservices",
        "microsoft.secretmanagementsampleprovider/forecasts",
        "microsoft.secretsynccontroller/azurekeyvaultsecretproviderclasses",
        "microsoft.secretsynccontroller/secretsyncs",
        "microsoft.security/assignments",
        "microsoft.security/automations",
        "microsoft.security/customassessmentautomations",
        "microsoft.security/customentitystoreassignments",
        "microsoft.security/datascanners",
        "microsoft.security/iotsecuritysolutions",
        "microsoft.security/privatelinks",
        "microsoft.security/securityconnectors",
        "microsoft.security/standards",
        "microsoft.security/vmscanners",
        "microsoft.securitycopilot/capacities",
        "microsoft.securitydetonation/chambers",
        "microsoft.securitydevops/azuredevopsconnectors",
        "microsoft.securitydevops/githubconnectors",
        "microsoft.securitydevops/gitlabconnectors",
        "microsoft.securityplatform/accountlinks",
        "microsoft.sentinelplatformservices/sentinelplatformservices",
        "microsoft.servicebus/namespaces",
        "microsoft.servicefabric/clusters",
        "microsoft.servicefabric/containergroupsets",
        "microsoft.servicefabric/managedclusters",
        "microsoft.servicefabricmesh/applications",
        "microsoft.servicefabricmesh/gateways",
        "microsoft.servicefabricmesh/networks",
        "microsoft.servicefabricmesh/secrets",
        "microsoft.servicefabricmesh/volumes",
        "microsoft.servicenetworking/trafficcontrollers",
        "microsoft.servicenetworking/trafficcontrollers/associations",
        "microsoft.servicenetworking/trafficcontrollers/frontends",
        "microsoft.servicenetworking/trafficcontrollers/securitypolicies",
        "microsoft.serviceshub/connectors",
        "microsoft.signalrservice/signalr",
        "microsoft.signalrservice/signalr/replicas",
        "microsoft.signalrservice/webpubsub",
        "microsoft.signalrservice/webpubsub/replicas",
        "microsoft.singularity/accounts",
        "microsoft.skytap/nodes",
        "microsoft.softwareplan/softwarelicenses",
        "microsoft.softwareplan/softwaresubscriptions",
        "microsoft.solutions/appliancedefinitions",
        "microsoft.solutions/appliances",
        "microsoft.solutions/applicationdefinitions",
        "microsoft.solutions/applications",
        "microsoft.solutions/jitrequests",
        "microsoft.sovereign/landingzoneaccounts",
        "microsoft.spoolservice/spools",
        "microsoft.sql/instancepools",
        "microsoft.sql/managedinstances",
        "microsoft.sql/managedinstances/databases",
        "microsoft.sql/servers",
        "microsoft.sql/servers/databases",
        "microsoft.sql/servers/elasticpools",
        "microsoft.sql/servers/jobaccounts",
        "microsoft.sql/servers/jobagents",
        "microsoft.sql/virtualclusters",
        "microsoft.sqlvirtualmachine/sqlvirtualmachinegroups",
        "microsoft.sqlvirtualmachine/sqlvirtualmachines",
        "microsoft.standbypool/standbycontainergrouppools",
        "microsoft.standbypool/standbyvirtualmachinepools",
        "microsoft.storage/datamovers",
        "microsoft.storage/storageaccounts",
        "microsoft.storage/storageaccounts/connectors",
        "microsoft.storage/storageaccounts/datashares",
        "microsoft.storage/storagetasks",
        "microsoft.storageactions/storagetasks",
        "microsoft.storagecache/amlfilesystems",
        "microsoft.storagecache/caches",
        "microsoft.storagediscovery/storagediscoveryworkspaces",
        "microsoft.storageinsights/storagecollectionrules",
        "microsoft.storagemover/storagemovers",
        "microsoft.storagepool/diskpools",
        "microsoft.storagesync/storagesyncservices",
        "microsoft.storagetasks/storagetasks",
        "microsoft.storsimple/managers",
        "microsoft.streamanalytics/clusters",
        "microsoft.streamanalytics/streamingjobs",
        "microsoft.sustainabilityservices/calculations",
        "microsoft.swiftlet/virtualmachines",
        "microsoft.swiftlet/virtualmachinesnapshots",
        "microsoft.symphony/instances",
        "microsoft.symphony/solutions",
        "microsoft.symphony/targets",
        "microsoft.synapse/privatelinkhubs",
        "microsoft.synapse/workspaces",
        "microsoft.synapse/workspaces/bigdatapools",
        "microsoft.synapse/workspaces/kustopools",
        "microsoft.synapse/workspaces/sqlpools",
        "microsoft.syntex/accounts",
        "microsoft.syntex/documentprocessors",
        "microsoft.systemintegritymonitoring/simhubs",
        "microsoft.systemintegritymonitoring/simhubs/deviceprofiles",
        "microsoft.testbase/testbaseaccounts",
        "microsoft.testbase/testbaseaccounts/packages",
        "microsoft.throttling/throttlingaccounts",
        "microsoft.throttling/throttlingaccounts/rules",
        "microsoft.timeseriesinsights/environments",
        "microsoft.timeseriesinsights/environments/eventsources",
        "microsoft.timeseriesinsights/environments/referencedatasets",
        "microsoft.toolchainorchestrator/activations",
        "microsoft.toolchainorchestrator/campaigns",
        "microsoft.toolchainorchestrator/campaigns/versions",
        "microsoft.toolchainorchestrator/catalogs",
        "microsoft.toolchainorchestrator/catalogs/versions",
        "microsoft.toolchainorchestrator/diagnostics",
        "microsoft.toolchainorchestrator/instances",
        "microsoft.toolchainorchestrator/instances/versions",
        "microsoft.toolchainorchestrator/solutions",
        "microsoft.toolchainorchestrator/solutions/versions",
        "microsoft.toolchainorchestrator/targets",
        "microsoft.toolchainorchestrator/targets/versions",
        "microsoft.updatemanager/inventoryconfigurations",
        "microsoft.updatemanager/updaterules",
        "microsoft.usagebilling/accounts",
        "microsoft.verifiedid/authorities",
        "microsoft.videoindexer/accounts",
        "microsoft.virtualmachineimages/imagetemplates",
        "microsoft.visualstudio/account",
        "microsoft.visualstudio/account/extension",
        "microsoft.visualstudio/account/project",
        "microsoft.vmware/arczones",
        "microsoft.vmware/resourcepools",
        "microsoft.vmware/vcenters",
        "microsoft.vmware/virtualmachines",
        "microsoft.vmware/virtualmachinetemplates",
        "microsoft.vmware/virtualnetworks",
        "microsoft.voiceservices/communicationsgateways",
        "microsoft.voiceservices/communicationsgateways/contacts",
        "microsoft.voiceservices/communicationsgateways/testlines",
        "microsoft.voiceservices/operatorvoicemailinstances",
        "microsoft.vsonline/accounts",
        "microsoft.vsonline/plans",
        "microsoft.web/apimanagementaccounts",
        "microsoft.web/apimanagementaccounts/apis",
        "microsoft.web/certificates",
        "microsoft.web/connectiongateways",
        "microsoft.web/connections",
        "microsoft.web/containerapps",
        "microsoft.web/customapis",
        "microsoft.web/hostingenvironments",
        "microsoft.web/kubeenvironments",
        "microsoft.web/serverfarms",
        "microsoft.web/sites",
        "microsoft.web/sites/certificates",
        "microsoft.web/sites/slots",
        "microsoft.web/sites/workflows",
        "microsoft.web/staticsites",
        "microsoft.web/workerapps",
        "microsoft.weightsandbiases/instances",
        "microsoft.whiteboxcadlprovider/whiteboxresources",
        "microsoft.windows365/cloudpcdelegatedmsis",
        "microsoft.windowsesu/multipleactivationkeys",
        "microsoft.windowsiot/deviceservices",
        "microsoft.windowspushnotificationservices/registrations",
        "microsoft.workloadbuilder/migrationagents",
        "microsoft.workloadbuilder/workloads",
        "microsoft.workloads/connectors",
        "microsoft.workloads/connectors/acssbackups",
        "microsoft.workloads/connectors/amsinsights",
        "microsoft.workloads/connectors/sapvirtualinstancemonitors",
        "microsoft.workloads/epicvirtualinstances",
        "microsoft.workloads/epicvirtualinstances/databaseinstances",
        "microsoft.workloads/epicvirtualinstances/hyperspacewebinstances",
        "microsoft.workloads/epicvirtualinstances/presentationinstances",
        "microsoft.workloads/epicvirtualinstances/sharedinstances",
        "microsoft.workloads/epicvirtualinstances/wssinstances",
        "microsoft.workloads/insights",
        "microsoft.workloads/instancegroupmonitors",
        "microsoft.workloads/instancehealthdefinitions",
        "microsoft.workloads/instancemonitors",
        "microsoft.workloads/monitors",
        "microsoft.workloads/oraclevirtualinstances",
        "microsoft.workloads/oraclevirtualinstances/databaseinstances",
        "microsoft.workloads/phpworkloads",
        "microsoft.workloads/sapdiscoverysites",
        "microsoft.workloads/sapdiscoverysites/sapinstances",
        "microsoft.workloads/sapvirtualinstances",
        "microsoft.workloads/sapvirtualinstances/applicationinstances",
        "microsoft.workloads/sapvirtualinstances/centralinstances",
        "microsoft.workloads/sapvirtualinstances/databaseinstances",
        "microsoft.workloads/virtualinstances",
        "microsoft.workloads/virtualinstances/components",
        "microsoft.zerotrustsegmentation/segmentationmanagers",
        "microsoftdnsagent",
        "microsoftmonitoringagent",
        "mongodb.atlas/organizations",
        "neon.postgres/organizations",
        "networkwatcheragentlinux",
        "networkwatcheragentwindows",
        "newrelic.observability/monitors",
        "nginx.nginxplus/nginxdeployments",
        "omsagentforlinux",
        "oracle.database/autonomousdatabases",
        "oracle.database/cloudexadatainfrastructures",
        "oracle.database/cloudvmclusters",
        "oracle.database/dbsystems",
        "oracle.database/exadbvmclusters",
        "oracle.database/exascaledbstoragevaults",
        "oracle.database/networkanchors",
        "oracle.database/resourceanchors",
        "paloaltonetworks.cloudngfw/firewalls",
        "paloaltonetworks.cloudngfw/localrulestacks",
        "pinecone.vectordb/organizations",
        "providers.test/softdeletesupportedresources",
        "providers.test/statefulibizaengines",
        "providers.test/statefulresources",
        "providers.test/statefulresources/nestedresources",
        "providers.test/statelessresources",
        "providers.test/trackedresources",
        "purestorage.block/reservations",
        "purestorage.block/storagepools",
        "purestorage.block/volumepools",
        "qumulo.qaas/storages",
        "qumulo.storage/filesystems",
        "sendgrid.email/accounts",
        "splitio.experimentation/experimentationworkspaces",
        "sqlassessmentplus",
        "telemetryanddiagnostics",
        "wandisco.fusion/fusiongroups",
        "wandisco.fusion/fusiongroups/azurezones",
        "wandisco.fusion/fusiongroups/azurezones/plugins",
        "wandisco.fusion/fusiongroups/managedonpremzones",
        "wandisco.fusion/fusiongroups/replicationrules",
        "wandisco.fusion/migrators",
        "wandisco.fusion/migrators/datatransferagents",
        "wandisco.fusion/migrators/exclusiontemplates",
        "wandisco.fusion/migrators/livedatamigrations",
        "wandisco.fusion/migrators/metadatamigrations",
        "wandisco.fusion/migrators/metadatatargets",
        "wandisco.fusion/migrators/pathmappings",
        "wandisco.fusion/migrators/targets",
        "wandisco.fusion/migrators/verifications",
        "windows",
        "windowsagent.azuresecuritycenter",
        "windowsagent.sqlserver",
        "windowsclientassessmentplus",
        "windowsopenssh",
        "windowsosupdateextension",
        "windowspatchextension",
        "windowsserverassessment"
      ],
      "examples": [
        {
          "code": "Resources\n| summarize count()",
          "source": "kql",
          "length": 29,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project tags\n| summarize buildschema(tags)",
          "source": "kql",
          "length": 54,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type contains 'storage' | distinct type",
          "source": "kql",
          "length": 57,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project name, type, location\n| order by name asc",
          "source": "kql",
          "length": 60,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.keyvault/vaults'\n| count",
          "source": "kql",
          "length": 61,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where tags.environment=~'internal'\n| project name, tags",
          "source": "kql",
          "length": 67,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| distinct type, apiVersion\n| where isnotnull(apiVersion)\n| order by type asc",
          "source": "kql",
          "length": 87,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Storage/storageAccounts'\n| where tags['tag with a space']=='Custom value'",
          "source": "kql",
          "length": 110,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project name, location, type\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| order by name desc",
          "source": "kql",
          "length": 113,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)\n| summarize count () by subscriptionId",
          "source": "kql",
          "length": 127,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)\n| project properties.ipAddress\n| limit 100",
          "source": "kql",
          "length": 131,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| summarize count() by tostring(properties.storageProfile.osDisk.osType)",
          "source": "kql",
          "length": 134,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| project name, properties.storageProfile.osDisk.osType\n| top 5 by name desc",
          "source": "kql",
          "length": 138,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines' and name matches regex @'^Contoso(.*)[0-9]+$'\n| project name\n| order by name asc",
          "source": "kql",
          "length": 142,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| summarize count() by tostring(properties.extended.instanceView.powerState.code)",
          "source": "kql",
          "length": 143,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| extend os = properties.storageProfile.osDisk.osType\n| summarize count() by tostring(os)",
          "source": "kql",
          "length": 151,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| summarize count() by PowerState = tostring(properties.extended.instanceView.powerState.code)",
          "source": "kql",
          "length": 156,
          "startsWithTable": true
        },
        {
          "code": "resources\n| where type == 'microsoft.insights/datacollectionrules'\n| summarize dcrCount = count() by subscriptionId, resourceGroup, location\n| sort by dcrCount desc",
          "source": "kql",
          "length": 164,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\n| project name, resourceGroup\n| sort by name asc",
          "source": "kql",
          "length": 188,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.network/virtualnetworks'\n| extend subnets = properties.subnets\n| mv-expand subnets\n| project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId",
          "source": "kql",
          "length": 223,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type=~ 'microsoft.compute/virtualmachinescalesets'\n| where name contains 'contoso'\n| project subscriptionId, name, location, resourceGroup, Capacity = toint(sku.capacity), Tier = sku.name\n| order by Capacity desc",
          "source": "kql",
          "length": 230,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| join kind=leftouter (ResourceContainers | where type=='microsoft.resources/subscriptions' | project SubName=name, subscriptionId) on subscriptionId\n| where type == 'microsoft.keyvault/vaults'\n| project type, name, SubName",
          "source": "kql",
          "length": 233,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| summarize resourceCount=count() by subscriptionId\n| join (ResourceContainers | where type=='microsoft.resources/subscriptions' | project SubName=name, subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
          "source": "kql",
          "length": 243,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend powerState = tostring(properties.extended.instanceView.powerState.code)\n| extend VMSS = tostring(properties.virtualMachineScaleSet.id)\n| where isnotempty(VMSS)\n| project name, powerState, id",
          "source": "kql",
          "length": 261,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| project id, subscriptionId, location, type, properties.agentVersion, properties.kubernetesVersion, properties.distribution, properties.infrastructure, properties.totalNodeCount, properties.totalCoreCount\n| where type =~ 'Microsoft.Kubernetes/connectedClusters'",
          "source": "kql",
          "length": 272,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.documentdb/databaseaccounts'\n| project id, name, writeLocations = (properties.writeLocations)\n| mv-expand writeLocations\n| project id, name, writeLocation = tostring(writeLocations.locationName)\n| where writeLocation in ('East US', 'West US')\n| summarize by id, name",
          "source": "kql",
          "length": 303,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.storage/storageaccounts'\n| join kind=inner (\nResourceContainers\n| where type =~ 'microsoft.resources/subscriptions/resourcegroups'\n| where tags['Key1'] =~ 'Value1'\n| project subscriptionId, resourceGroup)\non subscriptionId, resourceGroup\n| project-away subscriptionId1, resourceGroup1",
          "source": "kql",
          "length": 321,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.network/networkinterfaces'\n| project id, ipConfigurations = properties.ipConfigurations\n| mvexpand ipConfigurations\n| project id, subnetId = tostring(ipConfigurations.properties.subnet.id)\n| parse kind=regex subnetId with '/virtualNetworks/' virtualNetwork '/subnets/' subnet\n| project id, virtualNetwork, subnet",
          "source": "kql",
          "length": 349,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type in (\n'microsoft.managedidentity/userassignedidentities',\n'microsoft.keyvault/vaults',\n'microsoft.sql/servers/databases',\n'microsoft.datalakestore/accounts',\n'microsoft.containerservice/managedclusters')\nor identity has 'SystemAssigned'\nor (type =~ 'microsoft.storage/storageaccounts' and properties['isHnsEnabled'] == true)\n| summarize count() by type",
          "source": "kql",
          "length": 374,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project domain=tostring(properties.domainName)\n| summarize Domains=make_list(domain), TotalMachineCount=sum(1)\n| mvexpand EachDomain = Domains\n| summarize PerDomainMachineCount = count() by tostring(EachDomain), TotalMachineCount\n| extend Pct = 100 * bin(todouble(PerDomainMachineCount) / todouble(TotalMachineCount), 0.001)",
          "source": "kql",
          "length": 387,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.storage/storageaccounts'\n| join kind=inner (\nResourceContainers\n| where type =~ 'microsoft.resources/subscriptions/resourcegroups'\n| mv-expand bagexpansion=array tags\n| where isnotempty(tags)\n| where tags[0] =~ 'key1' and tags[1] =~ 'value1'\n| project subscriptionId, resourceGroup)\non subscriptionId, resourceGroup\n| project-away subscriptionId1, resourceGroup1",
          "source": "kql",
          "length": 399,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.sql/servers/databases'\n| project databaseId = id, databaseName = name, elasticPoolId = tolower(tostring(properties.elasticPoolId))\n| join kind=leftouter (\nResources\n| where type =~ 'microsoft.sql/servers/elasticpools'\n| project elasticPoolId = tolower(id), elasticPoolName = name, elasticPoolState = properties.state)\non elasticPoolId\n| project-away elasticPoolId1",
          "source": "kql",
          "length": 401,
          "startsWithTable": true
        },
        {
          "code": "resources\n| where type =~ 'Microsoft.Kubernetes/connectedClusters' or type =~ 'Microsoft.ContainerService/managedClusters' | extend clusterId = tolower(id) | project clusterId\n| join\n( kubernetesconfigurationresources\n| where type == 'microsoft.kubernetesconfiguration/fluxconfigurations'\n| parse tolower(id) with clusterId '/providers/microsoft.kubernetesconfiguration/fluxconfigurations' *\n| project clusterId\n) on clusterId\n| project clusterId",
          "source": "kql",
          "length": 446,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Compute/virtualMachines'\n| where properties.extended.instanceView.powerState.code != 'PowerState/running'\n| project vmName = name, power = properties.extended.instanceView.powerState.code\n| join kind = leftouter (GuestConfigurationResources\n| extend vmName = tostring(split(properties.targetResourceId,'/')[(-1)])\n| project vmName, name, compliance = properties.complianceStatus) on vmName | project-away vmName1",
          "source": "kql",
          "length": 449,
          "startsWithTable": true
        },
        {
          "code": "resources\n| where type == 'microsoft.insights/datacollectionrules'\n| extend destinations = properties['destinations']\n| extend logAnalyticsWorkspaces = destinations['logAnalytics']\n| where isnotnull(logAnalyticsWorkspaces)\n| mv-expand logAnalyticsWorkspace = logAnalyticsWorkspaces\n| extend logAnalyticsWorkspaceResourceId = tolower(tostring(logAnalyticsWorkspace['workspaceResourceId']))\n| summarize dcrList = make_list(id), dcrCount = count() by logAnalyticsWorkspaceResourceId\n| sort by dcrCount desc",
          "source": "kql",
          "length": 503,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project\nid,\nJoinID = toupper(id),\nComputerName = tostring(properties.osProfile.computerName),\nOSName = tostring(properties.osName)\n| join kind=leftouter(\nResources\n| where type == 'microsoft.hybridcompute/machines/extensions'\n| project\nMachineId = toupper(substring(id, 0, indexof(id, '/extensions'))),\nExtensionName = name\n) on $left.JoinID == $right.MachineId\n| summarize Extensions = make_list(ExtensionName) by id, ComputerName, OSName\n| order by tolower(OSName) asc",
          "source": "kql",
          "length": 533,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Kubernetes/connectedClusters' | extend connectedClusterId = tolower(id) | project connectedClusterId\n| join kind = leftouter\n(KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType  == 'microsoft.azuremonitor.containers'\n| parse tolower(id) with connectedClusterId '/providers/microsoft.kubernetesconfiguration/extensions' *\n| project connectedClusterId\n)  on connectedClusterId\n| where connectedClusterId1 == ''\n| project connectedClusterId",
          "source": "kql",
          "length": 552,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\nJoinID = toupper(id),\nOSName = tostring(properties.osProfile.computerName),\nOSType = tostring(properties.storageProfile.osDisk.osType),\nVMSize = tostring(properties.hardwareProfile.vmSize)\n| join kind=leftouter(\nResources\n| where type == 'microsoft.compute/virtualmachines/extensions'\n| extend\nVMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\nExtensionName = name\n) on $left.JoinID == $right.VMId\n| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize\n| order by tolower(OSName) asc",
          "source": "kql",
          "length": 591,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project resourceGroup, Id = tolower(id), PowerState = tostring( properties.extended.instanceView.powerState.code)\n| join kind=leftouter (\nHealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| where tostring(properties.targetResourceType) =~ 'microsoft.compute/virtualmachines'\n| project targetResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState))\non $left.Id == $right.targetResourceId\n| project-away targetResourceId\n| where PowerState != 'PowerState/deallocated'",
          "source": "kql",
          "length": 623,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.extendedlocation/customlocations' and properties.provisioningState =~ 'succeeded'\n| extend clusterExtensionIds=properties.clusterExtensionIds\n| mvexpand clusterExtensionIds\n| extend clusterExtensionId = tolower(clusterExtensionIds)\n| join kind=leftouter(\nExtendedLocationResources\n| where type =~ 'microsoft.extendedlocation/customLocations/enabledResourcetypes'\n| project clusterExtensionId = tolower(properties.clusterExtensionId), extensionType = tolower(properties.extensionType)\n| where extensionType in~ ('microsoft.scvmm','microsoft.vmware')\n) on clusterExtensionId\n| where extensionType in~ ('microsoft.scvmm','microsoft.vmware')\n| summarize virtualMachineKindsEnabled=make_set(extensionType) by id,name,location\n| sort by name asc",
          "source": "kql",
          "length": 776,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project vmId = tolower(id), vmNics = properties.networkProfile.networkInterfaces\n| join (\nResources |\nwhere type =~ 'microsoft.network/networkinterfaces' |\nproject nicVMId = tolower(tostring(properties.virtualMachine.id)), allVMNicID = tolower(id), nicIPConfigs = properties.ipConfigurations)\non $left.vmId == $right.nicVMId\n| join (\nResources\n| where type =~ 'microsoft.network/publicipaddresses' and isnotnull(properties.ipConfiguration.id)\n| where sku.name == 'Basic' // exclude to find all VMs with Public IPs\n| project pipId = id, pipSku = sku.name, pipAssociatedNicId = tolower(tostring(split(properties.ipConfiguration.id, '/ipConfigurations/')[0])))\non $left.allVMNicID == $right.pipAssociatedNicId\n| project vmId, pipId, pipSku",
          "source": "kql",
          "length": 800,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = inner (\nHealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState']))\non $left.VmId == $right.VmId\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| project-rename ['Virtual Machine ID'] = VmId, UTCTimeStamp = properties_occurredTime, ['Availability State'] = AvailabilityState",
          "source": "kql",
          "length": 823,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\n| mv-expand nic=properties.networkProfile.networkInterfaces\n| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)\n| project vmId = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId = tostring(nic.id)\n| join kind=leftouter (\nResources\n| where type =~ 'microsoft.network/networkinterfaces'\n| extend ipConfigsCount=array_length(properties.ipConfigurations)\n| mv-expand ipconfig=properties.ipConfigurations\n| where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true'\n| project nicId = id, publicIpId = tostring(ipconfig.properties.publicIPAddress.id))\non nicId\n| project-away nicId1\n| summarize by vmId, vmName, vmSize, nicId, publicIpId\n| join kind=leftouter (\nResources\n| where type =~ 'microsoft.network/publicipaddresses'\n| project publicIpId = id, publicIpAddress = properties.ipAddress)\non publicIpId\n| project-away publicIpId1",
          "source": "kql",
          "length": 1015,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = leftouter (\nHealthResourceChanges\n| where subscriptionId == 'mySubscriptionId'\n| where id !has '/virtualMachineScaleSets/'\n| where id has '/virtualMachines/'\n| extend timestamp = todatetime(properties.changeAttributes.timestamp)\n| extend VmId = tolower(tostring(split(id, '/providers/Microsoft.ResourceHealth/')[0]))\n| where properties has 'properties.availabilityState' or properties has 'properties.annotationName'\n| extend HealthChangeType = iff(properties has 'properties.availabilityState', 'Availability', 'Annotation')\n| extend ChangeType = tostring(properties.changeType)\n| where ChangeType == 'Update'  or ChangeType == 'Delete')\non $left.VmId == $right.VmId\n| extend Changes = parse_json(tostring(properties.changes))\n| extend AvailabilityStateJson = parse_json(tostring(Changes['properties.availabilityState']))\n| extend AnnotationNameJson = parse_json(tostring(Changes['properties.annotationName']))\n| extend AnnotationSummary = parse_json(tostring(Changes['properties.summary']))\n| extend AnnotationReason = parse_json(tostring(Changes['properties.reason']))\n| extend AnnotationImpactType = parse_json(tostring(Changes['properties.impactType']))\n| extend AnnotationContext = parse_json(tostring(Changes['properties.context']))\n| extend AnnotationCategory = parse_json(tostring(Changes['properties.category']))\n| extend AvailabilityStatePreviousValue = tostring(AvailabilityStateJson.previousValue)\n| extend AvailabilityStateCurrentValue = tostring(AvailabilityStateJson.newValue)\n| extend AnnotationNamePreviousValue = tostring(AnnotationNameJson.previousValue)\n| extend AnnotationNameCurrentValue = tostring(AnnotationNameJson.newValue)\n| extend AnnotationSummaryCurrentValue = tostring(AnnotationSummary.newValue)\n| extend AnnotationReasonCurrentValue = tostring(AnnotationReason.newValue)\n| extend AnnotationImpactTypeCurrentValue = tostring(AnnotationImpactType.newValue)\n| extend AnnotationContextCurrentValue = tostring(AnnotationContext.newValue)\n| extend AnnotationCategoryCurrentValue = tostring(AnnotationCategory.newValue)\n| project id = VmId, timestamp, ChangeType, AvailabilityStateCurrentValue, AnnotationNameCurrentValue, AnnotationSummaryCurrentValue, AnnotationReasonCurrentValue, AnnotationImpactTypeCurrentValue, AnnotationContextCurrentValue, AnnotationCategoryCurrentValue, Changes\n| order by id, timestamp asc\n| project-rename ['Virtual Machine ID'] = id, UTCTimeStamp = timestamp, ['Change Type'] = ChangeType, ['Availability State'] = AvailabilityStateCurrentValue, ['Summary'] = AnnotationSummaryCurrentValue, ['Reason'] = AnnotationReasonCurrentValue, ['Impact Type'] = AnnotationImpactTypeCurrentValue, Category = AnnotationCategoryCurrentValue, Context = AnnotationContextCurrentValue",
          "source": "kql",
          "length": 2980,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project id, JoinID = toupper(id), ComputerName = tostring(properties.osProfile.computerName), OSName = tostring(properties.osName)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines/extensions'\n| project  MachineId = toupper(substring(id, 0, indexof(id, '/extensions'))),  ExtensionName = name ) on \\$left.JoinID == \\$right.MachineId\n| summarize Extensions = make_list(ExtensionName) by id, ComputerName, OSName\n| order by tolower(OSName) asc",
          "source": "cli",
          "length": 537,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'Microsoft.Kubernetes/connectedClusters'\n| extend connectedClusterId = tolower(id)\n| project connectedClusterId\n| join kind = leftouter (KubernetesConfigurationResources\n| where type == 'microsoft.kubernetesconfiguration/extensions'\n| where properties.ExtensionType == 'microsoft.azuremonitor.containers'\n| parse tolower(id) with connectedClusterId '/providers/microsoft.kubernetesconfiguration/extensions' *\n| project connectedClusterId ) on connectedClusterId\n| where connectedClusterId1 == ''\n| project connectedClusterId",
          "source": "cli",
          "length": 550,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend JoinID = toupper(id), OSName = tostring(properties.osProfile.computerName), OSType = tostring(properties.storageProfile.osDisk.osType), VMSize = tostring(properties.hardwareProfile.vmSize)\n| join kind=leftouter( Resources\n| where type == 'microsoft.compute/virtualmachines/extensions'\n| extend VMId = toupper(substring(id, 0, indexof(id, '/extensions'))), ExtensionName = name ) on \\$left.JoinID == \\$right.VMId\n| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize\n| order by tolower(OSName) asc",
          "source": "cli",
          "length": 593,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend JoinID = toupper(id), OSName = tostring(properties.osProfile.computerName), OSType = tostring(properties.storageProfile.osDisk.osType), VMSize = tostring(properties.hardwareProfile.vmSize)\n| join kind=leftouter( Resources\n| where type == 'microsoft.compute/virtualmachines/extensions'\n| extend  VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),  ExtensionName = name ) on \\$left.JoinID == \\$right.VMId\n| summarize Extensions = make_list(ExtensionName) by id, OSName, OSType, VMSize\n| order by tolower(OSName) asc",
          "source": "cli",
          "length": 595,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project resourceGroup, Id = tolower(id), PowerState = tostring( properties.extended.instanceView.powerState.code)\n| join kind=leftouter ( HealthResources\n| where type =~ 'microsoft.resourcehealth/availabilitystatuses'\n| where tostring(properties.targetResourceType) =~ 'microsoft.compute/virtualmachines'\n| project targetResourceId = tolower(tostring(properties.targetResourceId)), AvailabilityState = tostring(properties.availabilityState)) on \\$left.Id == \\$right.targetResourceId\n| project-away targetResourceId\n| where PowerState != 'PowerState/deallocated'",
          "source": "cli",
          "length": 625,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project vmId = tolower(id), vmNics = properties.networkProfile.networkInterfaces\n| join (Resources\n| where type =~ 'microsoft.network/networkinterfaces'\n| project nicVMId = tolower(tostring(properties.virtualMachine.id)), allVMNicID = tolower(id), nicIPConfigs = properties.ipConfigurations) on \\$left.vmId == \\$right.nicVMId\n| join ( Resources\n| where type =~ 'microsoft.network/publicipaddresses' and isnotnull(properties.ipConfiguration.id)\n| where sku.name == 'Basic'\n| project pipId = id, pipSku = sku.name, pipAssociatedNicId = tolower(tostring(split(properties.ipConfiguration.id, '/ipConfigurations/')[0]))) on \\$left.allVMNicID == \\$right.pipAssociatedNicId\n| project vmId, pipId, pipSku",
          "source": "cli",
          "length": 760,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])) on \\$left.VmId == \\$right.VmId\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| project-rename ['Virtual Machine ID'] = VmId, UTCTimeStamp = properties_occurredTime, ['Availability State'] = AvailabilityState",
          "source": "cli",
          "length": 824,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type == 'microsoft.hybridcompute/machines'\n| project id, JoinID = toupper(id), ComputerName = tostring(properties.osProfile.computerName), OSName = tostring(properties.osName)\n| join kind=leftouter( Resources\n| where type == 'microsoft.hybridcompute/machines/extensions'\n| project  MachineId = toupper(substring(id, 0, indexof(id, '/extensions'))),  ExtensionName = name ) on $left.JoinID == $right.MachineId\n| summarize Extensions = make_list(ExtensionName) by id, ComputerName, OSName\n| order by tolower(OSName) asc",
          "source": "powershell",
          "length": 535,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| project vmId = tolower(id), vmNics = properties.networkProfile.networkInterfaces\n| join (Resources\n| where type =~ 'microsoft.network/networkinterfaces'\n| project nicVMId = tolower(tostring(properties.virtualMachine.id)), allVMNicID = tolower(id), nicIPConfigs = properties.ipConfigurations) on $left.vmId == $right.nicVMId\n| join ( Resources\n| where type =~ 'microsoft.network/publicipaddresses' and isnotnull(properties.ipConfiguration.id)\n| where sku.name == 'Basic'\n| project pipId = id, pipSku = sku.name, pipAssociatedNicId = tolower(tostring(split(properties.ipConfiguration.id, '/ipConfigurations/')[0]))) on $left.allVMNicID == $right.pipAssociatedNicId\n| project vmId, pipId, pipSku",
          "source": "powershell",
          "length": 756,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = inner (HealthResources\n| where subscriptionId == 'mySubscriptionId'\n| where type == 'microsoft.resourcehealth/availabilitystatuses'\n| where properties contains 'Microsoft.Compute/virtualMachines'\n| extend VmId = tolower(tostring(properties['targetResourceId']))\n| extend AvailabilityState = tostring(properties['availabilityState'])) on $left.VmId == $right.VmId\n| project VmId, todatetime(properties['occurredTime']), AvailabilityState\n| project-rename ['Virtual Machine ID'] = VmId, UTCTimeStamp = properties_occurredTime, ['Availability State'] = AvailabilityState",
          "source": "powershell",
          "length": 822,
          "startsWithTable": true
        },
        {
          "code": "Resources\n| where subscriptionId == 'mySubscriptionId'\n| where type startswith 'microsoft.workloads/sapvirtualinstances/'\n| where id startswith 'myResourceId'\n| mv-expand d = properties.vmDetails\n| project VmId = tolower(d.virtualMachineId)\n| join kind = leftouter (HealthResourceChanges\n| where subscriptionId == 'mySubscriptionId'\n| where id !has '/virtualMachineScaleSets/'\n| where id has '/virtualMachines/'\n| extend timestamp = todatetime(properties.changeAttributes.timestamp)\n| extend VmId = tolower(tostring(split(id, '/providers/Microsoft.ResourceHealth/')[0]))\n| where properties has 'properties.availabilityState' or properties has 'properties.annotationName'\n| extend HealthChangeType = iff(properties has 'properties.availabilityState', 'Availability', 'Annotation')\n| extend ChangeType = tostring(properties.changeType)\n| where ChangeType == 'Update' or ChangeType == 'Delete') on $left.VmId == $right.VmId\n| extend Changes = parse_json(tostring(properties.changes))\n| extend AvailabilityStateJson = parse_json(tostring(Changes['properties.availabilityState']))\n| extend AnnotationNameJson = parse_json(tostring(Changes['properties.annotationName']))\n| extend AnnotationSummary = parse_json(tostring(Changes['properties.summary']))\n| extend AnnotationReason = parse_json(tostring(Changes['properties.reason']))\n| extend AnnotationImpactType = parse_json(tostring(Changes['properties.impactType']))\n| extend AnnotationContext = parse_json(tostring(Changes['properties.context']))\n| extend AnnotationCategory = parse_json(tostring(Changes['properties.category']))\n| extend AvailabilityStatePreviousValue = tostring(AvailabilityStateJson.previousValue)\n| extend AvailabilityStateCurrentValue = tostring(AvailabilityStateJson.newValue)\n| extend AnnotationNamePreviousValue = tostring(AnnotationNameJson.previousValue)\n| extend AnnotationNameCurrentValue = tostring(AnnotationNameJson.newValue)\n| extend AnnotationSummaryCurrentValue = tostring(AnnotationSummary.newValue)\n| extend AnnotationReasonCurrentValue = tostring(AnnotationReason.newValue)\n| extend AnnotationImpactTypeCurrentValue = tostring(AnnotationImpactType.newValue)\n| extend AnnotationContextCurrentValue = tostring(AnnotationContext.newValue)\n| extend AnnotationCategoryCurrentValue = tostring(AnnotationCategory.newValue)\n| project id = VmId, timestamp, ChangeType, AvailabilityStateCurrentValue, AnnotationNameCurrentValue, AnnotationSummaryCurrentValue, AnnotationReasonCurrentValue, AnnotationImpactTypeCurrentValue, AnnotationContextCurrentValue, AnnotationCategoryCurrentValue, Changes\n| order by id, timestamp asc\n| project-rename ['Virtual Machine ID'] = id, UTCTimeStamp = timestamp, ['Change Type'] = ChangeType, ['Availability State'] = AvailabilityStateCurrentValue, ['Summary'] = AnnotationSummaryCurrentValue, ['Reason'] = AnnotationReasonCurrentValue, ['Impact Type'] = AnnotationImpactTypeCurrentValue, Category = AnnotationCategoryCurrentValue, Context = AnnotationContextCurrentValue",
          "source": "powershell",
          "length": 2978,
          "startsWithTable": true
        }
      ],
      "description": "\nThe default table if a table isn't defined in the query. Most Resource Manager resource types and properties are here"
    },
    "securityresources": {
      "name": "securityresources",
      "resourceTypes": [
        "microsoft.authorization/locks/providers/assessments/governanceassignments",
        "microsoft.authorization/roleassignments/providers/assessments/governanceassignments",
        "microsoft.security/apicollections",
        "microsoft.security/apicollections/apiendpoints",
        "microsoft.security/assessments",
        "microsoft.security/assessments/governanceassignments",
        "microsoft.security/assessments/subassessments",
        "microsoft.security/attackpaths",
        "microsoft.security/governancerules",
        "microsoft.security/healthreports",
        "microsoft.security/insights",
        "microsoft.security/integrations",
        "microsoft.security/iotalerts",
        "microsoft.security/locations/alerts",
        "microsoft.security/locations/attackpaths",
        "microsoft.security/pricings",
        "microsoft.security/regulatorycompliancestandards",
        "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols",
        "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments",
        "microsoft.security/securescores",
        "microsoft.security/securescores/securescorecontrols",
        "microsoft.security/securityconnectors/devops",
        "microsoft.security/securityconnectors/devops/azuredevopsorgs",
        "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects",
        "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects/repos",
        "microsoft.security/securityconnectors/devops/githubowners",
        "microsoft.security/securityconnectors/devops/githubowners/repos",
        "microsoft.security/securityconnectors/devops/gitlabgroups",
        "microsoft.security/securityconnectors/devops/gitlabgroups/projects",
        "microsoft.security/softwareinventories",
        "microsoft.security/softwareinventory",
        "microsoft.security/standardassignments"
      ],
      "examples": [
        {
          "code": "SecurityResources\n| where type =~ 'microsoft.security/iotalerts' and properties.systemAlertId contains '{system_Alert_Id}'",
          "source": "kql",
          "length": 122,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type =~ 'microsoft.security/iotalerts' and id contains '{hub_id}' and properties.alertType contains '{alert_type}'",
          "source": "kql",
          "length": 140,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/pricings'\n| project Subscription= subscriptionId, Azure_Defender_plan= name, Status= properties.pricingTier",
          "source": "kql",
          "length": 161,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/insights/classification'\n| where properties.associatedResource contains '$resource_id'\n| project SensitivityInsight = properties.insightProperties.purviewCatalogs[0].sensitivity",
          "source": "kql",
          "length": 231,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores'\n| extend percentageScore=properties.score.percentage,\ncurrentScore=properties.score.current,\nmaxScore=properties.score.max,\nweight=properties.weight\n| project tenantId, subscriptionId, percentageScore, currentScore, maxScore, weight",
          "source": "kql",
          "length": 300,
          "startsWithTable": true
        },
        {
          "code": "securityresources\n| where type =~ 'microsoft.security/locations/alerts'\n| where properties.Status in ('Active')\n| where properties.Severity in ('Low', 'Medium', 'High')\n| project alert_type = tostring(properties.AlertType), SystemAlertId = tostring(properties.SystemAlertId), ResourceIdentifiers = todynamic(properties.ResourceIdentifiers)",
          "source": "kql",
          "length": 339,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/regulatorycompliancestandards'\n| extend complianceStandard=name,\nstate=properties.state,\npassedControls=properties.passedControls,\nfailedControls=properties.failedControls,\nskippedControls=properties.skippedControls,\nunsupportedControls=properties.unsupportedControls\n| project tenantId, subscriptionId, complianceStandard, state, passedControls, failedControls, skippedControls, unsupportedControls",
          "source": "kql",
          "length": 453,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments'\n| extend assessmentName=properties.description,\ncomplianceStandard=extract(@'/regulatoryComplianceStandards/(.+)/regulatoryComplianceControls',1,id),\ncomplianceControl=extract(@'/regulatoryComplianceControls/(.+)/regulatoryComplianceAssessments',1,id),\nskippedResources=properties.skippedResources,\npassedResources=properties.passedResources,\nfailedResources=properties.failedResources,\nstate=properties.state\n| project tenantId, subscriptionId, id, complianceStandard, complianceControl, assessmentName, state, skippedResources, passedResources, failedResources",
          "source": "kql",
          "length": 708,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| extend resourceId=id,\nrecommendationId=name,\nresourceType=type,\nrecommendationName=properties.displayName,\nsource=properties.resourceDetails.Source,\nrecommendationState=properties.status.code,\ndescription=properties.metadata.description,\nassessmentType=properties.metadata.assessmentType,\nremediationDescription=properties.metadata.remediationDescription,\npolicyDefinitionId=properties.metadata.policyDefinitionId,\nimplementationEffort=properties.metadata.implementationEffort,\nrecommendationSeverity=properties.metadata.severity,\ncategory=properties.metadata.categories,\nuserImpact=properties.metadata.userImpact,\nthreats=properties.metadata.threats,\nportalLink=properties.links.azurePortal\n| summarize numberOfResources=count(resourceId) by tostring(recommendationName), tostring(recommendationState)",
          "source": "kql",
          "length": 871,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores/securescorecontrols'\n| extend controlName=properties.displayName,\ncontrolId=properties.definition.name,\nnotApplicableResourceCount=properties.notApplicableResourceCount,\nunhealthyResourceCount=properties.unhealthyResourceCount,\nhealthyResourceCount=properties.healthyResourceCount,\npercentageScore=properties.score.percentage,\ncurrentScore=properties.score.current,\nmaxScore=properties.definition.properties.maxScore,\nweight=properties.weight,\ncontrolType=properties.definition.properties.source.sourceType,\ncontrolRecommendationIds=properties.definition.properties.assessmentDefinitions\n| project tenantId, subscriptionId, controlName, controlId, unhealthyResourceCount, healthyResourceCount, notApplicableResourceCount, percentageScore, currentScore, maxScore, weight, controlType, controlRecommendationIds",
          "source": "kql",
          "length": 875,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores'\n| project subscriptionId,\nsubscriptionTotal = iff(properties.score.max == 0, 0.00, round(tolong(properties.weight) * todouble(properties.score.current)/tolong(properties.score.max),2)),\nweight = tolong(iff(properties.weight == 0, 1, properties.weight))\n| join kind=leftouter (\nResourceContainers\n| where type == 'microsoft.resources/subscriptions' and properties.state == 'Enabled'\n| project subscriptionId, mgChain=properties.managementGroupAncestorsChain )\non subscriptionId\n| mv-expand mg=mgChain\n| summarize sumSubs = sum(subscriptionTotal), sumWeight = sum(weight), resultsNum = count() by tostring(mg.displayName), mgId = tostring(mg.name)\n| extend secureScore = iff(tolong(resultsNum) == 0, 404.00, round(sumSubs/sumWeight*100,2))\n| project mgName=mg_displayName, mgId, sumSubs, sumWeight, resultsNum, secureScore\n| order by mgName asc",
          "source": "kql",
          "length": 910,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where * contains 'vulnerabilities in your virtual machines'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner (\nsecurityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.',1,  id)\n) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description,\ndisplayName = properties.displayName,\nresourceId = properties.resourceDetails.id,\nresourceSource = properties.resourceDetails.source,\ncategory = properties.category,\nseverity = properties.status.severity,\ncode = properties.status.code,\ntimeGenerated = properties.timeGenerated,\nremediation = properties.remediation,\nimpact = properties.impact,\nvulnId = properties.id,\nadditionalData = properties.additionalData",
          "source": "kql",
          "length": 948,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where properties.displayName contains 'Container registry images should have vulnerability findings resolved'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner (\nsecurityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.',1,  id)\n) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description,\ndisplayName = properties.displayName,\nresourceId = properties.resourceDetails.id,\nresourceSource = properties.resourceDetails.source,\ncategory = properties.category,\nseverity = properties.status.severity,\ncode = properties.status.code,\ntimeGenerated = properties.timeGenerated,\nremediation = properties.remediation,\nimpact = properties.impact,\nvulnId = properties.id,\nadditionalData = properties.additionalData",
          "source": "kql",
          "length": 998,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| extend resourceId=id,\nrecommendationId=name,\nrecommendationName=properties.displayName,\nsource=properties.resourceDetails.Source,\nrecommendationState=properties.status.code,\ndescription=properties.metadata.description,\nassessmentType=properties.metadata.assessmentType,\nremediationDescription=properties.metadata.remediationDescription,\npolicyDefinitionId=properties.metadata.policyDefinitionId,\nimplementationEffort=properties.metadata.implementationEffort,\nrecommendationSeverity=properties.metadata.severity,\ncategory=properties.metadata.categories,\nuserImpact=properties.metadata.userImpact,\nthreats=properties.metadata.threats,\nportalLink=properties.links.azurePortal\n| project tenantId, subscriptionId, resourceId, recommendationName, recommendationId, recommendationState, recommendationSeverity, description, remediationDescription, assessmentType, policyDefinitionId, implementationEffort, userImpact, category, threats, source, portalLink",
          "source": "kql",
          "length": 1017,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/insights/classification'\n| where properties.associatedResource contains '\\$resource_id'\n| project SensitivityInsight = properties.insightProperties.purviewCatalogs[0].sensitivity",
          "source": "cli",
          "length": 232,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/securescores'\n| project subscriptionId, subscriptionTotal = iff(properties.score.max == 0, 0.00, round(tolong(properties.weight)  todouble(properties.score.current)/tolong(properties.score.max),2)), weight = tolong(iff(properties.weight == 0, 1, properties.weight))\n| join kind=leftouter ( ResourceContainers\n| where type == 'microsoft.resources/subscriptions' and properties.state == 'Enabled'\n| project subscriptionId, mgChain=properties.managementGroupAncestorsChain ) on subscriptionId\n| mv-expand mg=mgChain\n| summarize sumSubs = sum(subscriptionTotal), sumWeight = sum(weight), resultsNum = count() by tostring(mg.displayName), mgId = tostring(mg.name)\n| extend secureScore = iff(tolong(resultsNum) == 0, 404.00, round(sumSubs/sumWeight100,2))\n| project mgName=mg_displayName, mgId, sumSubs, sumWeight, resultsNum, secureScore\n| order by mgName asc",
          "source": "cli",
          "length": 908,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where  contains 'vulnerabilities in your virtual machines'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner ( securityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.*',1, id) ) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description, displayName = properties.displayName, resourceId = properties.resourceDetails.id, resourceSource = properties.resourceDetails.source, category = properties.category, severity = properties.status.severity, code = properties.status.code, timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, vulnId = properties.id, additionalData = properties.additionalData",
          "source": "cli",
          "length": 947,
          "startsWithTable": true
        },
        {
          "code": "SecurityResources\n| where type == 'microsoft.security/assessments'\n| where properties.displayName contains 'Container registry images should have vulnerability findings resolved'\n| summarize by assessmentKey=name //the ID of the assessment\n| join kind=inner ( securityresources\n| where type == 'microsoft.security/assessments/subassessments'\n| extend assessmentKey = extract('.assessments/(.+?)/.',1, id) ) on assessmentKey\n| project assessmentKey, subassessmentKey=name, id, parse_json(properties), resourceGroup, subscriptionId, tenantId\n| extend description = properties.description, displayName = properties.displayName, resourceId = properties.resourceDetails.id, resourceSource = properties.resourceDetails.source, category = properties.category, severity = properties.status.severity, code = properties.status.code, timeGenerated = properties.timeGenerated, remediation = properties.remediation, impact = properties.impact, vulnId = properties.id, additionalData = properties.additionalData",
          "source": "cli",
          "length": 997,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.Security"
    },
    "servicefabricresources": {
      "name": "servicefabricresources",
      "resourceTypes": [
        "applications",
        "applicationtypes",
        "microsoft.servicefabric/clusters/applications",
        "microsoft.servicefabric/clusters/applications/services",
        "microsoft.servicefabric/clusters/applicationtypes",
        "microsoft.servicefabric/clusters/applicationtypes/versions",
        "microsoft.servicefabric/managedclusters",
        "microsoft.servicefabric/managedclusters/applications",
        "microsoft.servicefabric/managedclusters/applications/services",
        "microsoft.servicefabric/managedclusters/applicationtypes",
        "microsoft.servicefabric/managedclusters/applicationtypes/versions",
        "microsoft.servicefabric/managedclusters/nodetypes",
        "services",
        "versions"
      ],
      "examples": [],
      "description": "Related to Microsoft.ServiceFabric"
    },
    "servicehealthresources": {
      "name": "servicehealthresources",
      "resourceTypes": [
        "microsoft.resourcehealth/events",
        "microsoft.resourcehealth/events/impactedresources"
      ],
      "examples": [
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\n| where eventType == 'ServiceIssue' and status == 'Active'",
          "source": "kql",
          "length": 433,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))\n| where eventType == 'HealthAdvisory' and impactMitigationTime > now()",
          "source": "kql",
          "length": 465,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = todatetime(tolong(properties.ImpactMitigationTime))\n| where eventType == 'PlannedMaintenance' and impactMitigationTime > now()",
          "source": "kql",
          "length": 469,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = tostring(properties.EventType), status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\n| where eventType == 'ServiceIssue' and status == 'Active'\n| summarize count(subscriptionId) by name",
          "source": "kql",
          "length": 485,
          "startsWithTable": true
        },
        {
          "code": "ServiceHealthResources\n| where type =~ 'Microsoft.ResourceHealth/events'\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\n| where (eventType in ('HealthAdvisory', 'SecurityAdvisory', 'PlannedMaintenance') and impactMitigationTime > now()) or (eventType == 'ServiceIssue' and status == 'Active')",
          "source": "kql",
          "length": 547,
          "startsWithTable": true
        }
      ],
      "description": "Related to Microsoft.ResourceHealth/events"
    },
    "sharedgalleryresources": {
      "name": "sharedgalleryresources",
      "resourceTypes": [
        "microsoft.compute/locations/sharedgalleries"
      ],
      "examples": []
    },
    "spotresources": {
      "name": "spotresources",
      "resourceTypes": [
        "microsoft.compute/skualternativespotvmsize/location",
        "microsoft.compute/skuspotevictionrate/location",
        "microsoft.compute/skuspotpricehistory/ostype/location"
      ],
      "examples": [],
      "description": "Related to Microsoft.Compute"
    },
    "tagsresources": {
      "name": "tagsresources",
      "resourceTypes": [
        "microsoft.resources/tagnamespaces",
        "microsoft.resources/tagnamespaces/tagnames",
        "microsoft.resources/tagnamespaces/tags"
      ],
      "examples": [],
      "description": "Related to Microsoft.Resources/tagnamespaces"
    }
  },
  "resourceTypes": {
    "microsoft.advisor/assessments": {
      "name": "microsoft.advisor/assessments",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/configurations": {
      "name": "microsoft.advisor/configurations",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/recommendations": {
      "name": "microsoft.advisor/recommendations",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/recommendations/suppressions": {
      "name": "microsoft.advisor/recommendations/suppressions",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/resiliencyreviews": {
      "name": "microsoft.advisor/resiliencyreviews",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/suppressions": {
      "name": "microsoft.advisor/suppressions",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/triagerecommendations": {
      "name": "microsoft.advisor/triagerecommendations",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.advisor/triageresources": {
      "name": "microsoft.advisor/triageresources",
      "tables": [
        "advisorresources"
      ]
    },
    "microsoft.containerservice/fleetmemberships": {
      "name": "microsoft.containerservice/fleetmemberships",
      "tables": [
        "aksresources"
      ]
    },
    "microsoft.containerservice/fleets/autoupgradeprofiles": {
      "name": "microsoft.containerservice/fleets/autoupgradeprofiles",
      "tables": [
        "aksresources"
      ]
    },
    "microsoft.containerservice/fleets/gates": {
      "name": "microsoft.containerservice/fleets/gates",
      "tables": [
        "aksresources"
      ]
    },
    "microsoft.containerservice/fleets/members": {
      "name": "microsoft.containerservice/fleets/members",
      "tables": [
        "aksresources"
      ]
    },
    "microsoft.containerservice/fleets/updateruns": {
      "name": "microsoft.containerservice/fleets/updateruns",
      "tables": [
        "aksresources"
      ]
    },
    "microsoft.containerservice/fleets/updatestrategies": {
      "name": "microsoft.containerservice/fleets/updatestrategies",
      "tables": [
        "aksresources"
      ]
    },
    "microsoft.alertsmanagement/alerts": {
      "name": "microsoft.alertsmanagement/alerts",
      "tables": [
        "alertsmanagementresources"
      ]
    },
    "microsoft.web/sites/config": {
      "name": "microsoft.web/sites/config",
      "tables": [
        "appserviceresources"
      ]
    },
    "microsoft.web/sites/slots/config": {
      "name": "microsoft.web/sites/slots/config",
      "tables": [
        "appserviceresources"
      ]
    },
    "microsoft.web/sites/workflows": {
      "name": "microsoft.web/sites/workflows",
      "tables": [
        "appserviceresources",
        "resources"
      ]
    },
    "microsoft.authorization/classicadministrators": {
      "name": "microsoft.authorization/classicadministrators",
      "tables": [
        "authorizationresources"
      ]
    },
    "microsoft.authorization/roleassignments": {
      "name": "microsoft.authorization/roleassignments",
      "tables": [
        "authorizationresources"
      ]
    },
    "microsoft.authorization/roledefinitions": {
      "name": "microsoft.authorization/roledefinitions",
      "tables": [
        "authorizationresources"
      ]
    },
    "microsoft.awsconnector/ec2instances": {
      "name": "microsoft.awsconnector/ec2instances",
      "tables": [
        "awsresources"
      ]
    },
    "microsoft.awsconnector/eksclusters": {
      "name": "microsoft.awsconnector/eksclusters",
      "tables": [
        "awsresources"
      ]
    },
    "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems": {
      "name": "microsoft.azurebusinesscontinuity/deletedunifiedprotecteditems",
      "tables": [
        "azurebusinesscontinuityresources",
        "recoveryservicesresources"
      ]
    },
    "microsoft.azurebusinesscontinuity/unifiedprotecteditems": {
      "name": "microsoft.azurebusinesscontinuity/unifiedprotecteditems",
      "tables": [
        "azurebusinesscontinuityresources",
        "recoveryservicesresources"
      ]
    },
    "microsoft.azuredevopsplatform/organizations": {
      "name": "microsoft.azuredevopsplatform/organizations",
      "tables": [
        "azuredevopsplatformresources"
      ]
    },
    "microsoft.batch/batchaccounts/pools": {
      "name": "microsoft.batch/batchaccounts/pools",
      "tables": [
        "batchresources"
      ]
    },
    "microsoft.resources/capabilities": {
      "name": "microsoft.resources/capabilities",
      "tables": [
        "capabilityresources"
      ]
    },
    "microsoft.chaos/experiments/executions": {
      "name": "microsoft.chaos/experiments/executions",
      "tables": [
        "chaosresources"
      ]
    },
    "microsoft.chaos/experiments/statuses": {
      "name": "microsoft.chaos/experiments/statuses",
      "tables": [
        "chaosresources"
      ]
    },
    "microsoft.chaos/targets": {
      "name": "microsoft.chaos/targets",
      "tables": [
        "chaosresources"
      ]
    },
    "microsoft.chaos/targets/capabilities": {
      "name": "microsoft.chaos/targets/capabilities",
      "tables": [
        "chaosresources"
      ]
    },
    "microsoft.compute/locations/communitygalleries": {
      "name": "microsoft.compute/locations/communitygalleries",
      "tables": [
        "communitygalleryresources"
      ]
    },
    "microsoft.compute/locations/communitygalleries/applications": {
      "name": "microsoft.compute/locations/communitygalleries/applications",
      "tables": [
        "communitygalleryresources"
      ]
    },
    "microsoft.compute/locations/communitygalleries/applications/versions": {
      "name": "microsoft.compute/locations/communitygalleries/applications/versions",
      "tables": [
        "communitygalleryresources"
      ]
    },
    "microsoft.compute/locations/communitygalleries/images": {
      "name": "microsoft.compute/locations/communitygalleries/images",
      "tables": [
        "communitygalleryresources"
      ]
    },
    "microsoft.compute/locations/communitygalleries/images/versions": {
      "name": "microsoft.compute/locations/communitygalleries/images/versions",
      "tables": [
        "communitygalleryresources"
      ]
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines",
      "tables": [
        "computeresources"
      ]
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces",
      "tables": [
        "computeresources"
      ]
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/networkinterfaces/ipconfigurations/publicipaddresses",
      "tables": [
        "computeresources",
        "resources"
      ]
    },
    "microsoft.containerservice/managedclusters/scheduledevents": {
      "name": "microsoft.containerservice/managedclusters/scheduledevents",
      "tables": [
        "containerserviceeventresources",
        "maintenanceresources"
      ]
    },
    "microsoft.resources/deploymentstacks": {
      "name": "microsoft.resources/deploymentstacks",
      "tables": [
        "deploymentresources"
      ]
    },
    "microsoft.desktopvirtualization/hostpools/sessionhosts": {
      "name": "microsoft.desktopvirtualization/hostpools/sessionhosts",
      "tables": [
        "desktopvirtualizationresources"
      ]
    },
    "microsoft.network/dnszones/a": {
      "name": "microsoft.network/dnszones/a",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/aaaa": {
      "name": "microsoft.network/dnszones/aaaa",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/caa": {
      "name": "microsoft.network/dnszones/caa",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/cname": {
      "name": "microsoft.network/dnszones/cname",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/ds": {
      "name": "microsoft.network/dnszones/ds",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/mx": {
      "name": "microsoft.network/dnszones/mx",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/naptr": {
      "name": "microsoft.network/dnszones/naptr",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/ns": {
      "name": "microsoft.network/dnszones/ns",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/ptr": {
      "name": "microsoft.network/dnszones/ptr",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/soa": {
      "name": "microsoft.network/dnszones/soa",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/srv": {
      "name": "microsoft.network/dnszones/srv",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/tlsa": {
      "name": "microsoft.network/dnszones/tlsa",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/dnszones/txt": {
      "name": "microsoft.network/dnszones/txt",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/a": {
      "name": "microsoft.network/privatednszones/a",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/aaaa": {
      "name": "microsoft.network/privatednszones/aaaa",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/cname": {
      "name": "microsoft.network/privatednszones/cname",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/mx": {
      "name": "microsoft.network/privatednszones/mx",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/ptr": {
      "name": "microsoft.network/privatednszones/ptr",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/soa": {
      "name": "microsoft.network/privatednszones/soa",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/srv": {
      "name": "microsoft.network/privatednszones/srv",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.network/privatednszones/txt": {
      "name": "microsoft.network/privatednszones/txt",
      "tables": [
        "dnsresources"
      ]
    },
    "microsoft.edgeorder/orders": {
      "name": "microsoft.edgeorder/orders",
      "tables": [
        "edgeorderresources"
      ]
    },
    "microsoft.elasticsan/elasticsans": {
      "name": "microsoft.elasticsan/elasticsans",
      "tables": [
        "elasticsanresources",
        "resources"
      ]
    },
    "microsoft.elasticsan/elasticsans/volumegroups": {
      "name": "microsoft.elasticsan/elasticsans/volumegroups",
      "tables": [
        "elasticsanresources",
        "resources"
      ]
    },
    "microsoft.elasticsan/elasticsans/volumegroups/volumes": {
      "name": "microsoft.elasticsan/elasticsans/volumegroups/volumes",
      "tables": [
        "elasticsanresources"
      ]
    },
    "microsoft.extendedlocation/customlocations/enabledresourcetypes": {
      "name": "microsoft.extendedlocation/customlocations/enabledresourcetypes",
      "tables": [
        "extendedlocationresources"
      ]
    },
    "microsoft.resources/changes": {
      "name": "microsoft.resources/changes",
      "tables": [
        "extensibilityresourcechanges",
        "healthresourcechanges",
        "maintenanceresourcechanges",
        "networkresourcechanges",
        "quotaresourcechanges",
        "resourcechanges",
        "resourcecontainerchanges"
      ]
    },
    "microsoft.features/featureprovidernamespaces/featureconfigurations": {
      "name": "microsoft.features/featureprovidernamespaces/featureconfigurations",
      "tables": [
        "featureresources"
      ]
    },
    "microsoft.features/featureproviders/subscriptionfeatureregistrations": {
      "name": "microsoft.features/featureproviders/subscriptionfeatureregistrations",
      "tables": [
        "featureresources"
      ]
    },
    "microsoft.gcpconnector/computeinstances": {
      "name": "microsoft.gcpconnector/computeinstances",
      "tables": [
        "gcpresources"
      ]
    },
    "microsoft.guestconfiguration/guestconfigurationassignments": {
      "name": "microsoft.guestconfiguration/guestconfigurationassignments",
      "tables": [
        "guestconfigurationresources"
      ]
    },
    "microsoft.guestconfiguration/guestconfigurationassignments/reports": {
      "name": "microsoft.guestconfiguration/guestconfigurationassignments/reports",
      "tables": [
        "guestconfigurationresources"
      ]
    },
    "microsoft.resourcehealth/availabilitystatuses": {
      "name": "microsoft.resourcehealth/availabilitystatuses",
      "tables": [
        "healthresources"
      ]
    },
    "microsoft.resourcehealth/resourceannotations": {
      "name": "microsoft.resourcehealth/resourceannotations",
      "tables": [
        "healthresources"
      ]
    },
    "microsoft.impact/connectors": {
      "name": "microsoft.impact/connectors",
      "tables": [
        "impactreportresources"
      ]
    },
    "microsoft.impact/workloadimpacts": {
      "name": "microsoft.impact/workloadimpacts",
      "tables": [
        "impactreportresources"
      ]
    },
    "microsoft.impact/workloadimpacts/insights": {
      "name": "microsoft.impact/workloadimpacts/insights",
      "tables": [
        "impactreportresources"
      ]
    },
    "microsoft.insights/datacollectionruleassociations": {
      "name": "microsoft.insights/datacollectionruleassociations",
      "tables": [
        "insightsresources"
      ]
    },
    "microsoft.insights/tenantactiongroups": {
      "name": "microsoft.insights/tenantactiongroups",
      "tables": [
        "insightsresources"
      ]
    },
    "microsoft.iotfirmwaredefense/firmwaregroups/firmwares": {
      "name": "microsoft.iotfirmwaredefense/firmwaregroups/firmwares",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotfirmwaredefense/workspaces/firmwares": {
      "name": "microsoft.iotfirmwaredefense/workspaces/firmwares",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/locations/devicegroups/alerts": {
      "name": "microsoft.iotsecurity/locations/devicegroups/alerts",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/locations/devicegroups/devices": {
      "name": "microsoft.iotsecurity/locations/devicegroups/devices",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/locations/devicegroups/recommendations": {
      "name": "microsoft.iotsecurity/locations/devicegroups/recommendations",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/locations/devicegroups/vulnerabilities": {
      "name": "microsoft.iotsecurity/locations/devicegroups/vulnerabilities",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/locations/sites": {
      "name": "microsoft.iotsecurity/locations/sites",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/locations/sites/sensors": {
      "name": "microsoft.iotsecurity/locations/sites/sensors",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/onpremisesensors": {
      "name": "microsoft.iotsecurity/onpremisesensors",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/sensors": {
      "name": "microsoft.iotsecurity/sensors",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.iotsecurity/sites": {
      "name": "microsoft.iotsecurity/sites",
      "tables": [
        "iotsecurityresources"
      ]
    },
    "microsoft.kubernetesconfiguration/extensions": {
      "name": "microsoft.kubernetesconfiguration/extensions",
      "tables": [
        "kubernetesconfigurationresources"
      ]
    },
    "microsoft.kubernetesconfiguration/fluxconfigurations": {
      "name": "microsoft.kubernetesconfiguration/fluxconfigurations",
      "tables": [
        "kubernetesconfigurationresources"
      ]
    },
    "microsoft.kubernetesconfiguration/namespaces": {
      "name": "microsoft.kubernetesconfiguration/namespaces",
      "tables": [
        "kubernetesconfigurationresources"
      ]
    },
    "microsoft.kubernetesconfiguration/sourcecontrolconfigurations": {
      "name": "microsoft.kubernetesconfiguration/sourcecontrolconfigurations",
      "tables": [
        "kubernetesconfigurationresources"
      ]
    },
    "microsoft.kusto/clusters/databases/dataconnections": {
      "name": "microsoft.kusto/clusters/databases/dataconnections",
      "tables": [
        "kustoresources"
      ]
    },
    "microsoft.offazure/hypervsites/machines/inventoryinsights": {
      "name": "microsoft.offazure/hypervsites/machines/inventoryinsights",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/hypervsites/machines/inventoryinsights/pendingupdates": {
      "name": "microsoft.offazure/hypervsites/machines/inventoryinsights/pendingupdates",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/hypervsites/machines/inventoryinsights/software": {
      "name": "microsoft.offazure/hypervsites/machines/inventoryinsights/software",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/hypervsites/machines/inventoryinsights/vulnerabilities": {
      "name": "microsoft.offazure/hypervsites/machines/inventoryinsights/vulnerabilities",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/serversites/machines/inventoryinsights": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/serversites/machines/inventoryinsights/pendingupdates": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights/pendingupdates",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/serversites/machines/inventoryinsights/software": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights/software",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/serversites/machines/inventoryinsights/vulnerabilities": {
      "name": "microsoft.offazure/serversites/machines/inventoryinsights/vulnerabilities",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/serversites/machines/pendingupdates": {
      "name": "microsoft.offazure/serversites/machines/pendingupdates",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/serversites/machines/software": {
      "name": "microsoft.offazure/serversites/machines/software",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights/pendingupdates": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights/pendingupdates",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights/software": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights/software",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.offazure/vmwaresites/machines/inventoryinsights/vulnerabilities": {
      "name": "microsoft.offazure/vmwaresites/machines/inventoryinsights/vulnerabilities",
      "tables": [
        "machinesinventoryinsightsresources"
      ]
    },
    "microsoft.maintenance/applyupdates": {
      "name": "microsoft.maintenance/applyupdates",
      "tables": [
        "maintenanceresources"
      ]
    },
    "microsoft.maintenance/computemrpresponse/applyupdates": {
      "name": "microsoft.maintenance/computemrpresponse/applyupdates",
      "tables": [
        "maintenanceresources"
      ]
    },
    "microsoft.maintenance/configurationassignments": {
      "name": "microsoft.maintenance/configurationassignments",
      "tables": [
        "maintenanceresources"
      ]
    },
    "microsoft.maintenance/maintenanceconfigurations/applyupdates": {
      "name": "microsoft.maintenance/maintenanceconfigurations/applyupdates",
      "tables": [
        "maintenanceresources"
      ]
    },
    "microsoft.maintenance/updates": {
      "name": "microsoft.maintenance/updates",
      "tables": [
        "maintenanceresources"
      ]
    },
    "microsoft.managedservices/registrationassignments": {
      "name": "microsoft.managedservices/registrationassignments",
      "tables": [
        "managedservicesresources"
      ]
    },
    "microsoft.managedservices/registrationdefinitions": {
      "name": "microsoft.managedservices/registrationdefinitions",
      "tables": [
        "managedservicesresources"
      ]
    },
    "microsoft.applicationmigration/discoveryhubs/applications": {
      "name": "microsoft.applicationmigration/discoveryhubs/applications",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.applicationmigration/discoveryhubs/applications/members": {
      "name": "microsoft.applicationmigration/discoveryhubs/applications/members",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.applicationmigration/pgsqlsites/agents": {
      "name": "microsoft.applicationmigration/pgsqlsites/agents",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.applicationmigration/pgsqlsites/pgsqldatabases": {
      "name": "microsoft.applicationmigration/pgsqlsites/pgsqldatabases",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.applicationmigration/pgsqlsites/pgsqlinstances": {
      "name": "microsoft.applicationmigration/pgsqlsites/pgsqlinstances",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.applicationmigration/storagesites/agents": {
      "name": "microsoft.applicationmigration/storagesites/agents",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.applicationmigration/storagesites/fileshares": {
      "name": "microsoft.applicationmigration/storagesites/fileshares",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/aksassessments": {
      "name": "microsoft.migrate/assessmentprojects/aksassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps": {
      "name": "microsoft.migrate/assessmentprojects/aksassessments/assessedwebapps",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/aksassessments/clusters": {
      "name": "microsoft.migrate/assessmentprojects/aksassessments/clusters",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/aksassessments/costdetails": {
      "name": "microsoft.migrate/assessmentprojects/aksassessments/costdetails",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/aksassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/aksassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/applicationassessments": {
      "name": "microsoft.migrate/assessmentprojects/applicationassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/applicationassessments/assessedapplications": {
      "name": "microsoft.migrate/assessmentprojects/applicationassessments/assessedapplications",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/assessments": {
      "name": "microsoft.migrate/assessmentprojects/assessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/assessments/assessedmachines": {
      "name": "microsoft.migrate/assessmentprojects/assessments/assessedmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/assessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/assessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/avsassessments": {
      "name": "microsoft.migrate/assessmentprojects/avsassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines": {
      "name": "microsoft.migrate/assessmentprojects/avsassessments/avsassessedmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/avsassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/avsassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/businesscases": {
      "name": "microsoft.migrate/assessmentprojects/businesscases",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/castconnections": {
      "name": "microsoft.migrate/assessmentprojects/castconnections",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups": {
      "name": "microsoft.migrate/assessmentprojects/groups",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/assessments": {
      "name": "microsoft.migrate/assessmentprojects/groups/assessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines": {
      "name": "microsoft.migrate/assessmentprojects/groups/assessments/assessedmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/avsassessments": {
      "name": "microsoft.migrate/assessmentprojects/groups/avsassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines": {
      "name": "microsoft.migrate/assessmentprojects/groups/avsassessments/avsassessedmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments": {
      "name": "microsoft.migrate/assessmentprojects/groups/sqlassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases": {
      "name": "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqldatabases",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances": {
      "name": "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlinstances",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines": {
      "name": "microsoft.migrate/assessmentprojects/groups/sqlassessments/assessedsqlmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities": {
      "name": "microsoft.migrate/assessmentprojects/groups/sqlassessments/recommendedassessedentities",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/groups/sqlassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments": {
      "name": "microsoft.migrate/assessmentprojects/groups/webappassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps": {
      "name": "microsoft.migrate/assessmentprojects/groups/webappassessments/assessedwebapps",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/groups/webappassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans": {
      "name": "microsoft.migrate/assessmentprojects/groups/webappassessments/webappserviceplans",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/heterogeneousassessments": {
      "name": "microsoft.migrate/assessmentprojects/heterogeneousassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/heterogeneousassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines": {
      "name": "microsoft.migrate/assessmentprojects/machineassessments/assessedmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/mysqlassessments": {
      "name": "microsoft.migrate/assessmentprojects/mysqlassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances": {
      "name": "microsoft.migrate/assessmentprojects/mysqlassessments/assessedinstances",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/mysqlassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/mysqlassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/pgsqlassessments": {
      "name": "microsoft.migrate/assessmentprojects/pgsqlassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/pgsqlassessments/assessedinstances": {
      "name": "microsoft.migrate/assessmentprojects/pgsqlassessments/assessedinstances",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/pgsqlassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/pgsqlassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/sqlassessments": {
      "name": "microsoft.migrate/assessmentprojects/sqlassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases": {
      "name": "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqldatabases",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances": {
      "name": "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlinstances",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines": {
      "name": "microsoft.migrate/assessmentprojects/sqlassessments/assessedsqlmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/sqlassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/sqlassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappassessments": {
      "name": "microsoft.migrate/assessmentprojects/webappassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps": {
      "name": "microsoft.migrate/assessmentprojects/webappassessments/assessedwebapps",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/webappassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans": {
      "name": "microsoft.migrate/assessmentprojects/webappassessments/webappserviceplans",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappcompoundassessments": {
      "name": "microsoft.migrate/assessmentprojects/webappcompoundassessments",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappcompoundassessments/assessedwebapps": {
      "name": "microsoft.migrate/assessmentprojects/webappcompoundassessments/assessedwebapps",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries": {
      "name": "microsoft.migrate/assessmentprojects/webappcompoundassessments/summaries",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/castscanreports": {
      "name": "microsoft.migrate/castscanreports",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/castscanreports/codescanissues": {
      "name": "microsoft.migrate/castscanreports/codescanissues",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/migrateprojects/migrationentities": {
      "name": "microsoft.migrate/migrateprojects/migrationentities",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/migrateprojects/migrationentitygroups": {
      "name": "microsoft.migrate/migrateprojects/migrationentitygroups",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/migrateprojects/tasks": {
      "name": "microsoft.migrate/migrateprojects/tasks",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/migrateprojects/waves": {
      "name": "microsoft.migrate/migrateprojects/waves",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.migrate/migrateprojects/waves/workloads": {
      "name": "microsoft.migrate/migrateprojects/waves/workloads",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.mysqldiscovery/mysqlsites/mysqlservers": {
      "name": "microsoft.mysqldiscovery/mysqlsites/mysqlservers",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/hypervsites/clusters": {
      "name": "microsoft.offazure/hypervsites/clusters",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/hypervsites/hosts": {
      "name": "microsoft.offazure/hypervsites/hosts",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/hypervsites/machines": {
      "name": "microsoft.offazure/hypervsites/machines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/hypervsites/machines/softwareinventories": {
      "name": "microsoft.offazure/hypervsites/machines/softwareinventories",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/importsites/machines": {
      "name": "microsoft.offazure/importsites/machines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/sqlsites/sqldatabases": {
      "name": "microsoft.offazure/mastersites/sqlsites/sqldatabases",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/sqlsites/sqlservers": {
      "name": "microsoft.offazure/mastersites/sqlsites/sqlservers",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/webappsites/extendedmachines": {
      "name": "microsoft.offazure/mastersites/webappsites/extendedmachines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/webappsites/iiswebapplications": {
      "name": "microsoft.offazure/mastersites/webappsites/iiswebapplications",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/webappsites/iiswebservers": {
      "name": "microsoft.offazure/mastersites/webappsites/iiswebservers",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/webappsites/tomcatwebapplications": {
      "name": "microsoft.offazure/mastersites/webappsites/tomcatwebapplications",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/mastersites/webappsites/tomcatwebservers": {
      "name": "microsoft.offazure/mastersites/webappsites/tomcatwebservers",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/serversites/machines": {
      "name": "microsoft.offazure/serversites/machines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/serversites/machines/softwareinventories": {
      "name": "microsoft.offazure/serversites/machines/softwareinventories",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/vmwaresites/hosts": {
      "name": "microsoft.offazure/vmwaresites/hosts",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/vmwaresites/machines": {
      "name": "microsoft.offazure/vmwaresites/machines",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/vmwaresites/machines/softwareinventories": {
      "name": "microsoft.offazure/vmwaresites/machines/softwareinventories",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazure/vmwaresites/vcenters": {
      "name": "microsoft.offazure/vmwaresites/vcenters",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazurespringboot/springbootsites/springbootapps": {
      "name": "microsoft.offazurespringboot/springbootsites/springbootapps",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.offazurespringboot/springbootsites/springbootservers": {
      "name": "microsoft.offazurespringboot/springbootsites/springbootservers",
      "tables": [
        "migrateresources"
      ]
    },
    "microsoft.network/effectiveconnectivityconfigurations": {
      "name": "microsoft.network/effectiveconnectivityconfigurations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/effectivesecurityadminrules": {
      "name": "microsoft.network/effectivesecurityadminrules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/firewallpolicies/rulecollectiongroups": {
      "name": "microsoft.network/firewallpolicies/rulecollectiongroups",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkgroupmemberships": {
      "name": "microsoft.network/networkgroupmemberships",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagerconnections": {
      "name": "microsoft.network/networkmanagerconnections",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/connectivityconfigurations": {
      "name": "microsoft.network/networkmanagers/connectivityconfigurations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/connectivityconfigurations/snapshots": {
      "name": "microsoft.network/networkmanagers/connectivityconfigurations/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/connectivityregionalgoalstates": {
      "name": "microsoft.network/networkmanagers/connectivityregionalgoalstates",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/networkgroups": {
      "name": "microsoft.network/networkmanagers/networkgroups",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/networkgroups/aggregatedipaddressspaces": {
      "name": "microsoft.network/networkmanagers/networkgroups/aggregatedipaddressspaces",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/networkgroups/members": {
      "name": "microsoft.network/networkmanagers/networkgroups/members",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/networkgroups/staticmembers": {
      "name": "microsoft.network/networkmanagers/networkgroups/staticmembers",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/regionalgoalstates": {
      "name": "microsoft.network/networkmanagers/regionalgoalstates",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingconfigurations": {
      "name": "microsoft.network/networkmanagers/routingconfigurations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections": {
      "name": "microsoft.network/networkmanagers/routingconfigurations/rulecollections",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules": {
      "name": "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules/snapshots": {
      "name": "microsoft.network/networkmanagers/routingconfigurations/rulecollections/rules/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingconfigurations/rulecollections/snapshots": {
      "name": "microsoft.network/networkmanagers/routingconfigurations/rulecollections/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingconfigurations/snapshots": {
      "name": "microsoft.network/networkmanagers/routingconfigurations/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/routingregionalgoalstates": {
      "name": "microsoft.network/networkmanagers/routingregionalgoalstates",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminconfigurations": {
      "name": "microsoft.network/networkmanagers/securityadminconfigurations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections": {
      "name": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules": {
      "name": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules/snapshots": {
      "name": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/rules/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/snapshots": {
      "name": "microsoft.network/networkmanagers/securityadminconfigurations/rulecollections/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminconfigurations/snapshots": {
      "name": "microsoft.network/networkmanagers/securityadminconfigurations/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityadminregionalgoalstates": {
      "name": "microsoft.network/networkmanagers/securityadminregionalgoalstates",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserconfigurations": {
      "name": "microsoft.network/networkmanagers/securityuserconfigurations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections": {
      "name": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules": {
      "name": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules/snapshots": {
      "name": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/rules/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/snapshots": {
      "name": "microsoft.network/networkmanagers/securityuserconfigurations/rulecollections/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserconfigurations/snapshots": {
      "name": "microsoft.network/networkmanagers/securityuserconfigurations/snapshots",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/securityuserregionalgoalstates": {
      "name": "microsoft.network/networkmanagers/securityuserregionalgoalstates",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networkmanagers/verifierworkspaces/reachabilityanalysisintents": {
      "name": "microsoft.network/networkmanagers/verifierworkspaces/reachabilityanalysisintents",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networksecurityperimeters/linkreferences": {
      "name": "microsoft.network/networksecurityperimeters/linkreferences",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networksecurityperimeters/links": {
      "name": "microsoft.network/networksecurityperimeters/links",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networksecurityperimeters/loggingconfigurations": {
      "name": "microsoft.network/networksecurityperimeters/loggingconfigurations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networksecurityperimeters/profiles": {
      "name": "microsoft.network/networksecurityperimeters/profiles",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networksecurityperimeters/profiles/accessrules": {
      "name": "microsoft.network/networksecurityperimeters/profiles/accessrules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/networksecurityperimeters/resourceassociations": {
      "name": "microsoft.network/networksecurityperimeters/resourceassociations",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/rulecollectiongroups": {
      "name": "microsoft.network/rulecollectiongroups",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/virtualnetworks/subnets/effectiveroutingrules": {
      "name": "microsoft.network/virtualnetworks/subnets/effectiveroutingrules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.network/virtualnetworks/subnets/effectivesecurityuserrules": {
      "name": "microsoft.network/virtualnetworks/subnets/effectivesecurityuserrules",
      "tables": [
        "networkresources"
      ]
    },
    "microsoft.orbital/spacecrafts/contacts": {
      "name": "microsoft.orbital/spacecrafts/contacts",
      "tables": [
        "orbitalresources"
      ]
    },
    "microsoft.compute/virtualmachines/patchassessmentresults": {
      "name": "microsoft.compute/virtualmachines/patchassessmentresults",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches": {
      "name": "microsoft.compute/virtualmachines/patchassessmentresults/softwarepatches",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults/softwarepatches": {
      "name": "microsoft.compute/virtualmachinescalesets/virtualmachines/patchassessmentresults/softwarepatches",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults/softwarepatches": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines/patchassessmentresults/softwarepatches",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.hybridcompute/machines/patchassessmentresults": {
      "name": "microsoft.hybridcompute/machines/patchassessmentresults",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches": {
      "name": "microsoft.hybridcompute/machines/patchassessmentresults/softwarepatches",
      "tables": [
        "patchassessmentresources"
      ]
    },
    "microsoft.compute/virtualmachines/patchinstallationresults": {
      "name": "microsoft.compute/virtualmachines/patchinstallationresults",
      "tables": [
        "patchinstallationresources"
      ]
    },
    "microsoft.compute/virtualmachines/patchinstallationresults/softwarepatches": {
      "name": "microsoft.compute/virtualmachines/patchinstallationresults/softwarepatches",
      "tables": [
        "patchinstallationresources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults",
      "tables": [
        "patchinstallationresources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults/softwarepatches": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines/patchinstallationresults/softwarepatches",
      "tables": [
        "patchinstallationresources"
      ]
    },
    "microsoft.hybridcompute/machines/patchinstallationresults": {
      "name": "microsoft.hybridcompute/machines/patchinstallationresults",
      "tables": [
        "patchinstallationresources"
      ]
    },
    "microsoft.hybridcompute/machines/patchinstallationresults/softwarepatches": {
      "name": "microsoft.hybridcompute/machines/patchinstallationresults/softwarepatches",
      "tables": [
        "patchinstallationresources"
      ]
    },
    "microsoft.authorization/policyassignments": {
      "name": "microsoft.authorization/policyassignments",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.authorization/policydefinitions": {
      "name": "microsoft.authorization/policydefinitions",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.authorization/policydefinitions/versions": {
      "name": "microsoft.authorization/policydefinitions/versions",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.authorization/policyenrollments": {
      "name": "microsoft.authorization/policyenrollments",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.authorization/policyexemptions": {
      "name": "microsoft.authorization/policyexemptions",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.authorization/policysetdefinitions": {
      "name": "microsoft.authorization/policysetdefinitions",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.authorization/policysetdefinitions/versions": {
      "name": "microsoft.authorization/policysetdefinitions/versions",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.policyinsights/componentpolicystates": {
      "name": "microsoft.policyinsights/componentpolicystates",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.policyinsights/policymetadata": {
      "name": "microsoft.policyinsights/policymetadata",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.policyinsights/policystates": {
      "name": "microsoft.policyinsights/policystates",
      "tables": [
        "policyresources"
      ]
    },
    "microsoft.dataprotection/backupvaults/backupinstances": {
      "name": "microsoft.dataprotection/backupvaults/backupinstances",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.dataprotection/backupvaults/backupjobs": {
      "name": "microsoft.dataprotection/backupvaults/backupjobs",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.dataprotection/backupvaults/backuppolicies": {
      "name": "microsoft.dataprotection/backupvaults/backuppolicies",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.dataprotection/backupvaults/deletedbackupinstances": {
      "name": "microsoft.dataprotection/backupvaults/deletedbackupinstances",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/locations/deletedvaults": {
      "name": "microsoft.recoveryservices/locations/deletedvaults",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/locations/deletedvaults/backupfabrics/protectioncontainers/protecteditems": {
      "name": "microsoft.recoveryservices/locations/deletedvaults/backupfabrics/protectioncontainers/protecteditems",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults": {
      "name": "microsoft.recoveryservices/vaults",
      "tables": [
        "recoveryservicesresources",
        "resources"
      ]
    },
    "microsoft.recoveryservices/vaults/alerts": {
      "name": "microsoft.recoveryservices/vaults/alerts",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protectableitems": {
      "name": "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protectableitems",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems": {
      "name": "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/backupjobs": {
      "name": "microsoft.recoveryservices/vaults/backupjobs",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/backuppolicies": {
      "name": "microsoft.recoveryservices/vaults/backuppolicies",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationmigrationitems": {
      "name": "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationmigrationitems",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotectableitems": {
      "name": "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotectableitems",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotecteditems": {
      "name": "microsoft.recoveryservices/vaults/replicationfabrics/replicationprotectioncontainers/replicationprotecteditems",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/replicationjobs": {
      "name": "microsoft.recoveryservices/vaults/replicationjobs",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/replicationpolicies": {
      "name": "microsoft.recoveryservices/vaults/replicationpolicies",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.recoveryservices/vaults/replicationrecoveryplans": {
      "name": "microsoft.recoveryservices/vaults/replicationrecoveryplans",
      "tables": [
        "recoveryservicesresources"
      ]
    },
    "microsoft.management/managementgroups": {
      "name": "microsoft.management/managementgroups",
      "tables": [
        "resourcecontainers"
      ]
    },
    "microsoft.management/servicegroups": {
      "name": "microsoft.management/servicegroups",
      "tables": [
        "resourcecontainers"
      ]
    },
    "microsoft.resources/subscriptions": {
      "name": "microsoft.resources/subscriptions",
      "tables": [
        "resourcecontainers"
      ]
    },
    "microsoft.resources/subscriptions/resourcegroups": {
      "name": "microsoft.resources/subscriptions/resourcegroups",
      "tables": [
        "resourcecontainers"
      ]
    },
    "admincenter": {
      "name": "admincenter",
      "tables": [
        "resources"
      ]
    },
    "advancedthreatprotection.windows": {
      "name": "advancedthreatprotection.windows",
      "tables": [
        "resources"
      ]
    },
    "agents": {
      "name": "agents",
      "tables": [
        "resources"
      ]
    },
    "arizeai.observabilityeval/organizations": {
      "name": "arizeai.observabilityeval/organizations",
      "tables": [
        "resources"
      ]
    },
    "assessmentplatform": {
      "name": "assessmentplatform",
      "tables": [
        "resources"
      ]
    },
    "astronomer.astro/organizations": {
      "name": "astronomer.astro/organizations",
      "tables": [
        "resources"
      ]
    },
    "azuremonitorlinuxagent": {
      "name": "azuremonitorlinuxagent",
      "tables": [
        "resources"
      ]
    },
    "azuremonitorwindowsagent": {
      "name": "azuremonitorwindowsagent",
      "tables": [
        "resources"
      ]
    },
    "azuresecuritylinuxagent": {
      "name": "azuresecuritylinuxagent",
      "tables": [
        "resources"
      ]
    },
    "azuresecuritywindowsagent": {
      "name": "azuresecuritywindowsagent",
      "tables": [
        "resources"
      ]
    },
    "changetracking-linux": {
      "name": "changetracking-linux",
      "tables": [
        "resources"
      ]
    },
    "changetracking-windows": {
      "name": "changetracking-windows",
      "tables": [
        "resources"
      ]
    },
    "citrix.services/xenappessentials": {
      "name": "citrix.services/xenappessentials",
      "tables": [
        "resources"
      ]
    },
    "citrix.services/xendesktopessentials": {
      "name": "citrix.services/xendesktopessentials",
      "tables": [
        "resources"
      ]
    },
    "commvault.contentstore/cloudaccounts": {
      "name": "commvault.contentstore/cloudaccounts",
      "tables": [
        "resources"
      ]
    },
    "customscript": {
      "name": "customscript",
      "tables": [
        "resources"
      ]
    },
    "customscriptextension": {
      "name": "customscriptextension",
      "tables": [
        "resources"
      ]
    },
    "dell.storage/filesystems": {
      "name": "dell.storage/filesystems",
      "tables": [
        "resources"
      ]
    },
    "dependencyagentlinux": {
      "name": "dependencyagentlinux",
      "tables": [
        "resources"
      ]
    },
    "dependencyagentwindows": {
      "name": "dependencyagentwindows",
      "tables": [
        "resources"
      ]
    },
    "dynatrace.observability/monitors": {
      "name": "dynatrace.observability/monitors",
      "tables": [
        "resources"
      ]
    },
    "firstparty": {
      "name": "firstparty",
      "tables": [
        "resources"
      ]
    },
    "github.enterprise/accounts": {
      "name": "github.enterprise/accounts",
      "tables": [
        "resources"
      ]
    },
    "github.network/networksettings": {
      "name": "github.network/networksettings",
      "tables": [
        "resources"
      ]
    },
    "hns": {
      "name": "hns",
      "tables": [
        "resources"
      ]
    },
    "hybridworkerforlinux": {
      "name": "hybridworkerforlinux",
      "tables": [
        "resources"
      ]
    },
    "hybridworkerforwindows": {
      "name": "hybridworkerforwindows",
      "tables": [
        "resources"
      ]
    },
    "iaasantimalware": {
      "name": "iaasantimalware",
      "tables": [
        "resources"
      ]
    },
    "informatica.datamanagement/organizations": {
      "name": "informatica.datamanagement/organizations",
      "tables": [
        "resources"
      ]
    },
    "keyvaultforlinux": {
      "name": "keyvaultforlinux",
      "tables": [
        "resources"
      ]
    },
    "keyvaultforwindows": {
      "name": "keyvaultforwindows",
      "tables": [
        "resources"
      ]
    },
    "lambdatest.hyperexecute/organizations": {
      "name": "lambdatest.hyperexecute/organizations",
      "tables": [
        "resources"
      ]
    },
    "liftrbasic.samplerp/organizations": {
      "name": "liftrbasic.samplerp/organizations",
      "tables": [
        "resources"
      ]
    },
    "linuxagent.azuresecuritycenter": {
      "name": "linuxagent.azuresecuritycenter",
      "tables": [
        "resources"
      ]
    },
    "linuxagent.sqlserver": {
      "name": "linuxagent.sqlserver",
      "tables": [
        "resources"
      ]
    },
    "linuxosupdateextension": {
      "name": "linuxosupdateextension",
      "tables": [
        "resources"
      ]
    },
    "linuxpatchextension": {
      "name": "linuxpatchextension",
      "tables": [
        "resources"
      ]
    },
    "mde.linux": {
      "name": "mde.linux",
      "tables": [
        "resources"
      ]
    },
    "mde.windows": {
      "name": "mde.windows",
      "tables": [
        "resources"
      ]
    },
    "microsoft apps/connectedenvironments/certificates": {
      "name": "microsoft apps/connectedenvironments/certificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aad/domainservices": {
      "name": "microsoft.aad/domainservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aadiam/azureadmetrics": {
      "name": "microsoft.aadiam/azureadmetrics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aadiam/privatelinkforazuread": {
      "name": "microsoft.aadiam/privatelinkforazuread",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aadiam/tenants": {
      "name": "microsoft.aadiam/tenants",
      "tables": [
        "resources"
      ]
    },
    "microsoft.agfoodplatform/farmbeats": {
      "name": "microsoft.agfoodplatform/farmbeats",
      "tables": [
        "resources"
      ]
    },
    "microsoft.agricultureplatform/agriservices": {
      "name": "microsoft.agricultureplatform/agriservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alertsmanagement/actionrules": {
      "name": "microsoft.alertsmanagement/actionrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alertsmanagement/prometheusrulegroups": {
      "name": "microsoft.alertsmanagement/prometheusrulegroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alertsmanagement/smartdetectoralertrules": {
      "name": "microsoft.alertsmanagement/smartdetectoralertrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alicespringsdataplane/e4k": {
      "name": "microsoft.alicespringsdataplane/e4k",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alicespringsdataplane/e4k/broker": {
      "name": "microsoft.alicespringsdataplane/e4k/broker",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alicespringsdataplane/e4k/broker/authentication": {
      "name": "microsoft.alicespringsdataplane/e4k/broker/authentication",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alicespringsdataplane/e4k/broker/listener": {
      "name": "microsoft.alicespringsdataplane/e4k/broker/listener",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector": {
      "name": "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector",
      "tables": [
        "resources"
      ]
    },
    "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector/topicmap": {
      "name": "microsoft.alicespringsdataplane/e4k/mqttbridgeconnector/topicmap",
      "tables": [
        "resources"
      ]
    },
    "microsoft.analysisservices/servers": {
      "name": "microsoft.analysisservices/servers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.anybuild/clusters": {
      "name": "microsoft.anybuild/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.apicenter/catalogs": {
      "name": "microsoft.apicenter/catalogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.apicenter/services": {
      "name": "microsoft.apicenter/services",
      "tables": [
        "resources"
      ]
    },
    "microsoft.apimanagement/gateways": {
      "name": "microsoft.apimanagement/gateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.apimanagement/service": {
      "name": "microsoft.apimanagement/service",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/agents": {
      "name": "microsoft.app/agents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/agentspaces": {
      "name": "microsoft.app/agentspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/appgroups": {
      "name": "microsoft.app/appgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/builders": {
      "name": "microsoft.app/builders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/connectedenvironments": {
      "name": "microsoft.app/connectedenvironments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/connectedenvironments/certificates": {
      "name": "microsoft.app/connectedenvironments/certificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/containerapps": {
      "name": "microsoft.app/containerapps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/jobs": {
      "name": "microsoft.app/jobs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/managedenvironments": {
      "name": "microsoft.app/managedenvironments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/managedenvironments/certificates": {
      "name": "microsoft.app/managedenvironments/certificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/managedenvironments/managedcertificates": {
      "name": "microsoft.app/managedenvironments/managedcertificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/sessionpools": {
      "name": "microsoft.app/sessionpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.app/spaces": {
      "name": "microsoft.app/spaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.appassessment/migrateprojects": {
      "name": "microsoft.appassessment/migrateprojects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.appconfiguration/configurationstores": {
      "name": "microsoft.appconfiguration/configurationstores",
      "tables": [
        "resources"
      ]
    },
    "microsoft.applicationmigration/codescansites": {
      "name": "microsoft.applicationmigration/codescansites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.applicationmigration/discoveryhubs": {
      "name": "microsoft.applicationmigration/discoveryhubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.applicationmigration/pgsqlsites": {
      "name": "microsoft.applicationmigration/pgsqlsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.applicationmigration/storagesites": {
      "name": "microsoft.applicationmigration/storagesites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.applink/applinks": {
      "name": "microsoft.applink/applinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.applink/applinks/applinkmembers": {
      "name": "microsoft.applink/applinks/applinkmembers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.appplatform/spring": {
      "name": "microsoft.appplatform/spring",
      "tables": [
        "resources"
      ]
    },
    "microsoft.appsecurity/policies": {
      "name": "microsoft.appsecurity/policies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.arcnetworking/arcnwloadbalancers": {
      "name": "microsoft.arcnetworking/arcnwloadbalancers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aszlabhardware/labservers": {
      "name": "microsoft.aszlabhardware/labservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aszlabhardware/reservations": {
      "name": "microsoft.aszlabhardware/reservations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.aszlabhardware/servers": {
      "name": "microsoft.aszlabhardware/servers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.attestation/attestationproviders": {
      "name": "microsoft.attestation/attestationproviders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.authorization/elevateaccessroleassignment": {
      "name": "microsoft.authorization/elevateaccessroleassignment",
      "tables": [
        "resources"
      ]
    },
    "microsoft.authorization/resourcemanagementprivatelinks": {
      "name": "microsoft.authorization/resourcemanagementprivatelinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automanage/accounts": {
      "name": "microsoft.automanage/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automanage/configurationprofilepreferences": {
      "name": "microsoft.automanage/configurationprofilepreferences",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automanage/configurationprofiles": {
      "name": "microsoft.automanage/configurationprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automanage/configurationprofiles/versions": {
      "name": "microsoft.automanage/configurationprofiles/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automanage/patchjobconfigurations": {
      "name": "microsoft.automanage/patchjobconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automanage/patchtiers": {
      "name": "microsoft.automanage/patchtiers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automation/automationaccounts": {
      "name": "microsoft.automation/automationaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automation/automationaccounts/configurations": {
      "name": "microsoft.automation/automationaccounts/configurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.automation/automationaccounts/runbooks": {
      "name": "microsoft.automation/automationaccounts/runbooks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.autonomousdevelopmentplatform/accounts": {
      "name": "microsoft.autonomousdevelopmentplatform/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.autonomousdevelopmentplatform/workspaces": {
      "name": "microsoft.autonomousdevelopmentplatform/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.autonomoussystems/workspaces": {
      "name": "microsoft.autonomoussystems/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.avs/privateclouds": {
      "name": "microsoft.avs/privateclouds",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/accessanalyzeranalyzers": {
      "name": "microsoft.awsconnector/accessanalyzeranalyzers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/acmcertificatesummaries": {
      "name": "microsoft.awsconnector/acmcertificatesummaries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/apigatewayrestapis": {
      "name": "microsoft.awsconnector/apigatewayrestapis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/apigatewaystages": {
      "name": "microsoft.awsconnector/apigatewaystages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/appsyncgraphqlapis": {
      "name": "microsoft.awsconnector/appsyncgraphqlapis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/autoscalingautoscalinggroups": {
      "name": "microsoft.awsconnector/autoscalingautoscalinggroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/cloudformationstacks": {
      "name": "microsoft.awsconnector/cloudformationstacks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/cloudformationstacksets": {
      "name": "microsoft.awsconnector/cloudformationstacksets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/cloudfrontdistributions": {
      "name": "microsoft.awsconnector/cloudfrontdistributions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/cloudtrailtrails": {
      "name": "microsoft.awsconnector/cloudtrailtrails",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/cloudwatchalarms": {
      "name": "microsoft.awsconnector/cloudwatchalarms",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/codebuildprojects": {
      "name": "microsoft.awsconnector/codebuildprojects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/codebuildsourcecredentialsinfos": {
      "name": "microsoft.awsconnector/codebuildsourcecredentialsinfos",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/configserviceconfigurationrecorders": {
      "name": "microsoft.awsconnector/configserviceconfigurationrecorders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/configserviceconfigurationrecorderstatuses": {
      "name": "microsoft.awsconnector/configserviceconfigurationrecorderstatuses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/configservicedeliverychannels": {
      "name": "microsoft.awsconnector/configservicedeliverychannels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/databasemigrationservicereplicationinstances": {
      "name": "microsoft.awsconnector/databasemigrationservicereplicationinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/daxclusters": {
      "name": "microsoft.awsconnector/daxclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/dynamodbcontinuousbackupsdescriptions": {
      "name": "microsoft.awsconnector/dynamodbcontinuousbackupsdescriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/dynamodbtables": {
      "name": "microsoft.awsconnector/dynamodbtables",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2accountattributes": {
      "name": "microsoft.awsconnector/ec2accountattributes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2addresses": {
      "name": "microsoft.awsconnector/ec2addresses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2flowlogs": {
      "name": "microsoft.awsconnector/ec2flowlogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2images": {
      "name": "microsoft.awsconnector/ec2images",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2instancestatuses": {
      "name": "microsoft.awsconnector/ec2instancestatuses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2ipams": {
      "name": "microsoft.awsconnector/ec2ipams",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2keypairs": {
      "name": "microsoft.awsconnector/ec2keypairs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2networkacls": {
      "name": "microsoft.awsconnector/ec2networkacls",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2networkinterfaces": {
      "name": "microsoft.awsconnector/ec2networkinterfaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2routetables": {
      "name": "microsoft.awsconnector/ec2routetables",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2securitygroups": {
      "name": "microsoft.awsconnector/ec2securitygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2snapshots": {
      "name": "microsoft.awsconnector/ec2snapshots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2subnets": {
      "name": "microsoft.awsconnector/ec2subnets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2volumes": {
      "name": "microsoft.awsconnector/ec2volumes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2vpcendpoints": {
      "name": "microsoft.awsconnector/ec2vpcendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2vpcpeeringconnections": {
      "name": "microsoft.awsconnector/ec2vpcpeeringconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ec2vpcs": {
      "name": "microsoft.awsconnector/ec2vpcs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ecrimagedetails": {
      "name": "microsoft.awsconnector/ecrimagedetails",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ecrrepositories": {
      "name": "microsoft.awsconnector/ecrrepositories",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ecsclusters": {
      "name": "microsoft.awsconnector/ecsclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ecsservices": {
      "name": "microsoft.awsconnector/ecsservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ecstaskdefinitions": {
      "name": "microsoft.awsconnector/ecstaskdefinitions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/efsfilesystems": {
      "name": "microsoft.awsconnector/efsfilesystems",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/efsmounttargets": {
      "name": "microsoft.awsconnector/efsmounttargets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/eksnodegroups": {
      "name": "microsoft.awsconnector/eksnodegroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticbeanstalkapplications": {
      "name": "microsoft.awsconnector/elasticbeanstalkapplications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticbeanstalkconfigurationtemplates": {
      "name": "microsoft.awsconnector/elasticbeanstalkconfigurationtemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticbeanstalkenvironments": {
      "name": "microsoft.awsconnector/elasticbeanstalkenvironments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticloadbalancingv2listeners": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2listeners",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticloadbalancingv2loadbalancers": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2loadbalancers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticloadbalancingv2targetgroups": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2targetgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/elasticloadbalancingv2targethealthdescriptions": {
      "name": "microsoft.awsconnector/elasticloadbalancingv2targethealthdescriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/emrclusters": {
      "name": "microsoft.awsconnector/emrclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/guarddutydetectors": {
      "name": "microsoft.awsconnector/guarddutydetectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iamaccesskeylastuseds": {
      "name": "microsoft.awsconnector/iamaccesskeylastuseds",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iamaccesskeymetadata": {
      "name": "microsoft.awsconnector/iamaccesskeymetadata",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iamgroups": {
      "name": "microsoft.awsconnector/iamgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iaminstanceprofiles": {
      "name": "microsoft.awsconnector/iaminstanceprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iammfadevices": {
      "name": "microsoft.awsconnector/iammfadevices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iampasswordpolicies": {
      "name": "microsoft.awsconnector/iampasswordpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iampolicyversions": {
      "name": "microsoft.awsconnector/iampolicyversions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iamroles": {
      "name": "microsoft.awsconnector/iamroles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iamservercertificates": {
      "name": "microsoft.awsconnector/iamservercertificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/iamvirtualmfadevices": {
      "name": "microsoft.awsconnector/iamvirtualmfadevices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/kmsaliases": {
      "name": "microsoft.awsconnector/kmsaliases",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/kmskeys": {
      "name": "microsoft.awsconnector/kmskeys",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/lambdafunctioncodelocations": {
      "name": "microsoft.awsconnector/lambdafunctioncodelocations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/lambdafunctionconfigurations": {
      "name": "microsoft.awsconnector/lambdafunctionconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/lambdafunctions": {
      "name": "microsoft.awsconnector/lambdafunctions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/lightsailbuckets": {
      "name": "microsoft.awsconnector/lightsailbuckets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/lightsailinstances": {
      "name": "microsoft.awsconnector/lightsailinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/logsloggroups": {
      "name": "microsoft.awsconnector/logsloggroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/logslogstreams": {
      "name": "microsoft.awsconnector/logslogstreams",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/logsmetricfilters": {
      "name": "microsoft.awsconnector/logsmetricfilters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/logssubscriptionfilters": {
      "name": "microsoft.awsconnector/logssubscriptionfilters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/macie2jobsummaries": {
      "name": "microsoft.awsconnector/macie2jobsummaries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/macieallowlists": {
      "name": "microsoft.awsconnector/macieallowlists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/networkfirewallfirewallpolicies": {
      "name": "microsoft.awsconnector/networkfirewallfirewallpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/networkfirewallfirewalls": {
      "name": "microsoft.awsconnector/networkfirewallfirewalls",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/networkfirewallrulegroups": {
      "name": "microsoft.awsconnector/networkfirewallrulegroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/opensearchdomainstatuses": {
      "name": "microsoft.awsconnector/opensearchdomainstatuses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/organizationsaccounts": {
      "name": "microsoft.awsconnector/organizationsaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/organizationsorganizations": {
      "name": "microsoft.awsconnector/organizationsorganizations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/rdsdbclusters": {
      "name": "microsoft.awsconnector/rdsdbclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/rdsdbinstances": {
      "name": "microsoft.awsconnector/rdsdbinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/rdsdbsnapshotattributesresults": {
      "name": "microsoft.awsconnector/rdsdbsnapshotattributesresults",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/rdsdbsnapshots": {
      "name": "microsoft.awsconnector/rdsdbsnapshots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/rdseventsubscriptions": {
      "name": "microsoft.awsconnector/rdseventsubscriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/rdsexporttasks": {
      "name": "microsoft.awsconnector/rdsexporttasks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/redshiftclusterparametergroups": {
      "name": "microsoft.awsconnector/redshiftclusterparametergroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/redshiftclusters": {
      "name": "microsoft.awsconnector/redshiftclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/route53domainsdomainsummaries": {
      "name": "microsoft.awsconnector/route53domainsdomainsummaries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/route53hostedzones": {
      "name": "microsoft.awsconnector/route53hostedzones",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/route53resourcerecordsets": {
      "name": "microsoft.awsconnector/route53resourcerecordsets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/s3accesscontrolpolicies": {
      "name": "microsoft.awsconnector/s3accesscontrolpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/s3accesspoints": {
      "name": "microsoft.awsconnector/s3accesspoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/s3bucketpolicies": {
      "name": "microsoft.awsconnector/s3bucketpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/s3buckets": {
      "name": "microsoft.awsconnector/s3buckets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/sagemakerapps": {
      "name": "microsoft.awsconnector/sagemakerapps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/sagemakernotebookinstancesummaries": {
      "name": "microsoft.awsconnector/sagemakernotebookinstancesummaries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/secretsmanagerresourcepolicies": {
      "name": "microsoft.awsconnector/secretsmanagerresourcepolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/secretsmanagersecrets": {
      "name": "microsoft.awsconnector/secretsmanagersecrets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/snssubscriptions": {
      "name": "microsoft.awsconnector/snssubscriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/snstopics": {
      "name": "microsoft.awsconnector/snstopics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/sqsqueues": {
      "name": "microsoft.awsconnector/sqsqueues",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ssminstanceinformations": {
      "name": "microsoft.awsconnector/ssminstanceinformations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ssmparameters": {
      "name": "microsoft.awsconnector/ssmparameters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/ssmresourcecompliancesummaryitems": {
      "name": "microsoft.awsconnector/ssmresourcecompliancesummaryitems",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/wafv2loggingconfigurations": {
      "name": "microsoft.awsconnector/wafv2loggingconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.awsconnector/wafwebaclsummaries": {
      "name": "microsoft.awsconnector/wafwebaclsummaries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azureactivedirectory/b2cdirectories": {
      "name": "microsoft.azureactivedirectory/b2cdirectories",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azureactivedirectory/ciamdirectories": {
      "name": "microsoft.azureactivedirectory/ciamdirectories",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azureactivedirectory/guestusages": {
      "name": "microsoft.azureactivedirectory/guestusages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/datacontrollers": {
      "name": "microsoft.azurearcdata/datacontrollers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/postgresinstances": {
      "name": "microsoft.azurearcdata/postgresinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/sqlmanagedinstances": {
      "name": "microsoft.azurearcdata/sqlmanagedinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/sqlserveresulicenses": {
      "name": "microsoft.azurearcdata/sqlserveresulicenses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/sqlserverinstances": {
      "name": "microsoft.azurearcdata/sqlserverinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/sqlserverinstances/availabilitygroups": {
      "name": "microsoft.azurearcdata/sqlserverinstances/availabilitygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/sqlserverinstances/databases": {
      "name": "microsoft.azurearcdata/sqlserverinstances/databases",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurearcdata/sqlserverlicenses": {
      "name": "microsoft.azurearcdata/sqlserverlicenses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurecis/dstsserviceclientidentities": {
      "name": "microsoft.azurecis/dstsserviceclientidentities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuredata/sqlbigdataclusters": {
      "name": "microsoft.azuredata/sqlbigdataclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuredata/sqlserverregistrations": {
      "name": "microsoft.azuredata/sqlserverregistrations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuredatatransfer/connections": {
      "name": "microsoft.azuredatatransfer/connections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuredatatransfer/connections/flows": {
      "name": "microsoft.azuredatatransfer/connections/flows",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuredatatransfer/pipelines": {
      "name": "microsoft.azuredatatransfer/pipelines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuredatatransfer/pipelines/flowprofiles": {
      "name": "microsoft.azuredatatransfer/pipelines/flowprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurefleet/fleets": {
      "name": "microsoft.azurefleet/fleets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azureimagetestingforlinux/jobs": {
      "name": "microsoft.azureimagetestingforlinux/jobs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azureimagetestingforlinux/jobtemplates": {
      "name": "microsoft.azureimagetestingforlinux/jobtemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurelargeinstance/azurelargeinstances": {
      "name": "microsoft.azurelargeinstance/azurelargeinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurelargeinstance/azurelargestorageinstances": {
      "name": "microsoft.azurelargeinstance/azurelargestorageinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurepercept/accounts": {
      "name": "microsoft.azurepercept/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azureplaywrightservice/accounts": {
      "name": "microsoft.azureplaywrightservice/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurescan/scanningaccounts": {
      "name": "microsoft.azurescan/scanningaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuresphere/catalogs": {
      "name": "microsoft.azuresphere/catalogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azuresphere/catalogs/products": {
      "name": "microsoft.azuresphere/catalogs/products",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestack/linkedsubscriptions": {
      "name": "microsoft.azurestack/linkedsubscriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestack/registrations": {
      "name": "microsoft.azurestack/registrations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/clusters": {
      "name": "microsoft.azurestackhci/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/devicepools": {
      "name": "microsoft.azurestackhci/devicepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/edgemachines": {
      "name": "microsoft.azurestackhci/edgemachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/edgenodepools": {
      "name": "microsoft.azurestackhci/edgenodepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/galleryimages": {
      "name": "microsoft.azurestackhci/galleryimages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/logicalnetworks": {
      "name": "microsoft.azurestackhci/logicalnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/marketplacegalleryimages": {
      "name": "microsoft.azurestackhci/marketplacegalleryimages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/networkinterfaces": {
      "name": "microsoft.azurestackhci/networkinterfaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/networksecuritygroups": {
      "name": "microsoft.azurestackhci/networksecuritygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/storagecontainers": {
      "name": "microsoft.azurestackhci/storagecontainers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/virtualharddisks": {
      "name": "microsoft.azurestackhci/virtualharddisks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/virtualmachines": {
      "name": "microsoft.azurestackhci/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/virtualmachines/extensions": {
      "name": "microsoft.azurestackhci/virtualmachines/extensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.azurestackhci/virtualnetworks": {
      "name": "microsoft.azurestackhci/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.backupsolutions/vmwareapplications": {
      "name": "microsoft.backupsolutions/vmwareapplications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.bakeryhybrid/pies": {
      "name": "microsoft.bakeryhybrid/pies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetal/baremetalconnections": {
      "name": "microsoft.baremetal/baremetalconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetal/consoleconnections": {
      "name": "microsoft.baremetal/consoleconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetal/crayservers": {
      "name": "microsoft.baremetal/crayservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetal/monitoringservers": {
      "name": "microsoft.baremetal/monitoringservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetal/peeringsettings": {
      "name": "microsoft.baremetal/peeringsettings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetalinfrastructure/baremetalinstances": {
      "name": "microsoft.baremetalinfrastructure/baremetalinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.baremetalinfrastructure/baremetalstorageinstances": {
      "name": "microsoft.baremetalinfrastructure/baremetalstorageinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.batch/batchaccounts": {
      "name": "microsoft.batch/batchaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.billingbenefits/credits": {
      "name": "microsoft.billingbenefits/credits",
      "tables": [
        "resources"
      ]
    },
    "microsoft.billingbenefits/discounts": {
      "name": "microsoft.billingbenefits/discounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.billingbenefits/incentiveschedules": {
      "name": "microsoft.billingbenefits/incentiveschedules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.billingbenefits/maccs": {
      "name": "microsoft.billingbenefits/maccs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.bing/accounts": {
      "name": "microsoft.bing/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.biztalkservices/biztalk": {
      "name": "microsoft.biztalkservices/biztalk",
      "tables": [
        "resources"
      ]
    },
    "microsoft.bluefin/instances": {
      "name": "microsoft.bluefin/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.bluefin/instances/datasets": {
      "name": "microsoft.bluefin/instances/datasets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.bluefin/instances/pipelines": {
      "name": "microsoft.bluefin/instances/pipelines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.botservice/botservices": {
      "name": "microsoft.botservice/botservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cache/redis": {
      "name": "microsoft.cache/redis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cache/redisenterprise": {
      "name": "microsoft.cache/redisenterprise",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/cdnwebapplicationfirewallpolicies": {
      "name": "microsoft.cdn/cdnwebapplicationfirewallpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/edgeactions": {
      "name": "microsoft.cdn/edgeactions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/edgeactions/attachments": {
      "name": "microsoft.cdn/edgeactions/attachments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/edgeactions/executionfilters": {
      "name": "microsoft.cdn/edgeactions/executionfilters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/edgeactions/versions": {
      "name": "microsoft.cdn/edgeactions/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/profiles": {
      "name": "microsoft.cdn/profiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/profiles/afdendpoints": {
      "name": "microsoft.cdn/profiles/afdendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cdn/profiles/endpoints": {
      "name": "microsoft.cdn/profiles/endpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.certificateregistration/certificateorders": {
      "name": "microsoft.certificateregistration/certificateorders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.chaos/applications": {
      "name": "microsoft.chaos/applications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.chaos/experiments": {
      "name": "microsoft.chaos/experiments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.chaos/privateaccesses": {
      "name": "microsoft.chaos/privateaccesses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.chaos/resilienceprofiles": {
      "name": "microsoft.chaos/resilienceprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.classiccompute/domainnames": {
      "name": "microsoft.classiccompute/domainnames",
      "tables": [
        "resources"
      ]
    },
    "microsoft.classiccompute/virtualmachines": {
      "name": "microsoft.classiccompute/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.classicnetwork/networksecuritygroups": {
      "name": "microsoft.classicnetwork/networksecuritygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.classicnetwork/reservedips": {
      "name": "microsoft.classicnetwork/reservedips",
      "tables": [
        "resources"
      ]
    },
    "microsoft.classicnetwork/virtualnetworks": {
      "name": "microsoft.classicnetwork/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.classicstorage/storageaccounts": {
      "name": "microsoft.classicstorage/storageaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cleanroom/cleanrooms": {
      "name": "microsoft.cleanroom/cleanrooms",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cleanroom/collaborations": {
      "name": "microsoft.cleanroom/collaborations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cleanroom/consortiums": {
      "name": "microsoft.cleanroom/consortiums",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cleanroom/microservices": {
      "name": "microsoft.cleanroom/microservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.clouddeviceplatform/delegatedidentities": {
      "name": "microsoft.clouddeviceplatform/delegatedidentities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudes/accounts": {
      "name": "microsoft.cloudes/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudhealth/healthmodels": {
      "name": "microsoft.cloudhealth/healthmodels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudtest/accounts": {
      "name": "microsoft.cloudtest/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudtest/buildcaches": {
      "name": "microsoft.cloudtest/buildcaches",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudtest/hostedpools": {
      "name": "microsoft.cloudtest/hostedpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudtest/images": {
      "name": "microsoft.cloudtest/images",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cloudtest/pools": {
      "name": "microsoft.cloudtest/pools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.clusterstor/nodes": {
      "name": "microsoft.clusterstor/nodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.codesigning/codesigningaccounts": {
      "name": "microsoft.codesigning/codesigningaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.codespaces/plans": {
      "name": "microsoft.codespaces/plans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cognition/syntheticsaccounts": {
      "name": "microsoft.cognition/syntheticsaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cognitivesearch/indexes": {
      "name": "microsoft.cognitivesearch/indexes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cognitiveservices/accounts": {
      "name": "microsoft.cognitiveservices/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cognitiveservices/accounts/projects": {
      "name": "microsoft.cognitiveservices/accounts/projects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.cognitiveservices/commitmentplans": {
      "name": "microsoft.cognitiveservices/commitmentplans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.community/communitytrainings": {
      "name": "microsoft.community/communitytrainings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compositesolutions/compositesolutiondefinitions": {
      "name": "microsoft.compositesolutions/compositesolutiondefinitions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compositesolutions/compositesolutions": {
      "name": "microsoft.compositesolutions/compositesolutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/availabilitysets": {
      "name": "microsoft.compute/availabilitysets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/capacityreservationgroups": {
      "name": "microsoft.compute/capacityreservationgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/capacityreservationgroups/capacityreservations": {
      "name": "microsoft.compute/capacityreservationgroups/capacityreservations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/cloudservices": {
      "name": "microsoft.compute/cloudservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/cloudservices/roleinstances/networkinterfaces": {
      "name": "microsoft.compute/cloudservices/roleinstances/networkinterfaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/cloudservices/roleinstances/networkinterfaces/ipconfigurations/publicipaddresses": {
      "name": "microsoft.compute/cloudservices/roleinstances/networkinterfaces/ipconfigurations/publicipaddresses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/diskaccesses": {
      "name": "microsoft.compute/diskaccesses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/diskencryptionsets": {
      "name": "microsoft.compute/diskencryptionsets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/disks": {
      "name": "microsoft.compute/disks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries": {
      "name": "microsoft.compute/galleries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/applications": {
      "name": "microsoft.compute/galleries/applications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/applications/versions": {
      "name": "microsoft.compute/galleries/applications/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/images": {
      "name": "microsoft.compute/galleries/images",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/images/versions": {
      "name": "microsoft.compute/galleries/images/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/invmaccesscontrolprofiles": {
      "name": "microsoft.compute/galleries/invmaccesscontrolprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/invmaccesscontrolprofiles/versions": {
      "name": "microsoft.compute/galleries/invmaccesscontrolprofiles/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/remotecontainerimages": {
      "name": "microsoft.compute/galleries/remotecontainerimages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/scripts": {
      "name": "microsoft.compute/galleries/scripts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/scripts/versions": {
      "name": "microsoft.compute/galleries/scripts/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/galleries/serviceartifacts": {
      "name": "microsoft.compute/galleries/serviceartifacts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/hostgroups": {
      "name": "microsoft.compute/hostgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/hostgroups/hosts": {
      "name": "microsoft.compute/hostgroups/hosts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/images": {
      "name": "microsoft.compute/images",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/proximityplacementgroups": {
      "name": "microsoft.compute/proximityplacementgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/restorepointcollections": {
      "name": "microsoft.compute/restorepointcollections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/sharedvmextensions": {
      "name": "microsoft.compute/sharedvmextensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/sharedvmextensions/versions": {
      "name": "microsoft.compute/sharedvmextensions/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/sharedvmimages": {
      "name": "microsoft.compute/sharedvmimages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/sharedvmimages/versions": {
      "name": "microsoft.compute/sharedvmimages/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/snapshots": {
      "name": "microsoft.compute/snapshots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/sshpublickeys": {
      "name": "microsoft.compute/sshpublickeys",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/swiftlets": {
      "name": "microsoft.compute/swiftlets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/virtualmachines": {
      "name": "microsoft.compute/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/virtualmachines/extensions": {
      "name": "microsoft.compute/virtualmachines/extensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/virtualmachines/runcommands": {
      "name": "microsoft.compute/virtualmachines/runcommands",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/virtualmachines/vmapplications": {
      "name": "microsoft.compute/virtualmachines/vmapplications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.compute/virtualmachinescalesets": {
      "name": "microsoft.compute/virtualmachinescalesets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.computeschedule/autoactions": {
      "name": "microsoft.computeschedule/autoactions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.computeschedule/scheduledactions": {
      "name": "microsoft.computeschedule/scheduledactions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.confidentialledger/ledgers": {
      "name": "microsoft.confidentialledger/ledgers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.confidentialledger/managedccfs": {
      "name": "microsoft.confidentialledger/managedccfs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.confluent/organizations": {
      "name": "microsoft.confluent/organizations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcache/cachenodes": {
      "name": "microsoft.connectedcache/cachenodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcache/enterprisecustomers": {
      "name": "microsoft.connectedcache/enterprisecustomers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcache/enterprisemcccustomers": {
      "name": "microsoft.connectedcache/enterprisemcccustomers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcache/enterprisemcccustomers/enterprisemcccachenodes": {
      "name": "microsoft.connectedcache/enterprisemcccustomers/enterprisemcccachenodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcache/ispcustomers": {
      "name": "microsoft.connectedcache/ispcustomers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcache/ispcustomers/ispcachenodes": {
      "name": "microsoft.connectedcache/ispcustomers/ispcachenodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedcredentials/credentials": {
      "name": "microsoft.connectedcredentials/credentials",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedopenstack/heatstacks": {
      "name": "microsoft.connectedopenstack/heatstacks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedopenstack/openstackidentities": {
      "name": "microsoft.connectedopenstack/openstackidentities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvehicle/platformaccounts": {
      "name": "microsoft.connectedvehicle/platformaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/clusters": {
      "name": "microsoft.connectedvmwarevsphere/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/datastores": {
      "name": "microsoft.connectedvmwarevsphere/datastores",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/hosts": {
      "name": "microsoft.connectedvmwarevsphere/hosts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/resourcepools": {
      "name": "microsoft.connectedvmwarevsphere/resourcepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/vcenters": {
      "name": "microsoft.connectedvmwarevsphere/vcenters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachines": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachines/extensions": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachines/extensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualmachinetemplates": {
      "name": "microsoft.connectedvmwarevsphere/virtualmachinetemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.connectedvmwarevsphere/virtualnetworks": {
      "name": "microsoft.connectedvmwarevsphere/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerinstance/containergroupprofiles": {
      "name": "microsoft.containerinstance/containergroupprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerinstance/containergroups": {
      "name": "microsoft.containerinstance/containergroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerinstance/containerscalesets": {
      "name": "microsoft.containerinstance/containerscalesets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerinstance/ngroups": {
      "name": "microsoft.containerinstance/ngroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries": {
      "name": "microsoft.containerregistry/registries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries/agentpools": {
      "name": "microsoft.containerregistry/registries/agentpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries/buildtasks": {
      "name": "microsoft.containerregistry/registries/buildtasks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries/replications": {
      "name": "microsoft.containerregistry/registries/replications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries/taskruns": {
      "name": "microsoft.containerregistry/registries/taskruns",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries/tasks": {
      "name": "microsoft.containerregistry/registries/tasks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerregistry/registries/webhooks": {
      "name": "microsoft.containerregistry/registries/webhooks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/containerservices": {
      "name": "microsoft.containerservice/containerservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/fleets": {
      "name": "microsoft.containerservice/fleets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/fleets/managednamespaces": {
      "name": "microsoft.containerservice/fleets/managednamespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/managedclusters": {
      "name": "microsoft.containerservice/managedclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/managedclusters/managednamespaces": {
      "name": "microsoft.containerservice/managedclusters/managednamespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/managedclustersnapshots": {
      "name": "microsoft.containerservice/managedclustersnapshots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerservice/snapshots": {
      "name": "microsoft.containerservice/snapshots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.containerstorage/pools": {
      "name": "microsoft.containerstorage/pools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.contoso/clusters": {
      "name": "microsoft.contoso/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.contoso/employees": {
      "name": "microsoft.contoso/employees",
      "tables": [
        "resources"
      ]
    },
    "microsoft.contoso/employees/desks": {
      "name": "microsoft.contoso/employees/desks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.contoso/installations": {
      "name": "microsoft.contoso/installations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.contoso/recipes": {
      "name": "microsoft.contoso/recipes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.contoso/towers": {
      "name": "microsoft.contoso/towers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.costmanagement/connectors": {
      "name": "microsoft.costmanagement/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.customproviders/resourceproviders": {
      "name": "microsoft.customproviders/resourceproviders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.d365customerinsights/instances": {
      "name": "microsoft.d365customerinsights/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dashboard/dashboards": {
      "name": "microsoft.dashboard/dashboards",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dashboard/grafana": {
      "name": "microsoft.dashboard/grafana",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dashboard/grafana/integrationfabrics": {
      "name": "microsoft.dashboard/grafana/integrationfabrics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dashboard/grafana/managedprivateendpoints": {
      "name": "microsoft.dashboard/grafana/managedprivateendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dataaccelerator/indexclusters": {
      "name": "microsoft.dataaccelerator/indexclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.databasefleetmanager/fleets": {
      "name": "microsoft.databasefleetmanager/fleets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.databasewatcher/watchers": {
      "name": "microsoft.databasewatcher/watchers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.databox/jobs": {
      "name": "microsoft.databox/jobs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.databoxedge/databoxedgedevices": {
      "name": "microsoft.databoxedge/databoxedgedevices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.databricks/accessconnectors": {
      "name": "microsoft.databricks/accessconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.databricks/workspaces": {
      "name": "microsoft.databricks/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datacollaboration/workspaces": {
      "name": "microsoft.datacollaboration/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datadog/monitors": {
      "name": "microsoft.datadog/monitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datafactory/factories": {
      "name": "microsoft.datafactory/factories",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datalakeanalytics/accounts": {
      "name": "microsoft.datalakeanalytics/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datalakestore/accounts": {
      "name": "microsoft.datalakestore/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datamigration/controllers": {
      "name": "microsoft.datamigration/controllers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datamigration/migrationservices": {
      "name": "microsoft.datamigration/migrationservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datamigration/services": {
      "name": "microsoft.datamigration/services",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datamigration/services/projects": {
      "name": "microsoft.datamigration/services/projects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datamigration/slots": {
      "name": "microsoft.datamigration/slots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datamigration/sqlmigrationservices": {
      "name": "microsoft.datamigration/sqlmigrationservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dataplatform/capacities": {
      "name": "microsoft.dataplatform/capacities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dataprotection/backupvaults": {
      "name": "microsoft.dataprotection/backupvaults",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dataprotection/resourceguards": {
      "name": "microsoft.dataprotection/resourceguards",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datareplication/replicationfabrics": {
      "name": "microsoft.datareplication/replicationfabrics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datareplication/replicationvaults": {
      "name": "microsoft.datareplication/replicationvaults",
      "tables": [
        "resources"
      ]
    },
    "microsoft.datashare/accounts": {
      "name": "microsoft.datashare/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dbformariadb/servers": {
      "name": "microsoft.dbformariadb/servers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dbformysql/flexibleservers": {
      "name": "microsoft.dbformysql/flexibleservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dbformysql/servers": {
      "name": "microsoft.dbformysql/servers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dbforpostgresql/flexibleservers": {
      "name": "microsoft.dbforpostgresql/flexibleservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dbforpostgresql/servergroupsv2": {
      "name": "microsoft.dbforpostgresql/servergroupsv2",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dbforpostgresql/servers": {
      "name": "microsoft.dbforpostgresql/servers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.delegatednetwork/controller": {
      "name": "microsoft.delegatednetwork/controller",
      "tables": [
        "resources"
      ]
    },
    "microsoft.delegatednetwork/delegatedsubnets": {
      "name": "microsoft.delegatednetwork/delegatedsubnets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.delegatednetwork/orchestratorinstances": {
      "name": "microsoft.delegatednetwork/orchestratorinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.delegatednetwork/orchestrators": {
      "name": "microsoft.delegatednetwork/orchestrators",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dependencymap/maps": {
      "name": "microsoft.dependencymap/maps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dependencymap/maps/discoverysources": {
      "name": "microsoft.dependencymap/maps/discoverysources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/appattachpackages": {
      "name": "microsoft.desktopvirtualization/appattachpackages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/applicationgroups": {
      "name": "microsoft.desktopvirtualization/applicationgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/connectionpolicies": {
      "name": "microsoft.desktopvirtualization/connectionpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/hostpools": {
      "name": "microsoft.desktopvirtualization/hostpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/repositoryfolders": {
      "name": "microsoft.desktopvirtualization/repositoryfolders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/scalingplans": {
      "name": "microsoft.desktopvirtualization/scalingplans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.desktopvirtualization/workspaces": {
      "name": "microsoft.desktopvirtualization/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devai/instances": {
      "name": "microsoft.devai/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devai/instances/experiments": {
      "name": "microsoft.devai/instances/experiments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devai/instances/sandboxes": {
      "name": "microsoft.devai/instances/sandboxes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devai/instances/sandboxes/experiments": {
      "name": "microsoft.devai/instances/sandboxes/experiments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devcenter/devcenters": {
      "name": "microsoft.devcenter/devcenters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devcenter/devcenters/devboxdefinitions": {
      "name": "microsoft.devcenter/devcenters/devboxdefinitions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devcenter/networkconnections": {
      "name": "microsoft.devcenter/networkconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devcenter/plans": {
      "name": "microsoft.devcenter/plans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devcenter/projects": {
      "name": "microsoft.devcenter/projects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devcenter/projects/pools": {
      "name": "microsoft.devcenter/projects/pools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.developmentwindows365/developmentcloudpcdelegatedmsis": {
      "name": "microsoft.developmentwindows365/developmentcloudpcdelegatedmsis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devhub/iacprofiles": {
      "name": "microsoft.devhub/iacprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devhub/workflow": {
      "name": "microsoft.devhub/workflow",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devhub/workflows": {
      "name": "microsoft.devhub/workflows",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceonboarding/discoveryservices": {
      "name": "microsoft.deviceonboarding/discoveryservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceonboarding/discoveryservices/ownershipvoucherpublickeys": {
      "name": "microsoft.deviceonboarding/discoveryservices/ownershipvoucherpublickeys",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceonboarding/onboardingservices": {
      "name": "microsoft.deviceonboarding/onboardingservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceonboarding/onboardingservices/policies": {
      "name": "microsoft.deviceonboarding/onboardingservices/policies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/assetendpointprofiles": {
      "name": "microsoft.deviceregistry/assetendpointprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/assets": {
      "name": "microsoft.deviceregistry/assets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/devices": {
      "name": "microsoft.deviceregistry/devices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/discoveredassetendpointprofiles": {
      "name": "microsoft.deviceregistry/discoveredassetendpointprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/discoveredassets": {
      "name": "microsoft.deviceregistry/discoveredassets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/namespaces": {
      "name": "microsoft.deviceregistry/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/namespaces/assets": {
      "name": "microsoft.deviceregistry/namespaces/assets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/namespaces/credentials": {
      "name": "microsoft.deviceregistry/namespaces/credentials",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/namespaces/devices": {
      "name": "microsoft.deviceregistry/namespaces/devices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/namespaces/discoveredassets": {
      "name": "microsoft.deviceregistry/namespaces/discoveredassets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/namespaces/discovereddevices": {
      "name": "microsoft.deviceregistry/namespaces/discovereddevices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceregistry/schemaregistries": {
      "name": "microsoft.deviceregistry/schemaregistries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devices/iothubs": {
      "name": "microsoft.devices/iothubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devices/provisioningservices": {
      "name": "microsoft.devices/provisioningservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/accounts": {
      "name": "microsoft.deviceupdate/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/accounts/agents": {
      "name": "microsoft.deviceupdate/accounts/agents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/accounts/instances": {
      "name": "microsoft.deviceupdate/accounts/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/updateaccounts": {
      "name": "microsoft.deviceupdate/updateaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/updateaccounts/activedeployments": {
      "name": "microsoft.deviceupdate/updateaccounts/activedeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/updateaccounts/agents": {
      "name": "microsoft.deviceupdate/updateaccounts/agents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/updateaccounts/deployments": {
      "name": "microsoft.deviceupdate/updateaccounts/deployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/updateaccounts/deviceclasses": {
      "name": "microsoft.deviceupdate/updateaccounts/deviceclasses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.deviceupdate/updateaccounts/updates": {
      "name": "microsoft.deviceupdate/updateaccounts/updates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devops/pipelines": {
      "name": "microsoft.devops/pipelines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devopsinfrastructure/pools": {
      "name": "microsoft.devopsinfrastructure/pools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devtestlab/labcenters": {
      "name": "microsoft.devtestlab/labcenters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devtestlab/labs": {
      "name": "microsoft.devtestlab/labs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devtestlab/labs/servicerunners": {
      "name": "microsoft.devtestlab/labs/servicerunners",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devtestlab/labs/virtualmachines": {
      "name": "microsoft.devtestlab/labs/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devtestlab/schedules": {
      "name": "microsoft.devtestlab/schedules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.devtunnels/tunnelplans": {
      "name": "microsoft.devtunnels/tunnelplans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.digitaltwins/digitaltwinsinstances": {
      "name": "microsoft.digitaltwins/digitaltwinsinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/agents": {
      "name": "microsoft.discovery/agents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/bookshelves": {
      "name": "microsoft.discovery/bookshelves",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/datacontainers": {
      "name": "microsoft.discovery/datacontainers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/datacontainers/dataassets": {
      "name": "microsoft.discovery/datacontainers/dataassets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/models": {
      "name": "microsoft.discovery/models",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/storages": {
      "name": "microsoft.discovery/storages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/supercomputers": {
      "name": "microsoft.discovery/supercomputers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/supercomputers/nodepools": {
      "name": "microsoft.discovery/supercomputers/nodepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/tools": {
      "name": "microsoft.discovery/tools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/workflows": {
      "name": "microsoft.discovery/workflows",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/workspaces": {
      "name": "microsoft.discovery/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.discovery/workspaces/projects": {
      "name": "microsoft.discovery/workspaces/projects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dns/dnszones/cname": {
      "name": "microsoft.dns/dnszones/cname",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/cassandraclusters": {
      "name": "microsoft.documentdb/cassandraclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/databaseaccounts": {
      "name": "microsoft.documentdb/databaseaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/fleets": {
      "name": "microsoft.documentdb/fleets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/garnetclusters": {
      "name": "microsoft.documentdb/garnetclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/managedresources": {
      "name": "microsoft.documentdb/managedresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/mongoclusters": {
      "name": "microsoft.documentdb/mongoclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.documentdb/throughputpools": {
      "name": "microsoft.documentdb/throughputpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.domainregistration/domains": {
      "name": "microsoft.domainregistration/domains",
      "tables": [
        "resources"
      ]
    },
    "microsoft.durabletask/namespaces": {
      "name": "microsoft.durabletask/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.durabletask/schedulers": {
      "name": "microsoft.durabletask/schedulers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.dynamics365fraudprotection/instances": {
      "name": "microsoft.dynamics365fraudprotection/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.easm/workspaces": {
      "name": "microsoft.easm/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/capabilitylists": {
      "name": "microsoft.edge/capabilitylists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/configtemplates": {
      "name": "microsoft.edge/configtemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/configurations": {
      "name": "microsoft.edge/configurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/contexts": {
      "name": "microsoft.edge/contexts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/deploymenttargets": {
      "name": "microsoft.edge/deploymenttargets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/diagnostics": {
      "name": "microsoft.edge/diagnostics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/disconnectedoperations": {
      "name": "microsoft.edge/disconnectedoperations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/hierarchylists": {
      "name": "microsoft.edge/hierarchylists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/schemas": {
      "name": "microsoft.edge/schemas",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/solutionbindings": {
      "name": "microsoft.edge/solutionbindings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/solutions": {
      "name": "microsoft.edge/solutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/solutiontemplates": {
      "name": "microsoft.edge/solutiontemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/targets": {
      "name": "microsoft.edge/targets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edge/winfields": {
      "name": "microsoft.edge/winfields",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edgeorder/addresses": {
      "name": "microsoft.edgeorder/addresses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edgeorder/bootstrapconfigurations": {
      "name": "microsoft.edgeorder/bootstrapconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edgeorder/orderitems": {
      "name": "microsoft.edgeorder/orderitems",
      "tables": [
        "resources"
      ]
    },
    "microsoft.edgezones/edgezones": {
      "name": "microsoft.edgezones/edgezones",
      "tables": [
        "resources"
      ]
    },
    "microsoft.elastic/monitors": {
      "name": "microsoft.elastic/monitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.energydataplatform/energyservices": {
      "name": "microsoft.energydataplatform/energyservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.enterprisesupport/enterprisesupports": {
      "name": "microsoft.enterprisesupport/enterprisesupports",
      "tables": [
        "resources"
      ]
    },
    "microsoft.entraidgovernance/guestgovernanceusage": {
      "name": "microsoft.entraidgovernance/guestgovernanceusage",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/domains": {
      "name": "microsoft.eventgrid/domains",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/namespaces": {
      "name": "microsoft.eventgrid/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/partnerconfigurations": {
      "name": "microsoft.eventgrid/partnerconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/partnerdestinations": {
      "name": "microsoft.eventgrid/partnerdestinations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/partnernamespaces": {
      "name": "microsoft.eventgrid/partnernamespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/partnerregistrations": {
      "name": "microsoft.eventgrid/partnerregistrations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/partnertopics": {
      "name": "microsoft.eventgrid/partnertopics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/systemtopics": {
      "name": "microsoft.eventgrid/systemtopics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventgrid/topics": {
      "name": "microsoft.eventgrid/topics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventhub/clusters": {
      "name": "microsoft.eventhub/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.eventhub/namespaces": {
      "name": "microsoft.eventhub/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.experimentation/experimentworkspaces": {
      "name": "microsoft.experimentation/experimentworkspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.extendedlocation/customlocations": {
      "name": "microsoft.extendedlocation/customlocations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.extendedlocation/customlocations/resourcesyncrules": {
      "name": "microsoft.extendedlocation/customlocations/resourcesyncrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fabric/capacities": {
      "name": "microsoft.fabric/capacities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fabric/privatelinkservicesforfabric": {
      "name": "microsoft.fabric/privatelinkservicesforfabric",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fairfieldgardens/provisioningresources": {
      "name": "microsoft.fairfieldgardens/provisioningresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fairfieldgardens/provisioningresources/provisioningpolicies": {
      "name": "microsoft.fairfieldgardens/provisioningresources/provisioningpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.falcon/namespaces": {
      "name": "microsoft.falcon/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fidalgo/projects/pools": {
      "name": "microsoft.fidalgo/projects/pools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fileshares/fileshares": {
      "name": "microsoft.fileshares/fileshares",
      "tables": [
        "resources"
      ]
    },
    "microsoft.fluidrelay/fluidrelayservers": {
      "name": "microsoft.fluidrelay/fluidrelayservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.footprintmonitoring/profiles": {
      "name": "microsoft.footprintmonitoring/profiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.gaming/titles": {
      "name": "microsoft.gaming/titles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.gcpconnector/cloudfunctions": {
      "name": "microsoft.gcpconnector/cloudfunctions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.gcpconnector/storagebuckets": {
      "name": "microsoft.gcpconnector/storagebuckets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.graph/azureadapplication": {
      "name": "microsoft.graph/azureadapplication",
      "tables": [
        "resources"
      ]
    },
    "microsoft.graphservices/accounts": {
      "name": "microsoft.graphservices/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hanaonazure/hanainstances": {
      "name": "microsoft.hanaonazure/hanainstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hanaonazure/sapmonitors": {
      "name": "microsoft.hanaonazure/sapmonitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hardware/orders": {
      "name": "microsoft.hardware/orders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hardwaresecuritymodules/cloudhsmclusters": {
      "name": "microsoft.hardwaresecuritymodules/cloudhsmclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hardwaresecuritymodules/dedicatedhsms": {
      "name": "microsoft.hardwaresecuritymodules/dedicatedhsms",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hdinsight/clusterpools": {
      "name": "microsoft.hdinsight/clusterpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hdinsight/clusterpools/clusters": {
      "name": "microsoft.hdinsight/clusterpools/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hdinsight/clusters": {
      "name": "microsoft.hdinsight/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthbot/healthbots": {
      "name": "microsoft.healthbot/healthbots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/services": {
      "name": "microsoft.healthcareapis/services",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/services/privateendpointconnections": {
      "name": "microsoft.healthcareapis/services/privateendpointconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/workspaces": {
      "name": "microsoft.healthcareapis/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/workspaces/analyticsconnectors": {
      "name": "microsoft.healthcareapis/workspaces/analyticsconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/workspaces/dicomservices": {
      "name": "microsoft.healthcareapis/workspaces/dicomservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/workspaces/fhirservices": {
      "name": "microsoft.healthcareapis/workspaces/fhirservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareapis/workspaces/iotconnectors": {
      "name": "microsoft.healthcareapis/workspaces/iotconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/dicomconnectors": {
      "name": "microsoft.healthcareinterop/dicomconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/dicomdirectchannels": {
      "name": "microsoft.healthcareinterop/dicomdirectchannels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/dicomedgeconnectors": {
      "name": "microsoft.healthcareinterop/dicomedgeconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/fhirqueryeventbatchchannels": {
      "name": "microsoft.healthcareinterop/fhirqueryeventbatchchannels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/fhirqueryflatfilebatchchannels": {
      "name": "microsoft.healthcareinterop/fhirqueryflatfilebatchchannels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/hl7connectors": {
      "name": "microsoft.healthcareinterop/hl7connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/hl7edgeconnectors": {
      "name": "microsoft.healthcareinterop/hl7edgeconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/hubs": {
      "name": "microsoft.healthcareinterop/hubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/onelakeconnectors": {
      "name": "microsoft.healthcareinterop/onelakeconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthcareinterop/storageaccountconnectors": {
      "name": "microsoft.healthcareinterop/storageaccountconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthdataaiservices/deidservices": {
      "name": "microsoft.healthdataaiservices/deidservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthmodel/healthmodels": {
      "name": "microsoft.healthmodel/healthmodels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.healthplatform/accounts": {
      "name": "microsoft.healthplatform/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hpcworkbench/instances": {
      "name": "microsoft.hpcworkbench/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hpcworkbench/instances/chambers": {
      "name": "microsoft.hpcworkbench/instances/chambers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hpcworkbench/instances/chambers/accessprofiles": {
      "name": "microsoft.hpcworkbench/instances/chambers/accessprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hpcworkbench/instances/chambers/workloads": {
      "name": "microsoft.hpcworkbench/instances/chambers/workloads",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hpcworkbench/instances/consortiums": {
      "name": "microsoft.hpcworkbench/instances/consortiums",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcloud/cloudconnections": {
      "name": "microsoft.hybridcloud/cloudconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcloud/cloudconnectors": {
      "name": "microsoft.hybridcloud/cloudconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/gateways": {
      "name": "microsoft.hybridcompute/gateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/licenses": {
      "name": "microsoft.hybridcompute/licenses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/machines": {
      "name": "microsoft.hybridcompute/machines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/machines/extensions": {
      "name": "microsoft.hybridcompute/machines/extensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/machines/licenseprofiles": {
      "name": "microsoft.hybridcompute/machines/licenseprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/machines/runcommands": {
      "name": "microsoft.hybridcompute/machines/runcommands",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcompute/privatelinkscopes": {
      "name": "microsoft.hybridcompute/privatelinkscopes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridconnectivity/publiccloudconnectors": {
      "name": "microsoft.hybridconnectivity/publiccloudconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcontainerservice/provisionedclusters": {
      "name": "microsoft.hybridcontainerservice/provisionedclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcontainerservice/provisionedclusters/agentpools": {
      "name": "microsoft.hybridcontainerservice/provisionedclusters/agentpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcontainerservice/storagespaces": {
      "name": "microsoft.hybridcontainerservice/storagespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridcontainerservice/virtualnetworks": {
      "name": "microsoft.hybridcontainerservice/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybriddata/datamanagers": {
      "name": "microsoft.hybriddata/datamanagers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/configurationgroupvalues": {
      "name": "microsoft.hybridnetwork/configurationgroupvalues",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/devices": {
      "name": "microsoft.hybridnetwork/devices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/networkfunctions": {
      "name": "microsoft.hybridnetwork/networkfunctions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers": {
      "name": "microsoft.hybridnetwork/publishers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/artifactstores": {
      "name": "microsoft.hybridnetwork/publishers/artifactstores",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/artifactstores/artifactmanifests": {
      "name": "microsoft.hybridnetwork/publishers/artifactstores/artifactmanifests",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/configurationgroupschemas": {
      "name": "microsoft.hybridnetwork/publishers/configurationgroupschemas",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups": {
      "name": "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions": {
      "name": "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/networkfunctiondefinitionversions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/previewsubscriptions": {
      "name": "microsoft.hybridnetwork/publishers/networkfunctiondefinitiongroups/previewsubscriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/networkservicedesigngroups": {
      "name": "microsoft.hybridnetwork/publishers/networkservicedesigngroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/publishers/networkservicedesigngroups/networkservicedesignversions": {
      "name": "microsoft.hybridnetwork/publishers/networkservicedesigngroups/networkservicedesignversions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/servicemanagementcontainers": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/rolloutsequences": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/rolloutsequences",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/rollouttiers": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/rollouttiers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts": {
      "name": "microsoft.hybridnetwork/servicemanagementcontainers/updatespecifications/rollouts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/sitenetworkservices": {
      "name": "microsoft.hybridnetwork/sitenetworkservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.hybridnetwork/sites": {
      "name": "microsoft.hybridnetwork/sites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.ibmpower/powervirtualmachines": {
      "name": "microsoft.ibmpower/powervirtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.ibmpower/powervirtualmachines/interfaces": {
      "name": "microsoft.ibmpower/powervirtualmachines/interfaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.importexport/jobs": {
      "name": "microsoft.importexport/jobs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/actiongroups": {
      "name": "microsoft.insights/actiongroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/activitylogalerts": {
      "name": "microsoft.insights/activitylogalerts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/autoscalesettings": {
      "name": "microsoft.insights/autoscalesettings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/components": {
      "name": "microsoft.insights/components",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/datacollectionendpoints": {
      "name": "microsoft.insights/datacollectionendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/datacollectionrules": {
      "name": "microsoft.insights/datacollectionrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/firstparty": {
      "name": "microsoft.insights/firstparty",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/guestdiagnosticsettings": {
      "name": "microsoft.insights/guestdiagnosticsettings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/metricalerts": {
      "name": "microsoft.insights/metricalerts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/notificationgroups": {
      "name": "microsoft.insights/notificationgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/notificationrules": {
      "name": "microsoft.insights/notificationrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/privatelinkscopes": {
      "name": "microsoft.insights/privatelinkscopes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/scheduledqueryrules": {
      "name": "microsoft.insights/scheduledqueryrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/webtests": {
      "name": "microsoft.insights/webtests",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/workbooks": {
      "name": "microsoft.insights/workbooks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.insights/workbooktemplates": {
      "name": "microsoft.insights/workbooktemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.integrationspaces/spaces": {
      "name": "microsoft.integrationspaces/spaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.integrationspaces/spaces/applications": {
      "name": "microsoft.integrationspaces/spaces/applications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotcentral/iotapps": {
      "name": "microsoft.iotcentral/iotapps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotfirmwaredefense/workspaces": {
      "name": "microsoft.iotfirmwaredefense/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperations/instances": {
      "name": "microsoft.iotoperations/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsdataprocessor/instances": {
      "name": "microsoft.iotoperationsdataprocessor/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsdataprocessor/instances/datasets": {
      "name": "microsoft.iotoperationsdataprocessor/instances/datasets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsdataprocessor/instances/pipelines": {
      "name": "microsoft.iotoperationsdataprocessor/instances/pipelines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq": {
      "name": "microsoft.iotoperationsmq/mq",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/broker": {
      "name": "microsoft.iotoperationsmq/mq/broker",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/broker/authentication": {
      "name": "microsoft.iotoperationsmq/mq/broker/authentication",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/broker/authorization": {
      "name": "microsoft.iotoperationsmq/mq/broker/authorization",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/broker/listener": {
      "name": "microsoft.iotoperationsmq/mq/broker/listener",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/datalakeconnector": {
      "name": "microsoft.iotoperationsmq/mq/datalakeconnector",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/datalakeconnector/topicmap": {
      "name": "microsoft.iotoperationsmq/mq/datalakeconnector/topicmap",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/diagnosticservice": {
      "name": "microsoft.iotoperationsmq/mq/diagnosticservice",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/kafkaconnector": {
      "name": "microsoft.iotoperationsmq/mq/kafkaconnector",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/kafkaconnector/topicmap": {
      "name": "microsoft.iotoperationsmq/mq/kafkaconnector/topicmap",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/mqttbridgeconnector": {
      "name": "microsoft.iotoperationsmq/mq/mqttbridgeconnector",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsmq/mq/mqttbridgeconnector/topicmap": {
      "name": "microsoft.iotoperationsmq/mq/mqttbridgeconnector/topicmap",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsorchestrator/instances": {
      "name": "microsoft.iotoperationsorchestrator/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsorchestrator/solutions": {
      "name": "microsoft.iotoperationsorchestrator/solutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.iotoperationsorchestrator/targets": {
      "name": "microsoft.iotoperationsorchestrator/targets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.keyvault/hsmpools": {
      "name": "microsoft.keyvault/hsmpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.keyvault/managedhsms": {
      "name": "microsoft.keyvault/managedhsms",
      "tables": [
        "resources"
      ]
    },
    "microsoft.keyvault/vaults": {
      "name": "microsoft.keyvault/vaults",
      "tables": [
        "resources"
      ]
    },
    "microsoft.kubernetes/connectedclusters": {
      "name": "microsoft.kubernetes/connectedclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.kubernetesconfiguration/privatelinkscopes": {
      "name": "microsoft.kubernetesconfiguration/privatelinkscopes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.kusto/clusters": {
      "name": "microsoft.kusto/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.kx/kdbinsightsenterprise": {
      "name": "microsoft.kx/kdbinsightsenterprise",
      "tables": [
        "resources"
      ]
    },
    "microsoft.labservices/labaccounts": {
      "name": "microsoft.labservices/labaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.labservices/labplans": {
      "name": "microsoft.labservices/labplans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.labservices/labs": {
      "name": "microsoft.labservices/labs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.liftrpilot/organizations": {
      "name": "microsoft.liftrpilot/organizations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.liftrpilot/testtrackedresources": {
      "name": "microsoft.liftrpilot/testtrackedresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.liftrpilot/testtrackedsyncresources": {
      "name": "microsoft.liftrpilot/testtrackedsyncresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.loadtestservice/loadtests": {
      "name": "microsoft.loadtestservice/loadtests",
      "tables": [
        "resources"
      ]
    },
    "microsoft.loadtestservice/playwrightworkspaces": {
      "name": "microsoft.loadtestservice/playwrightworkspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.logic/businessprocesses": {
      "name": "microsoft.logic/businessprocesses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.logic/integrationaccounts": {
      "name": "microsoft.logic/integrationaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.logic/integrationserviceenvironments": {
      "name": "microsoft.logic/integrationserviceenvironments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.logic/integrationserviceenvironments/managedapis": {
      "name": "microsoft.logic/integrationserviceenvironments/managedapis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.logic/templates": {
      "name": "microsoft.logic/templates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.logic/workflows": {
      "name": "microsoft.logic/workflows",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearning/webservices": {
      "name": "microsoft.machinelearning/webservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/inferencemodels": {
      "name": "microsoft.machinelearningservices/inferencemodels",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/registries": {
      "name": "microsoft.machinelearningservices/registries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/virtualclusters": {
      "name": "microsoft.machinelearningservices/virtualclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces": {
      "name": "microsoft.machinelearningservices/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/batchendpoints": {
      "name": "microsoft.machinelearningservices/workspaces/batchendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/batchendpoints/deployments": {
      "name": "microsoft.machinelearningservices/workspaces/batchendpoints/deployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/inferencepools": {
      "name": "microsoft.machinelearningservices/workspaces/inferencepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/inferencepools/endpoints": {
      "name": "microsoft.machinelearningservices/workspaces/inferencepools/endpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/inferencepools/groups": {
      "name": "microsoft.machinelearningservices/workspaces/inferencepools/groups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/onlineendpoints": {
      "name": "microsoft.machinelearningservices/workspaces/onlineendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/onlineendpoints/deployments": {
      "name": "microsoft.machinelearningservices/workspaces/onlineendpoints/deployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/registries": {
      "name": "microsoft.machinelearningservices/workspaces/registries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.machinelearningservices/workspaces/serverlessendpoints": {
      "name": "microsoft.machinelearningservices/workspaces/serverlessendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.maintenance/maintenanceconfigurations": {
      "name": "microsoft.maintenance/maintenanceconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.maintenance/maintenancepolicies": {
      "name": "microsoft.maintenance/maintenancepolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.maintenance/orchestrationpreferences": {
      "name": "microsoft.maintenance/orchestrationpreferences",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managedidentity/userassignedidentities": {
      "name": "microsoft.managedidentity/userassignedidentities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/accesscontrollists": {
      "name": "microsoft.managednetworkfabric/accesscontrollists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/internetgatewayrules": {
      "name": "microsoft.managednetworkfabric/internetgatewayrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/internetgateways": {
      "name": "microsoft.managednetworkfabric/internetgateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/ipcommunities": {
      "name": "microsoft.managednetworkfabric/ipcommunities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/ipcommunitylists": {
      "name": "microsoft.managednetworkfabric/ipcommunitylists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/ipextendedcommunities": {
      "name": "microsoft.managednetworkfabric/ipextendedcommunities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/ipprefixes": {
      "name": "microsoft.managednetworkfabric/ipprefixes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/ipprefixlists": {
      "name": "microsoft.managednetworkfabric/ipprefixlists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/l2isolationdomains": {
      "name": "microsoft.managednetworkfabric/l2isolationdomains",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/l3isolationdomains": {
      "name": "microsoft.managednetworkfabric/l3isolationdomains",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/neighborgroups": {
      "name": "microsoft.managednetworkfabric/neighborgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networkdevices": {
      "name": "microsoft.managednetworkfabric/networkdevices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networkfabriccontrollers": {
      "name": "microsoft.managednetworkfabric/networkfabriccontrollers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networkfabrics": {
      "name": "microsoft.managednetworkfabric/networkfabrics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networkmonitors": {
      "name": "microsoft.managednetworkfabric/networkmonitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networkpacketbrokers": {
      "name": "microsoft.managednetworkfabric/networkpacketbrokers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networkracks": {
      "name": "microsoft.managednetworkfabric/networkracks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networktaprules": {
      "name": "microsoft.managednetworkfabric/networktaprules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/networktaps": {
      "name": "microsoft.managednetworkfabric/networktaps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managednetworkfabric/routepolicies": {
      "name": "microsoft.managednetworkfabric/routepolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.managedstorageclass/managedstorageclass": {
      "name": "microsoft.managedstorageclass/managedstorageclass",
      "tables": [
        "resources"
      ]
    },
    "microsoft.manufacturingplatform/manufacturingdataservices": {
      "name": "microsoft.manufacturingplatform/manufacturingdataservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.maps/accounts": {
      "name": "microsoft.maps/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.maps/accounts/creators": {
      "name": "microsoft.maps/accounts/creators",
      "tables": [
        "resources"
      ]
    },
    "microsoft.messagingcatalog/catalogs": {
      "name": "microsoft.messagingcatalog/catalogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.messagingconnectors/connectors": {
      "name": "microsoft.messagingconnectors/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.metaverse/metaverses": {
      "name": "microsoft.metaverse/metaverses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.migrate/assessmentprojects": {
      "name": "microsoft.migrate/assessmentprojects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.migrate/migrateprojects": {
      "name": "microsoft.migrate/migrateprojects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.migrate/modernizeprojects": {
      "name": "microsoft.migrate/modernizeprojects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.migrate/movecollections": {
      "name": "microsoft.migrate/movecollections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.migrate/projects": {
      "name": "microsoft.migrate/projects",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/catalogs": {
      "name": "microsoft.mission/catalogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/communities": {
      "name": "microsoft.mission/communities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/communities/communityendpoints": {
      "name": "microsoft.mission/communities/communityendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/communities/transithubs": {
      "name": "microsoft.mission/communities/transithubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/enclaveconnections": {
      "name": "microsoft.mission/enclaveconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/externalconnections": {
      "name": "microsoft.mission/externalconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/internalconnections": {
      "name": "microsoft.mission/internalconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/virtualenclaves": {
      "name": "microsoft.mission/virtualenclaves",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/virtualenclaves/enclaveendpoints": {
      "name": "microsoft.mission/virtualenclaves/enclaveendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/virtualenclaves/endpoints": {
      "name": "microsoft.mission/virtualenclaves/endpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mission/virtualenclaves/workloads": {
      "name": "microsoft.mission/virtualenclaves/workloads",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mixedreality/objectanchorsaccounts": {
      "name": "microsoft.mixedreality/objectanchorsaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mixedreality/objectunderstandingaccounts": {
      "name": "microsoft.mixedreality/objectunderstandingaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mixedreality/remoterenderingaccounts": {
      "name": "microsoft.mixedreality/remoterenderingaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mixedreality/spatialanchorsaccounts": {
      "name": "microsoft.mixedreality/spatialanchorsaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mixedreality/spatialmapsaccounts": {
      "name": "microsoft.mixedreality/spatialmapsaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/amfdeployments": {
      "name": "microsoft.mobilenetwork/amfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/clusterservices": {
      "name": "microsoft.mobilenetwork/clusterservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks": {
      "name": "microsoft.mobilenetwork/mobilenetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/datanetworks": {
      "name": "microsoft.mobilenetwork/mobilenetworks/datanetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/edgenetworksecuritygroups": {
      "name": "microsoft.mobilenetwork/mobilenetworks/edgenetworksecuritygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/services": {
      "name": "microsoft.mobilenetwork/mobilenetworks/services",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/simpolicies": {
      "name": "microsoft.mobilenetwork/mobilenetworks/simpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/sites": {
      "name": "microsoft.mobilenetwork/mobilenetworks/sites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/slices": {
      "name": "microsoft.mobilenetwork/mobilenetworks/slices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/mobilenetworks/wifissids": {
      "name": "microsoft.mobilenetwork/mobilenetworks/wifissids",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/nrfdeployments": {
      "name": "microsoft.mobilenetwork/nrfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/nssfdeployments": {
      "name": "microsoft.mobilenetwork/nssfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/observabilityservices": {
      "name": "microsoft.mobilenetwork/observabilityservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attacheddatanetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attachedwifissids": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/attachedwifissids",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/edgevirtualnetworks": {
      "name": "microsoft.mobilenetwork/packetcorecontrolplanes/packetcoredataplanes/edgevirtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/radioaccessnetworks": {
      "name": "microsoft.mobilenetwork/radioaccessnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/simgroups": {
      "name": "microsoft.mobilenetwork/simgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/sims": {
      "name": "microsoft.mobilenetwork/sims",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/sims/simprofiles": {
      "name": "microsoft.mobilenetwork/sims/simprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/smfdeployments": {
      "name": "microsoft.mobilenetwork/smfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilenetwork/upfdeployments": {
      "name": "microsoft.mobilenetwork/upfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/amfdeployments": {
      "name": "microsoft.mobilepacketcore/amfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/clusterservices": {
      "name": "microsoft.mobilepacketcore/clusterservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/mobilepacketcores": {
      "name": "microsoft.mobilepacketcore/mobilepacketcores",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/networkfunctions": {
      "name": "microsoft.mobilepacketcore/networkfunctions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/nrfdeployments": {
      "name": "microsoft.mobilepacketcore/nrfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/nssfdeployments": {
      "name": "microsoft.mobilepacketcore/nssfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/observabilityservices": {
      "name": "microsoft.mobilepacketcore/observabilityservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/smfdeployments": {
      "name": "microsoft.mobilepacketcore/smfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mobilepacketcore/upfdeployments": {
      "name": "microsoft.mobilepacketcore/upfdeployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/instances": {
      "name": "microsoft.modsimworkbench/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/instances/chambers": {
      "name": "microsoft.modsimworkbench/instances/chambers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/instances/chambers/connectors": {
      "name": "microsoft.modsimworkbench/instances/chambers/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/instances/chambers/workloads": {
      "name": "microsoft.modsimworkbench/instances/chambers/workloads",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/workbenches": {
      "name": "microsoft.modsimworkbench/workbenches",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/workbenches/chambers": {
      "name": "microsoft.modsimworkbench/workbenches/chambers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/workbenches/chambers/connectors": {
      "name": "microsoft.modsimworkbench/workbenches/chambers/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/workbenches/chambers/storages": {
      "name": "microsoft.modsimworkbench/workbenches/chambers/storages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/workbenches/chambers/workloads": {
      "name": "microsoft.modsimworkbench/workbenches/chambers/workloads",
      "tables": [
        "resources"
      ]
    },
    "microsoft.modsimworkbench/workbenches/sharedstorages": {
      "name": "microsoft.modsimworkbench/workbenches/sharedstorages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.monitor/accounts": {
      "name": "microsoft.monitor/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.monitor/pipelinegroups": {
      "name": "microsoft.monitor/pipelinegroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.mysqldiscovery/mysqlsites": {
      "name": "microsoft.mysqldiscovery/mysqlsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/activedirectoryconfigs": {
      "name": "microsoft.netapp/activedirectoryconfigs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts": {
      "name": "microsoft.netapp/netappaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts/backuppolicies": {
      "name": "microsoft.netapp/netappaccounts/backuppolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts/backupvaults": {
      "name": "microsoft.netapp/netappaccounts/backupvaults",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts/capacitypools": {
      "name": "microsoft.netapp/netappaccounts/capacitypools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts/capacitypools/caches": {
      "name": "microsoft.netapp/netappaccounts/capacitypools/caches",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts/capacitypools/volumes": {
      "name": "microsoft.netapp/netappaccounts/capacitypools/volumes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/netappaccounts/snapshotpolicies": {
      "name": "microsoft.netapp/netappaccounts/snapshotpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/scaleaccounts": {
      "name": "microsoft.netapp/scaleaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/scaleaccounts/scalecapacitypools": {
      "name": "microsoft.netapp/scaleaccounts/scalecapacitypools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/scaleaccounts/scalecapacitypools/scalevolumes": {
      "name": "microsoft.netapp/scaleaccounts/scalecapacitypools/scalevolumes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.netapp/scaleaccounts/scalesnapshotpolicies": {
      "name": "microsoft.netapp/scaleaccounts/scalesnapshotpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/applicationgateways": {
      "name": "microsoft.network/applicationgateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/applicationgatewaywebapplicationfirewallpolicies": {
      "name": "microsoft.network/applicationgatewaywebapplicationfirewallpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/applicationsecuritygroups": {
      "name": "microsoft.network/applicationsecuritygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/azurefirewalls": {
      "name": "microsoft.network/azurefirewalls",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/bastionhosts": {
      "name": "microsoft.network/bastionhosts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/connections": {
      "name": "microsoft.network/connections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/customipprefixes": {
      "name": "microsoft.network/customipprefixes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/ddoscustompolicies": {
      "name": "microsoft.network/ddoscustompolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/ddosprotectionplans": {
      "name": "microsoft.network/ddosprotectionplans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsforwardingrulesets": {
      "name": "microsoft.network/dnsforwardingrulesets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolverdomainlists": {
      "name": "microsoft.network/dnsresolverdomainlists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolverpolicies": {
      "name": "microsoft.network/dnsresolverpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolverpolicies/dnssecurityrules": {
      "name": "microsoft.network/dnsresolverpolicies/dnssecurityrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolverpolicies/virtualnetworklinks": {
      "name": "microsoft.network/dnsresolverpolicies/virtualnetworklinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolvers": {
      "name": "microsoft.network/dnsresolvers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolvers/inboundendpoints": {
      "name": "microsoft.network/dnsresolvers/inboundendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnsresolvers/outboundendpoints": {
      "name": "microsoft.network/dnsresolvers/outboundendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnssecuritypolicies": {
      "name": "microsoft.network/dnssecuritypolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnssecuritypolicies/virtualnetworklinks": {
      "name": "microsoft.network/dnssecuritypolicies/virtualnetworklinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnssecuritypolicydomainlists": {
      "name": "microsoft.network/dnssecuritypolicydomainlists",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dnszones": {
      "name": "microsoft.network/dnszones",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/dscpconfigurations": {
      "name": "microsoft.network/dscpconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/expressroutecircuits": {
      "name": "microsoft.network/expressroutecircuits",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/expressroutecrossconnections": {
      "name": "microsoft.network/expressroutecrossconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/expressroutegateways": {
      "name": "microsoft.network/expressroutegateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/expressrouteports": {
      "name": "microsoft.network/expressrouteports",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/firewallpolicies": {
      "name": "microsoft.network/firewallpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/firewallpolicies/rulegroups": {
      "name": "microsoft.network/firewallpolicies/rulegroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/frontdoors": {
      "name": "microsoft.network/frontdoors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/frontdoorwebapplicationfirewallpolicies": {
      "name": "microsoft.network/frontdoorwebapplicationfirewallpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/gatewayloadbalanceraliases": {
      "name": "microsoft.network/gatewayloadbalanceraliases",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/ipallocations": {
      "name": "microsoft.network/ipallocations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/ipgroups": {
      "name": "microsoft.network/ipgroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/loadbalancers": {
      "name": "microsoft.network/loadbalancers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/localnetworkgateways": {
      "name": "microsoft.network/localnetworkgateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/natgateways": {
      "name": "microsoft.network/natgateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkexperimentprofiles": {
      "name": "microsoft.network/networkexperimentprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkintentpolicies": {
      "name": "microsoft.network/networkintentpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkinterfaces": {
      "name": "microsoft.network/networkinterfaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkmanagers": {
      "name": "microsoft.network/networkmanagers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkmanagers/ipampools": {
      "name": "microsoft.network/networkmanagers/ipampools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkmanagers/verifierworkspaces": {
      "name": "microsoft.network/networkmanagers/verifierworkspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkprofiles": {
      "name": "microsoft.network/networkprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networksecuritygroups": {
      "name": "microsoft.network/networksecuritygroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networksecurityperimeters": {
      "name": "microsoft.network/networksecurityperimeters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkverifiers": {
      "name": "microsoft.network/networkverifiers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkvirtualappliances": {
      "name": "microsoft.network/networkvirtualappliances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers": {
      "name": "microsoft.network/networkwatchers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/agents": {
      "name": "microsoft.network/networkwatchers/agents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/connectionanalyzers": {
      "name": "microsoft.network/networkwatchers/connectionanalyzers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/connectionmonitors": {
      "name": "microsoft.network/networkwatchers/connectionmonitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/flowlogs": {
      "name": "microsoft.network/networkwatchers/flowlogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/lenses": {
      "name": "microsoft.network/networkwatchers/lenses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/networkwatcheragents": {
      "name": "microsoft.network/networkwatchers/networkwatcheragents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/networkwatchers/pingmeshes": {
      "name": "microsoft.network/networkwatchers/pingmeshes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/p2svpngateways": {
      "name": "microsoft.network/p2svpngateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/privatednszones": {
      "name": "microsoft.network/privatednszones",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/privatednszones/virtualnetworklinks": {
      "name": "microsoft.network/privatednszones/virtualnetworklinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/privateendpointredirectmaps": {
      "name": "microsoft.network/privateendpointredirectmaps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/privateendpoints": {
      "name": "microsoft.network/privateendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/privatelinkservices": {
      "name": "microsoft.network/privatelinkservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/publicipaddresses": {
      "name": "microsoft.network/publicipaddresses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/publicipprefixes": {
      "name": "microsoft.network/publicipprefixes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/routefilters": {
      "name": "microsoft.network/routefilters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/routetables": {
      "name": "microsoft.network/routetables",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/sampleresources": {
      "name": "microsoft.network/sampleresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/securitypartnerproviders": {
      "name": "microsoft.network/securitypartnerproviders",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/serviceendpointpolicies": {
      "name": "microsoft.network/serviceendpointpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/servicegateways": {
      "name": "microsoft.network/servicegateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/trafficmanagerprofiles": {
      "name": "microsoft.network/trafficmanagerprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualhubs": {
      "name": "microsoft.network/virtualhubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualhubs/bgpconnections": {
      "name": "microsoft.network/virtualhubs/bgpconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualhubs/ipconfigurations": {
      "name": "microsoft.network/virtualhubs/ipconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualnetworkappliances": {
      "name": "microsoft.network/virtualnetworkappliances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualnetworkgateways": {
      "name": "microsoft.network/virtualnetworkgateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualnetworks": {
      "name": "microsoft.network/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualnetworktaps": {
      "name": "microsoft.network/virtualnetworktaps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualrouters": {
      "name": "microsoft.network/virtualrouters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/virtualwans": {
      "name": "microsoft.network/virtualwans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/vpngateways": {
      "name": "microsoft.network/vpngateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/vpnserverconfigurations": {
      "name": "microsoft.network/vpnserverconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.network/vpnsites": {
      "name": "microsoft.network/vpnsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkanalytics/dataconnectors": {
      "name": "microsoft.networkanalytics/dataconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkanalytics/datalakehouses": {
      "name": "microsoft.networkanalytics/datalakehouses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkanalytics/dataproducts": {
      "name": "microsoft.networkanalytics/dataproducts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkanalytics/metricsingestionendpoints": {
      "name": "microsoft.networkanalytics/metricsingestionendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/baremetalmachines": {
      "name": "microsoft.networkcloud/baremetalmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/cloudservicesnetworks": {
      "name": "microsoft.networkcloud/cloudservicesnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/clustermanagers": {
      "name": "microsoft.networkcloud/clustermanagers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/clusters": {
      "name": "microsoft.networkcloud/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/clusters/baremetalmachinekeysets": {
      "name": "microsoft.networkcloud/clusters/baremetalmachinekeysets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/clusters/bmckeysets": {
      "name": "microsoft.networkcloud/clusters/bmckeysets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/clusters/metricsconfigurations": {
      "name": "microsoft.networkcloud/clusters/metricsconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/defaultcninetworks": {
      "name": "microsoft.networkcloud/defaultcninetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/edgeclusters": {
      "name": "microsoft.networkcloud/edgeclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/edgeclusters/nodes": {
      "name": "microsoft.networkcloud/edgeclusters/nodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/hybridaksclusters": {
      "name": "microsoft.networkcloud/hybridaksclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/kubernetesclusters": {
      "name": "microsoft.networkcloud/kubernetesclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/kubernetesclusters/agentpools": {
      "name": "microsoft.networkcloud/kubernetesclusters/agentpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/kubernetesclusters/features": {
      "name": "microsoft.networkcloud/kubernetesclusters/features",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/l2networks": {
      "name": "microsoft.networkcloud/l2networks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/l3networks": {
      "name": "microsoft.networkcloud/l3networks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/racks": {
      "name": "microsoft.networkcloud/racks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/registrationhubs": {
      "name": "microsoft.networkcloud/registrationhubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/registrationhubs/images": {
      "name": "microsoft.networkcloud/registrationhubs/images",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/registrationhubs/machines": {
      "name": "microsoft.networkcloud/registrationhubs/machines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/storageappliances": {
      "name": "microsoft.networkcloud/storageappliances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/trunkednetworks": {
      "name": "microsoft.networkcloud/trunkednetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/virtualmachines": {
      "name": "microsoft.networkcloud/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/virtualmachines/consoles": {
      "name": "microsoft.networkcloud/virtualmachines/consoles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkcloud/volumes": {
      "name": "microsoft.networkcloud/volumes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkfunction/azuretrafficcollectors": {
      "name": "microsoft.networkfunction/azuretrafficcollectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkfunction/azuretrafficcollectors/collectorpolicies": {
      "name": "microsoft.networkfunction/azuretrafficcollectors/collectorpolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkfunction/meshvpns": {
      "name": "microsoft.networkfunction/meshvpns",
      "tables": [
        "resources"
      ]
    },
    "microsoft.networkfunction/vpnbranches": {
      "name": "microsoft.networkfunction/vpnbranches",
      "tables": [
        "resources"
      ]
    },
    "microsoft.nexusidentity/identitycontrollers": {
      "name": "microsoft.nexusidentity/identitycontrollers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.nexusidentity/identitysets": {
      "name": "microsoft.nexusidentity/identitysets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.notificationhubs/namespaces": {
      "name": "microsoft.notificationhubs/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.notificationhubs/namespaces/notificationhubs": {
      "name": "microsoft.notificationhubs/namespaces/notificationhubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.nutanix/interfaces": {
      "name": "microsoft.nutanix/interfaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.nutanix/nodes": {
      "name": "microsoft.nutanix/nodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.objectstore/osnamespaces": {
      "name": "microsoft.objectstore/osnamespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazure/appliances": {
      "name": "microsoft.offazure/appliances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazure/hypervsites": {
      "name": "microsoft.offazure/hypervsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazure/importsites": {
      "name": "microsoft.offazure/importsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazure/mastersites": {
      "name": "microsoft.offazure/mastersites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazure/serversites": {
      "name": "microsoft.offazure/serversites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazure/vmwaresites": {
      "name": "microsoft.offazure/vmwaresites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.offazurespringboot/springbootsites": {
      "name": "microsoft.offazurespringboot/springbootsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.onlineexperimentation/workspaces": {
      "name": "microsoft.onlineexperimentation/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.openenergyplatform/energyservices": {
      "name": "microsoft.openenergyplatform/energyservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.openlogisticsplatform/applicationmanagers": {
      "name": "microsoft.openlogisticsplatform/applicationmanagers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.openlogisticsplatform/applicationworkspaces": {
      "name": "microsoft.openlogisticsplatform/applicationworkspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.openlogisticsplatform/workspaces": {
      "name": "microsoft.openlogisticsplatform/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.operationalinsights/clusters": {
      "name": "microsoft.operationalinsights/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.operationalinsights/querypacks": {
      "name": "microsoft.operationalinsights/querypacks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.operationalinsights/workspaces": {
      "name": "microsoft.operationalinsights/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.operationsmanagement/solutions": {
      "name": "microsoft.operationsmanagement/solutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.operationsmanagement/views": {
      "name": "microsoft.operationsmanagement/views",
      "tables": [
        "resources"
      ]
    },
    "microsoft.oraclediscovery/oraclesites": {
      "name": "microsoft.oraclediscovery/oraclesites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/cloudaccessrouters": {
      "name": "microsoft.orbital/cloudaccessrouters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/contactprofiles": {
      "name": "microsoft.orbital/contactprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/edgesites": {
      "name": "microsoft.orbital/edgesites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/geocatalogs": {
      "name": "microsoft.orbital/geocatalogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/groundstations": {
      "name": "microsoft.orbital/groundstations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/l2connections": {
      "name": "microsoft.orbital/l2connections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/sdwancontrollers": {
      "name": "microsoft.orbital/sdwancontrollers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/spacecrafts": {
      "name": "microsoft.orbital/spacecrafts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.orbital/terminals": {
      "name": "microsoft.orbital/terminals",
      "tables": [
        "resources"
      ]
    },
    "microsoft.peering/peerings": {
      "name": "microsoft.peering/peerings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.peering/peeringservices": {
      "name": "microsoft.peering/peeringservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.pki/pkis": {
      "name": "microsoft.pki/pkis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.playfab/playeraccountpools": {
      "name": "microsoft.playfab/playeraccountpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.playfab/titles": {
      "name": "microsoft.playfab/titles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portal/dashboards": {
      "name": "microsoft.portal/dashboards",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portalsdk/rootresources": {
      "name": "microsoft.portalsdk/rootresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portalservices/dashboards": {
      "name": "microsoft.portalservices/dashboards",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portalservices/extensions": {
      "name": "microsoft.portalservices/extensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portalservices/extensions/deployments": {
      "name": "microsoft.portalservices/extensions/deployments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portalservices/extensions/slots": {
      "name": "microsoft.portalservices/extensions/slots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.portalservices/extensions/versions": {
      "name": "microsoft.portalservices/extensions/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerbi/privatelinkservicesforpowerbi": {
      "name": "microsoft.powerbi/privatelinkservicesforpowerbi",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerbi/tenants": {
      "name": "microsoft.powerbi/tenants",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerbi/workspacecollections": {
      "name": "microsoft.powerbi/workspacecollections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerbidedicated/autoscalevcores": {
      "name": "microsoft.powerbidedicated/autoscalevcores",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerbidedicated/capacities": {
      "name": "microsoft.powerbidedicated/capacities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerplatform/accounts": {
      "name": "microsoft.powerplatform/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.powerplatform/enterprisepolicies": {
      "name": "microsoft.powerplatform/enterprisepolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.premonition/libraries": {
      "name": "microsoft.premonition/libraries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.premonition/libraries/analyses": {
      "name": "microsoft.premonition/libraries/analyses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.premonition/libraries/samples": {
      "name": "microsoft.premonition/libraries/samples",
      "tables": [
        "resources"
      ]
    },
    "microsoft.professionalservice/resources": {
      "name": "microsoft.professionalservice/resources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.programmableconnectivity/gateways": {
      "name": "microsoft.programmableconnectivity/gateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.programmableconnectivity/operatorapiconnections": {
      "name": "microsoft.programmableconnectivity/operatorapiconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.programmableconnectivity/operatorconnections": {
      "name": "microsoft.programmableconnectivity/operatorconnections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.proposal/proposals": {
      "name": "microsoft.proposal/proposals",
      "tables": [
        "resources"
      ]
    },
    "microsoft.providerhub/providermonitorsettings": {
      "name": "microsoft.providerhub/providermonitorsettings",
      "tables": [
        "resources"
      ]
    },
    "microsoft.purview/accounts": {
      "name": "microsoft.purview/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.quantum/provideraccounts": {
      "name": "microsoft.quantum/provideraccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.quantum/workspaces": {
      "name": "microsoft.quantum/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.recommendationsservice/accounts": {
      "name": "microsoft.recommendationsservice/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.recommendationsservice/accounts/modeling": {
      "name": "microsoft.recommendationsservice/accounts/modeling",
      "tables": [
        "resources"
      ]
    },
    "microsoft.recommendationsservice/accounts/serviceendpoints": {
      "name": "microsoft.recommendationsservice/accounts/serviceendpoints",
      "tables": [
        "resources"
      ]
    },
    "microsoft.redhatopenshift/hcpopenshiftclusters": {
      "name": "microsoft.redhatopenshift/hcpopenshiftclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.redhatopenshift/hcpopenshiftclusters/nodepools": {
      "name": "microsoft.redhatopenshift/hcpopenshiftclusters/nodepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.redhatopenshift/openshiftclusters": {
      "name": "microsoft.redhatopenshift/openshiftclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.relay/namespaces": {
      "name": "microsoft.relay/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.remoteapp/collections": {
      "name": "microsoft.remoteapp/collections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resiliency/chaosexperiments": {
      "name": "microsoft.resiliency/chaosexperiments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resourceconnector/appliances": {
      "name": "microsoft.resourceconnector/appliances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resourcegraph/queries": {
      "name": "microsoft.resourcegraph/queries",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resources/deploymentscripts": {
      "name": "microsoft.resources/deploymentscripts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resources/mobobrokers": {
      "name": "microsoft.resources/mobobrokers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resources/templatespecs": {
      "name": "microsoft.resources/templatespecs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.resources/templatespecs/versions": {
      "name": "microsoft.resources/templatespecs/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.saas/applications": {
      "name": "microsoft.saas/applications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.saas/resources": {
      "name": "microsoft.saas/resources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.saashub/cloudservices": {
      "name": "microsoft.saashub/cloudservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scom/managedinstances": {
      "name": "microsoft.scom/managedinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/availabilitysets": {
      "name": "microsoft.scvmm/availabilitysets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/clouds": {
      "name": "microsoft.scvmm/clouds",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/virtualmachines": {
      "name": "microsoft.scvmm/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/virtualmachines/extensions": {
      "name": "microsoft.scvmm/virtualmachines/extensions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/virtualmachinetemplates": {
      "name": "microsoft.scvmm/virtualmachinetemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/virtualnetworks": {
      "name": "microsoft.scvmm/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.scvmm/vmmservers": {
      "name": "microsoft.scvmm/vmmservers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.search/searchservices": {
      "name": "microsoft.search/searchservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.secretmanagementsampleprovider/forecasts": {
      "name": "microsoft.secretmanagementsampleprovider/forecasts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.secretsynccontroller/azurekeyvaultsecretproviderclasses": {
      "name": "microsoft.secretsynccontroller/azurekeyvaultsecretproviderclasses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.secretsynccontroller/secretsyncs": {
      "name": "microsoft.secretsynccontroller/secretsyncs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/assignments": {
      "name": "microsoft.security/assignments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/automations": {
      "name": "microsoft.security/automations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/customassessmentautomations": {
      "name": "microsoft.security/customassessmentautomations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/customentitystoreassignments": {
      "name": "microsoft.security/customentitystoreassignments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/datascanners": {
      "name": "microsoft.security/datascanners",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/iotsecuritysolutions": {
      "name": "microsoft.security/iotsecuritysolutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/privatelinks": {
      "name": "microsoft.security/privatelinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/securityconnectors": {
      "name": "microsoft.security/securityconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/standards": {
      "name": "microsoft.security/standards",
      "tables": [
        "resources"
      ]
    },
    "microsoft.security/vmscanners": {
      "name": "microsoft.security/vmscanners",
      "tables": [
        "resources"
      ]
    },
    "microsoft.securitycopilot/capacities": {
      "name": "microsoft.securitycopilot/capacities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.securitydetonation/chambers": {
      "name": "microsoft.securitydetonation/chambers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.securitydevops/azuredevopsconnectors": {
      "name": "microsoft.securitydevops/azuredevopsconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.securitydevops/githubconnectors": {
      "name": "microsoft.securitydevops/githubconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.securitydevops/gitlabconnectors": {
      "name": "microsoft.securitydevops/gitlabconnectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.securityplatform/accountlinks": {
      "name": "microsoft.securityplatform/accountlinks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sentinelplatformservices/sentinelplatformservices": {
      "name": "microsoft.sentinelplatformservices/sentinelplatformservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicebus/namespaces": {
      "name": "microsoft.servicebus/namespaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabric/clusters": {
      "name": "microsoft.servicefabric/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabric/containergroupsets": {
      "name": "microsoft.servicefabric/containergroupsets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabric/managedclusters": {
      "name": "microsoft.servicefabric/managedclusters",
      "tables": [
        "resources",
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabricmesh/applications": {
      "name": "microsoft.servicefabricmesh/applications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabricmesh/gateways": {
      "name": "microsoft.servicefabricmesh/gateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabricmesh/networks": {
      "name": "microsoft.servicefabricmesh/networks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabricmesh/secrets": {
      "name": "microsoft.servicefabricmesh/secrets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicefabricmesh/volumes": {
      "name": "microsoft.servicefabricmesh/volumes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicenetworking/trafficcontrollers": {
      "name": "microsoft.servicenetworking/trafficcontrollers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicenetworking/trafficcontrollers/associations": {
      "name": "microsoft.servicenetworking/trafficcontrollers/associations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicenetworking/trafficcontrollers/frontends": {
      "name": "microsoft.servicenetworking/trafficcontrollers/frontends",
      "tables": [
        "resources"
      ]
    },
    "microsoft.servicenetworking/trafficcontrollers/securitypolicies": {
      "name": "microsoft.servicenetworking/trafficcontrollers/securitypolicies",
      "tables": [
        "resources"
      ]
    },
    "microsoft.serviceshub/connectors": {
      "name": "microsoft.serviceshub/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.signalrservice/signalr": {
      "name": "microsoft.signalrservice/signalr",
      "tables": [
        "resources"
      ]
    },
    "microsoft.signalrservice/signalr/replicas": {
      "name": "microsoft.signalrservice/signalr/replicas",
      "tables": [
        "resources"
      ]
    },
    "microsoft.signalrservice/webpubsub": {
      "name": "microsoft.signalrservice/webpubsub",
      "tables": [
        "resources"
      ]
    },
    "microsoft.signalrservice/webpubsub/replicas": {
      "name": "microsoft.signalrservice/webpubsub/replicas",
      "tables": [
        "resources"
      ]
    },
    "microsoft.singularity/accounts": {
      "name": "microsoft.singularity/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.skytap/nodes": {
      "name": "microsoft.skytap/nodes",
      "tables": [
        "resources"
      ]
    },
    "microsoft.softwareplan/softwarelicenses": {
      "name": "microsoft.softwareplan/softwarelicenses",
      "tables": [
        "resources"
      ]
    },
    "microsoft.softwareplan/softwaresubscriptions": {
      "name": "microsoft.softwareplan/softwaresubscriptions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.solutions/appliancedefinitions": {
      "name": "microsoft.solutions/appliancedefinitions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.solutions/appliances": {
      "name": "microsoft.solutions/appliances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.solutions/applicationdefinitions": {
      "name": "microsoft.solutions/applicationdefinitions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.solutions/applications": {
      "name": "microsoft.solutions/applications",
      "tables": [
        "resources"
      ]
    },
    "microsoft.solutions/jitrequests": {
      "name": "microsoft.solutions/jitrequests",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sovereign/landingzoneaccounts": {
      "name": "microsoft.sovereign/landingzoneaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.spoolservice/spools": {
      "name": "microsoft.spoolservice/spools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/instancepools": {
      "name": "microsoft.sql/instancepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/managedinstances": {
      "name": "microsoft.sql/managedinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/managedinstances/databases": {
      "name": "microsoft.sql/managedinstances/databases",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/servers": {
      "name": "microsoft.sql/servers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/servers/databases": {
      "name": "microsoft.sql/servers/databases",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/servers/elasticpools": {
      "name": "microsoft.sql/servers/elasticpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/servers/jobaccounts": {
      "name": "microsoft.sql/servers/jobaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/servers/jobagents": {
      "name": "microsoft.sql/servers/jobagents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sql/virtualclusters": {
      "name": "microsoft.sql/virtualclusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sqlvirtualmachine/sqlvirtualmachinegroups": {
      "name": "microsoft.sqlvirtualmachine/sqlvirtualmachinegroups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sqlvirtualmachine/sqlvirtualmachines": {
      "name": "microsoft.sqlvirtualmachine/sqlvirtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.standbypool/standbycontainergrouppools": {
      "name": "microsoft.standbypool/standbycontainergrouppools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.standbypool/standbyvirtualmachinepools": {
      "name": "microsoft.standbypool/standbyvirtualmachinepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storage/datamovers": {
      "name": "microsoft.storage/datamovers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storage/storageaccounts": {
      "name": "microsoft.storage/storageaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storage/storageaccounts/connectors": {
      "name": "microsoft.storage/storageaccounts/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storage/storageaccounts/datashares": {
      "name": "microsoft.storage/storageaccounts/datashares",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storage/storagetasks": {
      "name": "microsoft.storage/storagetasks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storageactions/storagetasks": {
      "name": "microsoft.storageactions/storagetasks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagecache/amlfilesystems": {
      "name": "microsoft.storagecache/amlfilesystems",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagecache/caches": {
      "name": "microsoft.storagecache/caches",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagediscovery/storagediscoveryworkspaces": {
      "name": "microsoft.storagediscovery/storagediscoveryworkspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storageinsights/storagecollectionrules": {
      "name": "microsoft.storageinsights/storagecollectionrules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagemover/storagemovers": {
      "name": "microsoft.storagemover/storagemovers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagepool/diskpools": {
      "name": "microsoft.storagepool/diskpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagesync/storagesyncservices": {
      "name": "microsoft.storagesync/storagesyncservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storagetasks/storagetasks": {
      "name": "microsoft.storagetasks/storagetasks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.storsimple/managers": {
      "name": "microsoft.storsimple/managers",
      "tables": [
        "resources"
      ]
    },
    "microsoft.streamanalytics/clusters": {
      "name": "microsoft.streamanalytics/clusters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.streamanalytics/streamingjobs": {
      "name": "microsoft.streamanalytics/streamingjobs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.sustainabilityservices/calculations": {
      "name": "microsoft.sustainabilityservices/calculations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.swiftlet/virtualmachines": {
      "name": "microsoft.swiftlet/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.swiftlet/virtualmachinesnapshots": {
      "name": "microsoft.swiftlet/virtualmachinesnapshots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.symphony/instances": {
      "name": "microsoft.symphony/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.symphony/solutions": {
      "name": "microsoft.symphony/solutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.symphony/targets": {
      "name": "microsoft.symphony/targets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.synapse/privatelinkhubs": {
      "name": "microsoft.synapse/privatelinkhubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.synapse/workspaces": {
      "name": "microsoft.synapse/workspaces",
      "tables": [
        "resources"
      ]
    },
    "microsoft.synapse/workspaces/bigdatapools": {
      "name": "microsoft.synapse/workspaces/bigdatapools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.synapse/workspaces/kustopools": {
      "name": "microsoft.synapse/workspaces/kustopools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.synapse/workspaces/sqlpools": {
      "name": "microsoft.synapse/workspaces/sqlpools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.syntex/accounts": {
      "name": "microsoft.syntex/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.syntex/documentprocessors": {
      "name": "microsoft.syntex/documentprocessors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.systemintegritymonitoring/simhubs": {
      "name": "microsoft.systemintegritymonitoring/simhubs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.systemintegritymonitoring/simhubs/deviceprofiles": {
      "name": "microsoft.systemintegritymonitoring/simhubs/deviceprofiles",
      "tables": [
        "resources"
      ]
    },
    "microsoft.testbase/testbaseaccounts": {
      "name": "microsoft.testbase/testbaseaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.testbase/testbaseaccounts/packages": {
      "name": "microsoft.testbase/testbaseaccounts/packages",
      "tables": [
        "resources"
      ]
    },
    "microsoft.throttling/throttlingaccounts": {
      "name": "microsoft.throttling/throttlingaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.throttling/throttlingaccounts/rules": {
      "name": "microsoft.throttling/throttlingaccounts/rules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.timeseriesinsights/environments": {
      "name": "microsoft.timeseriesinsights/environments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.timeseriesinsights/environments/eventsources": {
      "name": "microsoft.timeseriesinsights/environments/eventsources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.timeseriesinsights/environments/referencedatasets": {
      "name": "microsoft.timeseriesinsights/environments/referencedatasets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/activations": {
      "name": "microsoft.toolchainorchestrator/activations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/campaigns": {
      "name": "microsoft.toolchainorchestrator/campaigns",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/campaigns/versions": {
      "name": "microsoft.toolchainorchestrator/campaigns/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/catalogs": {
      "name": "microsoft.toolchainorchestrator/catalogs",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/catalogs/versions": {
      "name": "microsoft.toolchainorchestrator/catalogs/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/diagnostics": {
      "name": "microsoft.toolchainorchestrator/diagnostics",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/instances": {
      "name": "microsoft.toolchainorchestrator/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/instances/versions": {
      "name": "microsoft.toolchainorchestrator/instances/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/solutions": {
      "name": "microsoft.toolchainorchestrator/solutions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/solutions/versions": {
      "name": "microsoft.toolchainorchestrator/solutions/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/targets": {
      "name": "microsoft.toolchainorchestrator/targets",
      "tables": [
        "resources"
      ]
    },
    "microsoft.toolchainorchestrator/targets/versions": {
      "name": "microsoft.toolchainorchestrator/targets/versions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.updatemanager/inventoryconfigurations": {
      "name": "microsoft.updatemanager/inventoryconfigurations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.updatemanager/updaterules": {
      "name": "microsoft.updatemanager/updaterules",
      "tables": [
        "resources"
      ]
    },
    "microsoft.usagebilling/accounts": {
      "name": "microsoft.usagebilling/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.verifiedid/authorities": {
      "name": "microsoft.verifiedid/authorities",
      "tables": [
        "resources"
      ]
    },
    "microsoft.videoindexer/accounts": {
      "name": "microsoft.videoindexer/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.virtualmachineimages/imagetemplates": {
      "name": "microsoft.virtualmachineimages/imagetemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.visualstudio/account": {
      "name": "microsoft.visualstudio/account",
      "tables": [
        "resources"
      ]
    },
    "microsoft.visualstudio/account/extension": {
      "name": "microsoft.visualstudio/account/extension",
      "tables": [
        "resources"
      ]
    },
    "microsoft.visualstudio/account/project": {
      "name": "microsoft.visualstudio/account/project",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vmware/arczones": {
      "name": "microsoft.vmware/arczones",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vmware/resourcepools": {
      "name": "microsoft.vmware/resourcepools",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vmware/vcenters": {
      "name": "microsoft.vmware/vcenters",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vmware/virtualmachines": {
      "name": "microsoft.vmware/virtualmachines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vmware/virtualmachinetemplates": {
      "name": "microsoft.vmware/virtualmachinetemplates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vmware/virtualnetworks": {
      "name": "microsoft.vmware/virtualnetworks",
      "tables": [
        "resources"
      ]
    },
    "microsoft.voiceservices/communicationsgateways": {
      "name": "microsoft.voiceservices/communicationsgateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.voiceservices/communicationsgateways/contacts": {
      "name": "microsoft.voiceservices/communicationsgateways/contacts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.voiceservices/communicationsgateways/testlines": {
      "name": "microsoft.voiceservices/communicationsgateways/testlines",
      "tables": [
        "resources"
      ]
    },
    "microsoft.voiceservices/operatorvoicemailinstances": {
      "name": "microsoft.voiceservices/operatorvoicemailinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vsonline/accounts": {
      "name": "microsoft.vsonline/accounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.vsonline/plans": {
      "name": "microsoft.vsonline/plans",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/apimanagementaccounts": {
      "name": "microsoft.web/apimanagementaccounts",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/apimanagementaccounts/apis": {
      "name": "microsoft.web/apimanagementaccounts/apis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/certificates": {
      "name": "microsoft.web/certificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/connectiongateways": {
      "name": "microsoft.web/connectiongateways",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/connections": {
      "name": "microsoft.web/connections",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/containerapps": {
      "name": "microsoft.web/containerapps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/customapis": {
      "name": "microsoft.web/customapis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/hostingenvironments": {
      "name": "microsoft.web/hostingenvironments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/kubeenvironments": {
      "name": "microsoft.web/kubeenvironments",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/serverfarms": {
      "name": "microsoft.web/serverfarms",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/sites": {
      "name": "microsoft.web/sites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/sites/certificates": {
      "name": "microsoft.web/sites/certificates",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/sites/slots": {
      "name": "microsoft.web/sites/slots",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/staticsites": {
      "name": "microsoft.web/staticsites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.web/workerapps": {
      "name": "microsoft.web/workerapps",
      "tables": [
        "resources"
      ]
    },
    "microsoft.weightsandbiases/instances": {
      "name": "microsoft.weightsandbiases/instances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.whiteboxcadlprovider/whiteboxresources": {
      "name": "microsoft.whiteboxcadlprovider/whiteboxresources",
      "tables": [
        "resources"
      ]
    },
    "microsoft.windows365/cloudpcdelegatedmsis": {
      "name": "microsoft.windows365/cloudpcdelegatedmsis",
      "tables": [
        "resources"
      ]
    },
    "microsoft.windowsesu/multipleactivationkeys": {
      "name": "microsoft.windowsesu/multipleactivationkeys",
      "tables": [
        "resources"
      ]
    },
    "microsoft.windowsiot/deviceservices": {
      "name": "microsoft.windowsiot/deviceservices",
      "tables": [
        "resources"
      ]
    },
    "microsoft.windowspushnotificationservices/registrations": {
      "name": "microsoft.windowspushnotificationservices/registrations",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloadbuilder/migrationagents": {
      "name": "microsoft.workloadbuilder/migrationagents",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloadbuilder/workloads": {
      "name": "microsoft.workloadbuilder/workloads",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/connectors": {
      "name": "microsoft.workloads/connectors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/connectors/acssbackups": {
      "name": "microsoft.workloads/connectors/acssbackups",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/connectors/amsinsights": {
      "name": "microsoft.workloads/connectors/amsinsights",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/connectors/sapvirtualinstancemonitors": {
      "name": "microsoft.workloads/connectors/sapvirtualinstancemonitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/epicvirtualinstances": {
      "name": "microsoft.workloads/epicvirtualinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/epicvirtualinstances/databaseinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/databaseinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/epicvirtualinstances/hyperspacewebinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/hyperspacewebinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/epicvirtualinstances/presentationinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/presentationinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/epicvirtualinstances/sharedinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/sharedinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/epicvirtualinstances/wssinstances": {
      "name": "microsoft.workloads/epicvirtualinstances/wssinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/insights": {
      "name": "microsoft.workloads/insights",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/instancegroupmonitors": {
      "name": "microsoft.workloads/instancegroupmonitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/instancehealthdefinitions": {
      "name": "microsoft.workloads/instancehealthdefinitions",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/instancemonitors": {
      "name": "microsoft.workloads/instancemonitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/monitors": {
      "name": "microsoft.workloads/monitors",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/oraclevirtualinstances": {
      "name": "microsoft.workloads/oraclevirtualinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/oraclevirtualinstances/databaseinstances": {
      "name": "microsoft.workloads/oraclevirtualinstances/databaseinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/phpworkloads": {
      "name": "microsoft.workloads/phpworkloads",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/sapdiscoverysites": {
      "name": "microsoft.workloads/sapdiscoverysites",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/sapdiscoverysites/sapinstances": {
      "name": "microsoft.workloads/sapdiscoverysites/sapinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/sapvirtualinstances": {
      "name": "microsoft.workloads/sapvirtualinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/sapvirtualinstances/applicationinstances": {
      "name": "microsoft.workloads/sapvirtualinstances/applicationinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/sapvirtualinstances/centralinstances": {
      "name": "microsoft.workloads/sapvirtualinstances/centralinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/sapvirtualinstances/databaseinstances": {
      "name": "microsoft.workloads/sapvirtualinstances/databaseinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/virtualinstances": {
      "name": "microsoft.workloads/virtualinstances",
      "tables": [
        "resources"
      ]
    },
    "microsoft.workloads/virtualinstances/components": {
      "name": "microsoft.workloads/virtualinstances/components",
      "tables": [
        "resources"
      ]
    },
    "microsoft.zerotrustsegmentation/segmentationmanagers": {
      "name": "microsoft.zerotrustsegmentation/segmentationmanagers",
      "tables": [
        "resources"
      ]
    },
    "microsoftdnsagent": {
      "name": "microsoftdnsagent",
      "tables": [
        "resources"
      ]
    },
    "microsoftmonitoringagent": {
      "name": "microsoftmonitoringagent",
      "tables": [
        "resources"
      ]
    },
    "mongodb.atlas/organizations": {
      "name": "mongodb.atlas/organizations",
      "tables": [
        "resources"
      ]
    },
    "neon.postgres/organizations": {
      "name": "neon.postgres/organizations",
      "tables": [
        "resources"
      ]
    },
    "networkwatcheragentlinux": {
      "name": "networkwatcheragentlinux",
      "tables": [
        "resources"
      ]
    },
    "networkwatcheragentwindows": {
      "name": "networkwatcheragentwindows",
      "tables": [
        "resources"
      ]
    },
    "newrelic.observability/monitors": {
      "name": "newrelic.observability/monitors",
      "tables": [
        "resources"
      ]
    },
    "nginx.nginxplus/nginxdeployments": {
      "name": "nginx.nginxplus/nginxdeployments",
      "tables": [
        "resources"
      ]
    },
    "omsagentforlinux": {
      "name": "omsagentforlinux",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/autonomousdatabases": {
      "name": "oracle.database/autonomousdatabases",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/cloudexadatainfrastructures": {
      "name": "oracle.database/cloudexadatainfrastructures",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/cloudvmclusters": {
      "name": "oracle.database/cloudvmclusters",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/dbsystems": {
      "name": "oracle.database/dbsystems",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/exadbvmclusters": {
      "name": "oracle.database/exadbvmclusters",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/exascaledbstoragevaults": {
      "name": "oracle.database/exascaledbstoragevaults",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/networkanchors": {
      "name": "oracle.database/networkanchors",
      "tables": [
        "resources"
      ]
    },
    "oracle.database/resourceanchors": {
      "name": "oracle.database/resourceanchors",
      "tables": [
        "resources"
      ]
    },
    "paloaltonetworks.cloudngfw/firewalls": {
      "name": "paloaltonetworks.cloudngfw/firewalls",
      "tables": [
        "resources"
      ]
    },
    "paloaltonetworks.cloudngfw/localrulestacks": {
      "name": "paloaltonetworks.cloudngfw/localrulestacks",
      "tables": [
        "resources"
      ]
    },
    "pinecone.vectordb/organizations": {
      "name": "pinecone.vectordb/organizations",
      "tables": [
        "resources"
      ]
    },
    "providers.test/softdeletesupportedresources": {
      "name": "providers.test/softdeletesupportedresources",
      "tables": [
        "resources"
      ]
    },
    "providers.test/statefulibizaengines": {
      "name": "providers.test/statefulibizaengines",
      "tables": [
        "resources"
      ]
    },
    "providers.test/statefulresources": {
      "name": "providers.test/statefulresources",
      "tables": [
        "resources"
      ]
    },
    "providers.test/statefulresources/nestedresources": {
      "name": "providers.test/statefulresources/nestedresources",
      "tables": [
        "resources"
      ]
    },
    "providers.test/statelessresources": {
      "name": "providers.test/statelessresources",
      "tables": [
        "resources"
      ]
    },
    "providers.test/trackedresources": {
      "name": "providers.test/trackedresources",
      "tables": [
        "resources"
      ]
    },
    "purestorage.block/reservations": {
      "name": "purestorage.block/reservations",
      "tables": [
        "resources"
      ]
    },
    "purestorage.block/storagepools": {
      "name": "purestorage.block/storagepools",
      "tables": [
        "resources"
      ]
    },
    "purestorage.block/volumepools": {
      "name": "purestorage.block/volumepools",
      "tables": [
        "resources"
      ]
    },
    "qumulo.qaas/storages": {
      "name": "qumulo.qaas/storages",
      "tables": [
        "resources"
      ]
    },
    "qumulo.storage/filesystems": {
      "name": "qumulo.storage/filesystems",
      "tables": [
        "resources"
      ]
    },
    "sendgrid.email/accounts": {
      "name": "sendgrid.email/accounts",
      "tables": [
        "resources"
      ]
    },
    "splitio.experimentation/experimentationworkspaces": {
      "name": "splitio.experimentation/experimentationworkspaces",
      "tables": [
        "resources"
      ]
    },
    "sqlassessmentplus": {
      "name": "sqlassessmentplus",
      "tables": [
        "resources"
      ]
    },
    "telemetryanddiagnostics": {
      "name": "telemetryanddiagnostics",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/fusiongroups": {
      "name": "wandisco.fusion/fusiongroups",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/fusiongroups/azurezones": {
      "name": "wandisco.fusion/fusiongroups/azurezones",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/fusiongroups/azurezones/plugins": {
      "name": "wandisco.fusion/fusiongroups/azurezones/plugins",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/fusiongroups/managedonpremzones": {
      "name": "wandisco.fusion/fusiongroups/managedonpremzones",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/fusiongroups/replicationrules": {
      "name": "wandisco.fusion/fusiongroups/replicationrules",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators": {
      "name": "wandisco.fusion/migrators",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/datatransferagents": {
      "name": "wandisco.fusion/migrators/datatransferagents",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/exclusiontemplates": {
      "name": "wandisco.fusion/migrators/exclusiontemplates",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/livedatamigrations": {
      "name": "wandisco.fusion/migrators/livedatamigrations",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/metadatamigrations": {
      "name": "wandisco.fusion/migrators/metadatamigrations",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/metadatatargets": {
      "name": "wandisco.fusion/migrators/metadatatargets",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/pathmappings": {
      "name": "wandisco.fusion/migrators/pathmappings",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/targets": {
      "name": "wandisco.fusion/migrators/targets",
      "tables": [
        "resources"
      ]
    },
    "wandisco.fusion/migrators/verifications": {
      "name": "wandisco.fusion/migrators/verifications",
      "tables": [
        "resources"
      ]
    },
    "windows": {
      "name": "windows",
      "tables": [
        "resources"
      ]
    },
    "windowsagent.azuresecuritycenter": {
      "name": "windowsagent.azuresecuritycenter",
      "tables": [
        "resources"
      ]
    },
    "windowsagent.sqlserver": {
      "name": "windowsagent.sqlserver",
      "tables": [
        "resources"
      ]
    },
    "windowsclientassessmentplus": {
      "name": "windowsclientassessmentplus",
      "tables": [
        "resources"
      ]
    },
    "windowsopenssh": {
      "name": "windowsopenssh",
      "tables": [
        "resources"
      ]
    },
    "windowsosupdateextension": {
      "name": "windowsosupdateextension",
      "tables": [
        "resources"
      ]
    },
    "windowspatchextension": {
      "name": "windowspatchextension",
      "tables": [
        "resources"
      ]
    },
    "windowsserverassessment": {
      "name": "windowsserverassessment",
      "tables": [
        "resources"
      ]
    },
    "microsoft.authorization/locks/providers/assessments/governanceassignments": {
      "name": "microsoft.authorization/locks/providers/assessments/governanceassignments",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.authorization/roleassignments/providers/assessments/governanceassignments": {
      "name": "microsoft.authorization/roleassignments/providers/assessments/governanceassignments",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/apicollections": {
      "name": "microsoft.security/apicollections",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/apicollections/apiendpoints": {
      "name": "microsoft.security/apicollections/apiendpoints",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/assessments": {
      "name": "microsoft.security/assessments",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/assessments/governanceassignments": {
      "name": "microsoft.security/assessments/governanceassignments",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/assessments/subassessments": {
      "name": "microsoft.security/assessments/subassessments",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/attackpaths": {
      "name": "microsoft.security/attackpaths",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/governancerules": {
      "name": "microsoft.security/governancerules",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/healthreports": {
      "name": "microsoft.security/healthreports",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/insights": {
      "name": "microsoft.security/insights",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/integrations": {
      "name": "microsoft.security/integrations",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/iotalerts": {
      "name": "microsoft.security/iotalerts",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/locations/alerts": {
      "name": "microsoft.security/locations/alerts",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/locations/attackpaths": {
      "name": "microsoft.security/locations/attackpaths",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/pricings": {
      "name": "microsoft.security/pricings",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/regulatorycompliancestandards": {
      "name": "microsoft.security/regulatorycompliancestandards",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols": {
      "name": "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments": {
      "name": "microsoft.security/regulatorycompliancestandards/regulatorycompliancecontrols/regulatorycomplianceassessments",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securescores": {
      "name": "microsoft.security/securescores",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securescores/securescorecontrols": {
      "name": "microsoft.security/securescores/securescorecontrols",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops": {
      "name": "microsoft.security/securityconnectors/devops",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/azuredevopsorgs": {
      "name": "microsoft.security/securityconnectors/devops/azuredevopsorgs",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects": {
      "name": "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects/repos": {
      "name": "microsoft.security/securityconnectors/devops/azuredevopsorgs/projects/repos",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/githubowners": {
      "name": "microsoft.security/securityconnectors/devops/githubowners",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/githubowners/repos": {
      "name": "microsoft.security/securityconnectors/devops/githubowners/repos",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/gitlabgroups": {
      "name": "microsoft.security/securityconnectors/devops/gitlabgroups",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/securityconnectors/devops/gitlabgroups/projects": {
      "name": "microsoft.security/securityconnectors/devops/gitlabgroups/projects",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/softwareinventories": {
      "name": "microsoft.security/softwareinventories",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/softwareinventory": {
      "name": "microsoft.security/softwareinventory",
      "tables": [
        "securityresources"
      ]
    },
    "microsoft.security/standardassignments": {
      "name": "microsoft.security/standardassignments",
      "tables": [
        "securityresources"
      ]
    },
    "applications": {
      "name": "applications",
      "tables": [
        "servicefabricresources"
      ]
    },
    "applicationtypes": {
      "name": "applicationtypes",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/clusters/applications": {
      "name": "microsoft.servicefabric/clusters/applications",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/clusters/applications/services": {
      "name": "microsoft.servicefabric/clusters/applications/services",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/clusters/applicationtypes": {
      "name": "microsoft.servicefabric/clusters/applicationtypes",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/clusters/applicationtypes/versions": {
      "name": "microsoft.servicefabric/clusters/applicationtypes/versions",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/managedclusters/applications": {
      "name": "microsoft.servicefabric/managedclusters/applications",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/managedclusters/applications/services": {
      "name": "microsoft.servicefabric/managedclusters/applications/services",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/managedclusters/applicationtypes": {
      "name": "microsoft.servicefabric/managedclusters/applicationtypes",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/managedclusters/applicationtypes/versions": {
      "name": "microsoft.servicefabric/managedclusters/applicationtypes/versions",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.servicefabric/managedclusters/nodetypes": {
      "name": "microsoft.servicefabric/managedclusters/nodetypes",
      "tables": [
        "servicefabricresources"
      ]
    },
    "services": {
      "name": "services",
      "tables": [
        "servicefabricresources"
      ]
    },
    "versions": {
      "name": "versions",
      "tables": [
        "servicefabricresources"
      ]
    },
    "microsoft.resourcehealth/events": {
      "name": "microsoft.resourcehealth/events",
      "tables": [
        "servicehealthresources"
      ]
    },
    "microsoft.resourcehealth/events/impactedresources": {
      "name": "microsoft.resourcehealth/events/impactedresources",
      "tables": [
        "servicehealthresources"
      ]
    },
    "microsoft.compute/locations/sharedgalleries": {
      "name": "microsoft.compute/locations/sharedgalleries",
      "tables": [
        "sharedgalleryresources"
      ]
    },
    "microsoft.compute/skualternativespotvmsize/location": {
      "name": "microsoft.compute/skualternativespotvmsize/location",
      "tables": [
        "spotresources"
      ]
    },
    "microsoft.compute/skuspotevictionrate/location": {
      "name": "microsoft.compute/skuspotevictionrate/location",
      "tables": [
        "spotresources"
      ]
    },
    "microsoft.compute/skuspotpricehistory/ostype/location": {
      "name": "microsoft.compute/skuspotpricehistory/ostype/location",
      "tables": [
        "spotresources"
      ]
    },
    "microsoft.resources/tagnamespaces": {
      "name": "microsoft.resources/tagnamespaces",
      "tables": [
        "tagsresources"
      ]
    },
    "microsoft.resources/tagnamespaces/tagnames": {
      "name": "microsoft.resources/tagnamespaces/tagnames",
      "tables": [
        "tagsresources"
      ]
    },
    "microsoft.resources/tagnamespaces/tags": {
      "name": "microsoft.resources/tagnamespaces/tags",
      "tables": [
        "tagsresources"
      ]
    }
  },
  "keywords": [
    {
      "name": "accumulate",
      "category": "Keyword"
    },
    {
      "name": "and",
      "category": "Keyword"
    },
    {
      "name": "anomalychart",
      "category": "Keyword"
    },
    {
      "name": "areachart",
      "category": "Keyword"
    },
    {
      "name": "asc",
      "category": "Keyword"
    },
    {
      "name": "barchart",
      "category": "Keyword"
    },
    {
      "name": "best_effort",
      "category": "Keyword"
    },
    {
      "name": "bin",
      "category": "Keyword"
    },
    {
      "name": "bool",
      "category": "Keyword"
    },
    {
      "name": "boolean",
      "category": "Keyword"
    },
    {
      "name": "by",
      "category": "Keyword"
    },
    {
      "name": "byte",
      "category": "Keyword"
    },
    {
      "name": "cancel",
      "category": "Keyword"
    },
    {
      "name": "card",
      "category": "Keyword"
    },
    {
      "name": "char",
      "category": "Keyword"
    },
    {
      "name": "columnchart",
      "category": "Keyword"
    },
    {
      "name": "cycles",
      "category": "Keyword"
    },
    {
      "name": "date",
      "category": "Keyword"
    },
    {
      "name": "datetime",
      "category": "Keyword"
    },
    {
      "name": "decimal",
      "category": "Keyword"
    },
    {
      "name": "default",
      "category": "Keyword"
    },
    {
      "name": "desc",
      "category": "Keyword"
    },
    {
      "name": "double",
      "category": "Keyword"
    },
    {
      "name": "dynamic",
      "category": "Keyword"
    },
    {
      "name": "earliest",
      "category": "Keyword"
    },
    {
      "name": "edges",
      "category": "Keyword"
    },
    {
      "name": "external_data",
      "category": "Keyword"
    },
    {
      "name": "filter",
      "category": "Keyword"
    },
    {
      "name": "first",
      "category": "Keyword"
    },
    {
      "name": "flags",
      "category": "Keyword"
    },
    {
      "name": "float",
      "category": "Keyword"
    },
    {
      "name": "from",
      "category": "Keyword"
    },
    {
      "name": "granny-asc",
      "category": "Keyword"
    },
    {
      "name": "granny-desc",
      "category": "Keyword"
    },
    {
      "name": "graph",
      "category": "Keyword"
    },
    {
      "name": "graph-where-edges",
      "category": "Keyword"
    },
    {
      "name": "graph-where-nodes",
      "category": "Keyword"
    },
    {
      "name": "guid",
      "category": "Keyword"
    },
    {
      "name": "id",
      "category": "Keyword"
    },
    {
      "name": "int",
      "category": "Keyword"
    },
    {
      "name": "int16",
      "category": "Keyword"
    },
    {
      "name": "int32",
      "category": "Keyword"
    },
    {
      "name": "int64",
      "category": "Keyword"
    },
    {
      "name": "int8",
      "category": "Keyword"
    },
    {
      "name": "isfuzzy",
      "category": "Keyword"
    },
    {
      "name": "journal",
      "category": "Keyword"
    },
    {
      "name": "kind",
      "category": "Keyword"
    },
    {
      "name": "ladderchart",
      "category": "Keyword"
    },
    {
      "name": "last",
      "category": "Keyword"
    },
    {
      "name": "latest",
      "category": "Keyword"
    },
    {
      "name": "linechart",
      "category": "Keyword"
    },
    {
      "name": "long",
      "category": "Keyword"
    },
    {
      "name": "of",
      "category": "Keyword"
    },
    {
      "name": "on",
      "category": "Keyword"
    },
    {
      "name": "optional",
      "category": "Keyword"
    },
    {
      "name": "or",
      "category": "Keyword"
    },
    {
      "name": "output",
      "category": "Keyword"
    },
    {
      "name": "pathformat",
      "category": "Keyword"
    },
    {
      "name": "piechart",
      "category": "Keyword"
    },
    {
      "name": "pivotchart",
      "category": "Keyword"
    },
    {
      "name": "plotly",
      "category": "Keyword"
    },
    {
      "name": "project-smart",
      "category": "Keyword"
    },
    {
      "name": "real",
      "category": "Keyword"
    },
    {
      "name": "regex",
      "category": "Keyword"
    },
    {
      "name": "relaxed",
      "category": "Keyword"
    },
    {
      "name": "restrict",
      "category": "Keyword"
    },
    {
      "name": "scatterchart",
      "category": "Keyword"
    },
    {
      "name": "stackedareachart",
      "category": "Keyword"
    },
    {
      "name": "string",
      "category": "Keyword"
    },
    {
      "name": "time",
      "category": "Keyword"
    },
    {
      "name": "timechart",
      "category": "Keyword"
    },
    {
      "name": "timeline",
      "category": "Keyword"
    },
    {
      "name": "timepivot",
      "category": "Keyword"
    },
    {
      "name": "timespan",
      "category": "Keyword"
    },
    {
      "name": "title",
      "category": "Keyword"
    },
    {
      "name": "to",
      "category": "Keyword"
    },
    {
      "name": "toscalar",
      "category": "Keyword"
    },
    {
      "name": "treemap",
      "category": "Keyword"
    },
    {
      "name": "typeof",
      "category": "Keyword"
    },
    {
      "name": "uint",
      "category": "Keyword"
    },
    {
      "name": "uint16",
      "category": "Keyword"
    },
    {
      "name": "uint32",
      "category": "Keyword"
    },
    {
      "name": "uint64",
      "category": "Keyword"
    },
    {
      "name": "uint8",
      "category": "Keyword"
    },
    {
      "name": "ulong",
      "category": "Keyword"
    },
    {
      "name": "uuid",
      "category": "Keyword"
    }
  ],
  "operators": [
    {
      "name": "as",
      "category": "Operator",
      "documentation": {
        "title": "as",
        "description": "Binds a name to the operator's input tabular expression. This operator allows the query to reference the value of the tabular expression multiple times without breaking the query and binding a name through the let statement.\n\nTo optimize multiple uses of the `as` operator within a single query, see Named expressions.",
        "syntax": "*T* `|` `as` [`hint.materialized` `=` *Materialized*] *Name*",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*T*| `string` |  *True* | The tabular expression to rename.|\n| *Name*| `string` |  *True* | The temporary name for the tabular expression.|\n| *`hint.materialized`*| `bool` |  | If *Materialized* is set to `true`, the value of the tabular expression output is wrapped by a materialize() function call. Otherwise, the value is recalculated on every reference.|\n\n> \n>\n> * The name given by `as` is used in the `withsource=` column of union, the `source_` column of find, and the `$table` column of search.\n> * The tabular expression named using the operator in a join's outer tabular input (`$left`) can also be used in the join's tabular inner input (`$right`).",
        "example": "range x from 1 to 5 step 1 \n| as T1 \n| union withsource=TableName (range x from 1 to 5 step 1 | as T2)\n\nunion withsource=TableName (range x from 1 to 5 step 1 | as T1), (range x from 1 to 5 step 1 | as T2)\n\nMyLogTable  \n| where type == \"Event\"\n| as T\n| where Name == \"Start\"\n| join (\n    T\n    | where Name == \"Stop\"\n) on ActivityId",
        "sourceLength": 3500,
        "url": "https://learn.microsoft.com/en-us/kusto/query/as-operator"
      }
    },
    {
      "name": "between",
      "category": "Operator",
      "documentation": {
        "title": "between",
        "description": "Filters a record set for data matching the values in an inclusive range.\n\n`between` can operate on any numeric, datetime, or timespan expression.",
        "syntax": "*T* `|` `where` *expr* `between` `(`*leftRange*` .. `*rightRange*`)`",
        "returnInfo": "Rows in *T* for which the predicate of (*expr* >= *leftRange* and *expr* <= *rightRange*) evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* |  The tabular input whose records are to be matched. For example, the table name. |\n| *expr* | scalar |  *True* |  The expression used to filter. |\n| *leftRange* | int, long, real, or datetime |  *True* | The expression of the left range. The range is inclusive.|\n| *rightRange* | int, long, real, datetime, or timespan |  *True* | The expression of the right range. The range is inclusive.<br><br/>This value can only be of type timespan if *expr* and *leftRange* are both of type `datetime`. See examples.|",
        "example": "range x from 1 to 100 step 1\n| where x between (50 .. 55)\n\nStormEvents\n| where StartTime between (datetime(2007-07-27) .. datetime(2007-07-30))\n| count\n\nStormEvents\n| where StartTime between (datetime(2007-12-01T01:30:00) .. datetime(2007-12-01T08:00:00))\n| count\n\nStormEvents\n| where StartTime between (datetime(2007-07-27) .. 3d)\n| count",
        "sourceLength": 3886,
        "url": "https://learn.microsoft.com/en-us/kusto/query/between-operator"
      }
    },
    {
      "name": "consume",
      "category": "Operator",
      "documentation": {
        "title": "consume",
        "description": "Consumes the tabular data stream handed to the operator.\n\nThe `consume` operator is mostly used for triggering the query side-effect without actually returning\nthe results back to the caller.\n\nThe `consume` operator can be used for estimating the cost of a query without actually delivering the results back to the client.\n(The estimation isn't exact for various reasons; for example, `consume` is calculated distributively, so `T | consume` won't transmit the table's data between the nodes of the cluster.)",
        "syntax": "`consume` [`decodeblocks` `=` *DecodeBlocks*]",
        "returnInfo": "",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *DecodeBlocks* | `bool` | | If set to `true`, or if the request property `perftrace` is set to `true`, the `consume` operator won't just enumerate the records at its input, but actually force each value in those records to be decompressed and decoded.|\n\n### Returns\n\nThe `consume` operator returns the same tabular data stream as its input, but it doesn't return the data to the client.",
        "example": "StormEvents\n| where State == \"TEXAS\"\n| consume",
        "sourceLength": 2504,
        "url": "https://learn.microsoft.com/en-us/kusto/query/consume-operator"
      }
    },
    {
      "name": "contains_cs",
      "category": "Operator",
      "documentation": {
        "title": "contains_cs",
        "description": "Filters a record set for data containing a case-sensitive string. `contains_cs` searches for arbitrary sub-strings rather than terms.",
        "syntax": "*T* `|` `where` *col* `contains_cs` `(`*string*`)`",
        "returnInfo": "Rows in *T* for which *string* is in *col*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The name of the column to check for *string*. |\n| *string* | `string` |  *True* | The case-sensitive string by which to filter the data. |",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State contains_cs \"AS\"",
        "sourceLength": 2198,
        "url": "https://learn.microsoft.com/en-us/kusto/query/contains-cs-operator"
      }
    },
    {
      "name": "contains",
      "category": "Operator",
      "documentation": {
        "title": "contains",
        "description": "Filters a record set for data containing a case-insensitive string. `contains` searches for arbitrary sub-strings rather than terms.",
        "syntax": "*T* `|` `where` *col* `contains_cs` `(`*string*`)`",
        "returnInfo": "Rows in *T* for which *string* is in *col*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The name of the column to check for *string*. |\n| *string* | `string` |  *True* | The case-sensitive string by which to filter the data. |",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State contains \"enn\"\n| where event_count > 10\n| project State, event_count\n| render table",
        "sourceLength": 2461,
        "url": "https://learn.microsoft.com/en-us/kusto/query/contains-operator"
      }
    },
    {
      "name": "count",
      "category": "Operator",
      "documentation": {
        "title": "count",
        "description": "Calculates the number of records in the input record set.",
        "syntax": "*T* `|` `count`",
        "returnInfo": "This function returns a table with a single record and column of type\n`long`. The value of the only cell is the number of records in *T*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be counted. |",
        "example": "StormEvents | count",
        "sourceLength": 1725,
        "url": "https://learn.microsoft.com/en-us/kusto/query/count-operator"
      }
    },
    {
      "name": "datatable",
      "category": "operator",
      "documentation": {
        "title": "datatable",
        "description": "Creates a table whose schema and values are defined in the query itself.\n\n> \n> This operator doesn't have a pipeline input.",
        "syntax": "`datatable(` *ColumnName* `:` *ColumnType* [`,` ...]`)` `[` *ScalarValue* [`,` ...] `]`",
        "returnInfo": "Returns a data table of the given schema and data.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ColumnName*| `string` |  *True* | The name for a column. |\n| *ColumnType* | `string` |  *True* | The type of data in the column.|\n| *ScalarValue* | scalar |  *True* | The value to insert into the table. The total number of values must be a multiple of the number of columns in the table. Each value is assigned to a column based on its position. Specifically, the *n*'th value is assigned to the column at position *n* % *NumColumns*, where *NumColumns* is the total number of columns. |\n\n> \n> The column name and column value pairs define the schema for the table.",
        "example": "datatable(Date:datetime, Event:string, MoreData:dynamic) [\n    datetime(1910-06-11), \"Born\", dynamic({\"key1\":\"value1\", \"key2\":\"value2\"}),\n    datetime(1930-01-01), \"Enters Ecole Navale\", dynamic({\"key1\":\"value3\", \"key2\":\"value4\"}),\n    datetime(1953-01-01), \"Published first book\", dynamic({\"key1\":\"value5\", \"key2\":\"value6\"}),\n    datetime(1997-06-25), \"Died\", dynamic({\"key1\":\"value7\", \"key2\":\"value8\"}),\n]\n| where strlen(Event) > 4\n| extend key2 = MoreData.key2",
        "sourceLength": 3163,
        "url": "https://learn.microsoft.com/en-us/kusto/query/datatable-operator"
      }
    },
    {
      "name": "distinct",
      "category": "Operator",
      "documentation": {
        "title": "distinct",
        "description": "Produces a table with the distinct combination of the provided columns of the input table.",
        "syntax": "*T* `| distinct` *ColumnName*`[,`*ColumnName2*`, ...]`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ColumnName*| `string` |  *True*| The column name to search for distinct values. |\n\n> \n> The `distinct` operator supports providing an asterisk `*` as the group key to denote all columns, which is helpful for wide tables.",
        "example": "StormEvents\n| where InjuriesDirect > 45\n| distinct State, EventType",
        "sourceLength": 2290,
        "url": "https://learn.microsoft.com/en-us/kusto/query/distinct-operator"
      }
    },
    {
      "name": "endswith_cs",
      "category": "Operator",
      "documentation": {
        "title": "endswith_cs",
        "description": "Filters a record set for data with a case-sensitive ending string.",
        "syntax": "*T* `|` `where` *col* `endswith_cs` `(`*expression*`)`",
        "returnInfo": "Returns the rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The column to filter. |\n| *expression* | `string` |  *True* | The expression used to filter. |",
        "example": "StormEvents\n| summarize Events = count() by State\n| where State endswith_cs \"NA\"",
        "sourceLength": 2118,
        "url": "https://learn.microsoft.com/en-us/kusto/query/endswith-cs-operator"
      }
    },
    {
      "name": "endswith",
      "category": "Operator",
      "documentation": {
        "title": "endswith",
        "description": "Filters a record set for data with a case-insensitive ending string.",
        "syntax": "*T* `|` `where` *col* `endswith` `(`*expression*`)`",
        "returnInfo": "Returns the rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The column to filter. |\n| *expression* | `string` |  *True* | The expression used to filter. |",
        "example": "StormEvents\n| summarize Events=count() by State\n| where State endswith \"sas\"\n| where Events > 10\n| project State, Events",
        "sourceLength": 2183,
        "url": "https://learn.microsoft.com/en-us/kusto/query/endswith-operator"
      }
    },
    {
      "name": "equals-cs",
      "category": "operator",
      "documentation": {
        "title": "== (equals)",
        "description": "Filters a record set for data matching a case-sensitive string.\n\nThe following table provides a comparison of the `==` operators:\n\n|Operator   |Description   |Case-Sensitive  |Example (yields `true`)  |\n|:-----------|:--------------|:----------------|:-------------------------|\n|`==`|Equals |Yes|`\"aBc\" == \"aBc\"`|\n|`!=`|Not equals |Yes |`\"abc\" != \"ABC\"`|\n|`=~` |Equals |No |`\"abc\" =~ \"ABC\"`|\n|`!~` |Not equals |No |`\"aBc\" !~ \"xyz\"`|\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *col* `==` `(`*expression*`,` ... `)`",
        "returnInfo": "Returns the rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The column to filter. |\n| *expression* | `string` |  *True* | The expression used to filter. |",
        "example": "StormEvents\n| where State == \"kansas\"\n| count \n\nStormEvents\n| where State == \"KANSAS\"\n| count",
        "sourceLength": 2995,
        "url": "https://learn.microsoft.com/en-us/kusto/query/equals-cs-operator"
      }
    },
    {
      "name": "equals",
      "category": "operator",
      "documentation": {
        "title": "=~ (equals)",
        "description": "Filters a record set for data with a case-insensitive string.\n\nThe following table provides a comparison of the `==` (equals) operators:\n\n|Operator   |Description   |Case-Sensitive  |Example (yields `true`)  |\n|:-----------|:--------------|:----------------|:-------------------------|\n|`==`|Equals |Yes|`\"aBc\" == \"aBc\"`|\n|`!=`|Not equals |Yes |`\"abc\" != \"ABC\"`|\n|`=~` |Equals |No |`\"abc\" =~ \"ABC\"`|\n|`!~` |Not equals |No |`\"aBc\" !~ \"xyz\"`|\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *col* `=~` `(`*expression*`)`",
        "returnInfo": "Returns the rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The column to filter. |\n| *expression* | `string` |  *True* | The expression used to filter. |",
        "example": "StormEvents\n| where State =~ \"kansas\"\n| project EventId, State",
        "sourceLength": 2833,
        "url": "https://learn.microsoft.com/en-us/kusto/query/equals-operator"
      }
    },
    {
      "name": "evaluate",
      "category": "Operator",
      "documentation": {
        "title": "evaluate plugin",
        "description": "Invokes a service-side query extension (plugin).\n\nThe `evaluate` operator is a tabular operator that allows you to invoke query language extensions known as **plugins**. Unlike other language constructs, plugins can be enabled or disabled. Plugins aren't \"bound\" by the relational nature of the language. In other words, they may not have a predefined, statically determined, output schema.\n\n> \n>\n> * Syntactically, `evaluate` behaves similarly to the invoke operator, which invokes tabular functions.\n> * Plugins provided through the evaluate operator aren't bound by the regular rules of query execution or argument evaluation.\n> * Specific plugins may have specific restrictions. For example, plugins whose output schema depends on the data. For example, bag_unpack plugin and pivot plugin can't be used when performing cross-cluster queries.",
        "syntax": "[*T* `|`] `evaluate` [ *evaluateParameters* ] *PluginName* `(`[ *PluginArgs* ]`)`",
        "returnInfo": "",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *T* | `string` | | A tabular input to the plugin. Some plugins don't take any input and act as a tabular data source.|\n| *evaluateParameters* | `string` | | Zero or more space-separated evaluate parameters in the form of *Name* `=` *Value* that control the behavior of the evaluate operation and execution plan. Each plugin may decide differently how to handle each parameter. Refer to each plugin's documentation for specific behavior.|\n| *PluginName* | `string` |  *True* | The mandatory name of the plugin being invoked. |\n| *PluginArgs* | `string` | | Zero or more comma-separated arguments to provide to the plugin.|\n\n### Evaluate parameters\n\nThe following parameters are supported:\n\n  |Name                |Values                           |Description                                |\n  |:--------------------|:---------------------------------|:-------------------------------------------|\n  |`hint.distribution` |`single`, `per_node`, `per_shard`| Distribution hints |\n  |`hint.pass_filters` |`true`, `false`| Allow `evaluate` operator to passthrough any matching filters before the plugin. Filter is considered as 'matched' if it refers to a column existing before the `evaluate` operator. Default: `false` |\n  |`hint.pass_filters_column` |*column_name*| Allow plugin operator to passthrough filters referring to *column_name* before the plugin. Parameter can be used multiple times with different column names. |\n\nThe following plugins are supported:\n\n* autocluster plugin\n* azure-digital-twins-query-request plugin\n* bag-unpack plugin\n* basket plugin\n* cosmosdb-sql-request plugin\n* dcount-intersect plugin\n* diffpatterns plugin\n* diffpatterns-text plugin\n* infer-storage-schema plugin\n* ipv4-lookup plugin\n* ipv6-lookup plugin\n* mysql-request-plugin\n* narrow plugin\n* pivot plugin\n* preview plugin\n* R plugin\n* rolling-percentile plugin\n* rows-near plugin\n* schema-merge plugin\n* sql-request plugin\n* sequence-detect plugin\n\nDistribution hints specify how the plugin execution will be distributed across multiple cluster nodes. Each plugin may implement a different support for the distribution. The plugin's documentation specifies the distribution options supported by the plugin.\n\nPossible values:\n\n* `single`: A single instance of the plugin will run over the entire query data.\n* `per_node`: If the query before the plugin call is distributed across nodes, then an instance of the plugin will run on each node over the data that it contains.\n* `per_shard`: If the data before the plugin call is distributed across shards, then an instance of the plugin will run over each shard of the data.",
        "example": "",
        "sourceLength": 4827,
        "url": "https://learn.microsoft.com/en-us/kusto/query/evaluate-operator"
      }
    },
    {
      "name": "extend",
      "category": "Operator",
      "documentation": {
        "title": "extend",
        "description": "Creates calculated columns and append them to the result set.",
        "syntax": "*T* `| extend` [*ColumnName* | `(`*ColumnName*[`,` ...]`)` `=`] *Expression* [`,` ...]",
        "returnInfo": "Returns a copy of the input tabular result set, such that:\n\n1. Column names noted by `extend` that already exist in the input are removed\n   and appended as their new calculated values.\n1. Column names noted by `extend` that don't exist in the input are appended\n   as their new calculated values.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | Tabular input to extend. |\n| *ColumnName* | `string` | | Name of the column to add or update. |\n| *Expression* | `string` |  *True* | Calculation to perform over the input.|\n\n* If *ColumnName* is omitted, the output column name of *Expression* is automatically generated.\n* If *Expression* returns more than one column, a list of column names can be specified in parentheses. Then, *Expression*'s output columns is given the specified names. If a list of the column names isn't specified, all *Expression*'s output columns with generated names are added to the output.",
        "example": "StormEvents\n| project EndTime, StartTime\n| extend Duration = EndTime - StartTime",
        "sourceLength": 4020,
        "url": "https://learn.microsoft.com/en-us/kusto/query/extend-operator"
      }
    },
    {
      "name": "externaldata",
      "category": "Operator",
      "documentation": {
        "title": "externaldata",
        "description": "The `externaldata` operator returns a table whose schema is defined in the query itself, and whose data is read from an external storage artifact, such as a blob in Azure Blob Storage or a file in Azure Data Lake Storage.",
        "syntax": "`externaldata` `(`*columnName*`:`*columnType* [`,` ...] `)`\n`[` *storageConnectionString* [`,` ...] `]`\n[`with` `(` *propertyName* `=` *propertyValue* [`,` ...]`)`]",
        "returnInfo": "The `externaldata` operator returns a data table of the given schema whose data was parsed from the specified storage artifact, indicated by the storage connection string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *columnName*, *columnType* | `string` |  *True*| A list of column names and their types. This list defines the schema of the table. |\n| *storageConnectionString* | `string` |  *True*| A storage connection string of the storage artifact to query. |\n| *propertyName*, *propertyValue* | `string` | | A list of optional supported properties that determines how to interpret the data retrieved from storage.\n\n> [!WARN]\n> For security reasons, make sure that no credential is specified by  the *storageConnectionString* property.\n> If the query needs to specify credentials, use query parameters to specify the whole connection string.\n>\n> For example, assuming that the query includes a query parameter called `URI` whose value points at Blob Storage, the query would look like this:\n> ```kusto\n> declare query_parameters(URI:string);\n> externaldata(x:string)[URI]\n> ```\n>\n> If this is not possible (for example, you're using a client that does not support setting query parameters),\n> be sure to use obfuscated string literals.\n\n### Supported properties\n\n| Property | Type | Description |\n|:--|:--|:--|\n| format | `string` | The data format. If unspecified, an attempt is made to detect the data format from file extension. The default is `CSV`. All ingestion data formats are supported. |\n| ignoreFirstRecord | `bool` | If set to `true`, the first record in every file is ignored. This property is useful when querying CSV files with headers. |\n| ingestionMapping | `string` | Indicates how to map data from the source file to the actual columns in the operator result set. See data mappings. |\n\n> \n>\n> This operator doesn't accept any pipeline input.\n>\n> Standard query limits apply to external data queries as well.",
        "example": "Users\n| where UserID in ((externaldata (UserID:string) [\n    @\"https://storageaccount.blob.core.windows.net/storagecontainer/users.txt;managed_identity=...\"\n    ]))\n| ...\n\nexternaldata(Timestamp:datetime, ProductId:string, ProductDescription:string)\n[\n  h@\"https://mycompanystorage.blob.core.windows.net/archivedproducts/2019/01/01/part-00000-7e967c99-cf2b-4dbb-8c53-ce388389470d.csv.gz?...SAS...\",\n  h@\"https://mycompanystorage.blob.core.windows.net/archivedproducts/2019/01/02/part-00000-ba356fa4-f85f-430a-8b5a-afd64f128ca4.csv.gz?...SAS...\",\n  h@\"https://mycompanystorage.blob.core.windows.net/archivedproducts/2019/01/03/part-00000-acb644dc-2fc6-467c-ab80-d1590b23fc31.csv.gz?...SAS...\"\n]\nwith(format=\"csv\")\n| summarize count() by ProductId\n\nexternaldata(Timestamp: datetime, TenantId: guid, MethodName: string)\n[ \n   h@'https://mycompanystorage.blob.core.windows.net/events/2020/09/01/part-0000046c049c1-86e2-4e74-8583-506bda10cca8.json?...SAS...'\n]\nwith(format='multijson', ingestionMapping='[{\"Column\":\"Timestamp\",\"Properties\":{\"Path\":\"$.timestamp\"}},{\"Column\":\"TenantId\",\"Properties\":{\"Path\":\"$.data.tenant\"}},{\"Column\":\"MethodName\",\"Properties\":{\"Path\":\"$.data.method\"}}]')",
        "sourceLength": 7714,
        "url": "https://learn.microsoft.com/en-us/kusto/query/externaldata-operator"
      }
    },
    {
      "name": "facet",
      "category": "Operator",
      "documentation": {
        "title": "facet",
        "description": "Returns a set of tables, one for each column specified in the facet clause.\nEach table contains the list of values taken by its column.\nAn additional table can be created by using the `with` clause. Facet result tables can't be renamed or referenced by any additional operators.",
        "syntax": "*T* `| facet by` *ColumnName* [`,` *ColumnName2*`,` ...] [`with (` *filterPipe* `)`]",
        "returnInfo": "Multiple tables: one for the `with` clause, and one for each column.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ColumnName* | `string` |  *True* | The column name, or list of column names, to be summarized.|\n| *filterPipe* | `string` | | A query expression applied to the input table.|",
        "example": "StormEvents\n| where State startswith \"A\" and EventType has \"Heavy\"\n| facet by State, EventType\n    with \n    (\n    where StartTime between(datetime(2007-01-04) .. 7d) \n    | project State, StartTime, Source, EpisodeId, EventType\n    | take 5\n    )",
        "sourceLength": 2928,
        "url": "https://learn.microsoft.com/en-us/kusto/query/facet-operator"
      }
    },
    {
      "name": "find",
      "category": "Operator",
      "documentation": {
        "title": "find",
        "description": "Finds rows that match a predicate across a set of tables.",
        "syntax": "The `find` operator supports an alternative syntax for the `* has` term, and using just *term*, searches a term across all input columns.\n\nFor a summary of some filtering functions, see where operator.\n\n* If the `project` clause references a column that appears in multiple tables and has multiple types, a type must follow this column reference in the project clause\n* If a column appears in multiple tables and has multiple types and `project-smart` is in use, there's a corresponding column for each type in the `find`'s result, as described in union\n* When you use *project-smart*, changes in the predicate, in the source tables set, or in the tables schema, might result in a change to the output schema. If a constant result schema is needed, use *project* instead\n* `find` scope can't include functions. To include a function in the `find` scope, define a let statement with view keyword.\n\n* Use tables as opposed to tabular expressions.\nIf tabular expression, the find operator falls back to a `union` query that can result in degraded performance.\n* If a column that appears in multiple tables and has multiple types, is part of the project clause, prefer adding a *ColumnType* to the project clause over modifying the table before passing it to `find`.\n* Add time-based filters to the predicate. Use a datetime column value or ingestion_time().\n* Search in specific columns rather than a full text search.\n* It's better not to reference columns that appear in multiple tables and have multiple types. If the predicate is valid when resolving such columns type for more than one type, the query falls back to union.\nFor example, see examples of cases where `find` acts as a union.",
        "returnInfo": "**source_ column**\n\nThe `find` operator output always includes a *source_* column with the source table name. The column can be renamed using the `withsource` parameter.\n\n**results columns**\n\nSource tables that don't contain any column used by the predicate evaluation, are filtered out.\n\nWhen you use `project-smart`, the columns that appear in the output are:\n\n* Columns that appear explicitly in the predicate.\n* Columns that are common to all the filtered tables.\n\nThe rest of the columns are packed into a property bag and appear in an extra `pack` column.\nA column that is referenced explicitly by the predicate and appears in multiple tables with multiple types, has a different column in the result schema for each such type. Each of the column names is constructed from the original column name and type, separated by an underscore.\n\nWhen using `project` *ColumnName*[`:` *ColumnType* `,` ... ] [`,` `pack_all()`]:\n\n* The result table includes the columns specified in the list. If a source table doesn't contain a certain column, the values in the corresponding rows are null.\n* When you specify a *ColumnType* with a *ColumnName*, this column in the \"result\" has the given type, and the values are cast to that type if needed. The casting doesn't have an effect on the column type when evaluating the *Predicate*.\n* When `pack_all()` is used, all the columns, including the projected columns, are packed into a property bag and appear in an extra column, by default 'column1'. In the property bag, the source column name serves as the property name and the column's value serves as the property value.",
        "parametersTable": "",
        "example": "",
        "sourceLength": 23004,
        "url": "https://learn.microsoft.com/en-us/kusto/query/find-operator"
      }
    },
    {
      "name": "fork",
      "category": "Operator",
      "documentation": {
        "title": "fork",
        "description": "Runs multiple consumer operators in parallel.",
        "syntax": "*T* `|` `fork` [*name*`=`]`(`*subquery*`)` [*name*`=`]`(`*subquery*`)` ...",
        "returnInfo": "Multiple result tables, one for each of the *subquery* arguments.\n\n* Use `materialize` as a replacement for `join` or `union` on fork legs. The input stream is cached by materialize and then the cached expression can be used in join/union legs.\n\n* Use batch with `materialize` of tabular expression statements instead of the `fork` operator.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *subquery* | `string` |  *True* | A downstream pipeline of supported query operators.|\n| *name* | `string` | | A temporary name for the subquery result table.|\n\n> \n>\n> * Avoid using `fork` with a single *subquery*.\n> * The name of the results tab is the same name as provided with the `name` parameter or the `as` operator.\n\n### Supported query operators\n\n* `as`\n* `count`\n* `extend`\n* `parse`\n* `where`\n* `take`\n* `project`\n* `project-away`\n* `project-keep`\n* `project-rename`\n* `project-reorder`\n* `summarize`\n* `top`\n* `top-nested`\n* `sort`\n* `mv-expand`\n* `reduce`",
        "example": "StormEvents\n| where State == \"FLORIDA\"\n| fork\n    ( where DeathsDirect + DeathsIndirect > 1)\n    ( where InjuriesDirect + InjuriesIndirect > 1)",
        "sourceLength": 6668,
        "url": "https://learn.microsoft.com/en-us/kusto/query/fork-operator"
      }
    },
    {
      "name": "getschema",
      "category": "operator",
      "documentation": {
        "title": "getschema",
        "description": "Produce a table that represents a tabular schema of the input.",
        "syntax": "*T* `|` `getschema`",
        "returnInfo": "",
        "parametersTable": "",
        "example": "StormEvents\n| getschema",
        "sourceLength": 1968,
        "url": "https://learn.microsoft.com/en-us/kusto/query/getschema-operator"
      }
    },
    {
      "name": "graph-mark-components",
      "category": "Operator",
      "documentation": {
        "title": "graph-mark-components",
        "description": "The `graph-mark-components` operator finds all connected components of a graph and marks each node with a component identifier.\n\n> \n> This operator is used with the make-graph operator.",
        "syntax": "*G* `|` `graph-mark-components` [`kind` `=` *Kind*] [`with_component_id` `=` *ComponentId*]",
        "returnInfo": "The `graph-mark-components` operator returns a *graph* result, where each node has a component identifier in the *ComponentId* property. The identifier is a zero-based consecutive index of the components. Each component index is chosen arbitrarily and might not be consistent across runs.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *G* | string |  *True* | The graph source. |\n| *Kind* | string |  | The connected component kind, either `weak` (default) or `strong`. A weak component is a set of nodes connected by a path, ignoring the direction of edges. A strong component is a set of nodes connected in both directions, considering the edges' directions. |\n| *ComponentId* | string |  | The property name that denotes the component identifier. The default property name is `ComponentId`. |",
        "example": "let ChildOf = datatable(child:string, parent:string) \n[ \n  \"Alice\", \"Bob\",  \n  \"Carol\", \"Alice\",  \n  \"Carol\", \"Dave\",  \n  \"Greg\", \"Alice\",  \n  \"Greg\", \"Dave\",  \n  \"Howard\", \"Alice\",  \n  \"Howard\", \"Dave\",  \n  \"Eve\", \"Frank\",  \n  \"Frank\", \"Mallory\",\n  \"Eve\", \"Kirk\",\n]; \nChildOf \n| make-graph child --> parent with_node_id=name\n| graph-mark-components with_component_id = family\n| graph-to-table nodes\n\nlet ChildOf = datatable(child:string, parent:string) \n[ \n  \"Alice\", \"Bob\",  \n  \"Carol\", \"Alice\",  \n  \"Carol\", \"Dave\",  \n  \"Greg\", \"Alice\",  \n  \"Greg\", \"Dave\",  \n  \"Howard\", \"Alice\",  \n  \"Howard\", \"Dave\",  \n  \"Eve\", \"Frank\",  \n  \"Frank\", \"Mallory\",\n  \"Eve\", \"Kirk\",\n]; \nChildOf \n| make-graph child --> parent with_node_id=name\n| graph-mark-components with_component_id = family\n| graph-match (descendant)-[childOf*1..5]->(ancestor)\n  project name = ancestor.name, lineage = map(childOf, child), family = ancestor.family\n| summarize (generations, name) = arg_max(array_length(lineage),name) by family",
        "sourceLength": 4832,
        "url": "https://learn.microsoft.com/en-us/kusto/query/graph-mark-components-operator"
      }
    },
    {
      "name": "graph-match",
      "category": "Operator",
      "documentation": {
        "title": "graph-match",
        "description": "The `graph-match` operator searches for all occurrences of a graph pattern in an input graph source.\n\n> \n> This operator is used with the make-graph operator.",
        "syntax": "*G* `|` `graph-match` [`cycles` `=` *CyclesOption*]  *Pattern* [`where` *Constraints*] `project` [*ColumnName* `=`] *Expression* [`,` ...]",
        "returnInfo": "The `graph-match` operator returns a tabular result, where each record corresponds to a match of the pattern in the graph.  \nThe returned columns are defined in the operator's `project` clause using properties of edges and/or nodes defined in the pattern. Properties and functions of properties of variable length edges are returned as a dynamic array, each value in the array corresponds to an occurrence of the variable length edge.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *G* | `string` |  *True* | The input graph source. |\n| *Pattern* | `string` |  *True* | One or more comma delimited sequences of graph node elements connected by graph edge elements using graph notations. See Graph pattern notation. |\n| *Constraints* | `string` |  | A Boolean expression composed of properties of named variables in the *Pattern*. Each graph element (node/edge) has a set of properties that were attached to it during the graph construction. The constraints define which elements (nodes and edges) are matched by the pattern. A property is referenced by the variable name followed by a dot (`.`) and the property name. |\n| *Expression* | `string` | *True* | The `project` clause converts each pattern to a row in a tabular result. The project expressions must be scalar and reference properties of named variables defined in the *Pattern*. A property is referenced by the variable name followed by a dot (`.`) and the attribute name. |\n| *CyclesOption* | `string` |  | Controls whether cycles are matched in the *Pattern*, allowed values: `all`, `none`, `unique_edges`. If `all` is specified, then all cycles are matched, if `none` is specified cycles aren't matched, if `unique_edges` (default) is specified, cycles are matched but only if the cycles don't include the same edge more than once. |\n\n### Graph pattern notation\n\nThe following table shows the supported graph notation:\n  \n|Element|Named variable|Anonymous|\n|:---|:---|:---|\n|Node|`(`*n*`)`|`()`|\n|Directed edge: left to right|`-[`*e*`]->`|`-->`|\n|Directed edge: right to left|`<-[`*e*`]-`|`<--`|\n|Any direction edge|`-[`*e*`]-`|`--`|\n|Variable length edge|`-[`*e*`*3..5]-`|`-[*3..5]-`|\n\n### Variable length edge\n\nA variable length edge allows a specific pattern to be repeated multiple times within defined limits. This type of edge is denoted by an asterisk (`*`), followed by the minimum and maximum occurrence values in the format *min*`..`*max*. Both the minimum and maximum values must be integer scalars. Any sequence of edges falling within this occurrence range can match the variable edge of the pattern, if all the edges in the sequence satisfy the constraints outlined in the `where` clause.\n\n### Multiple sequences\n\nMultiple comma delimited sequences are used to express nonlinear patterns. To describe the connection between different sequences, they have to share one or more variable name of a node. For example, to represent a star pattern with node *n* at the center connected to nodes *a*,*b*,*c*, and *d*, the following pattern could be used:\n\n`(`*a*`)--(`*n*`)--(`*b*`)`,`(`*c*`)--(`*n*`)--(`*d*`)`\n\nOnly single connected component patterns are supported.",
        "example": "let employees = datatable(name:string, age:long) \n[ \n  \"Alice\", 32,  \n  \"Bob\", 31,  \n  \"Eve\", 27,  \n  \"Joe\", 29,  \n  \"Chris\", 45, \n  \"Alex\", 35,\n  \"Ben\", 23,\n  \"Richard\", 39,\n]; \nlet reports = datatable(employee:string, manager:string) \n[ \n  \"Bob\", \"Alice\",  \n  \"Chris\", \"Alice\",  \n  \"Eve\", \"Bob\",\n  \"Ben\", \"Chris\",\n  \"Joe\", \"Alice\", \n  \"Richard\", \"Bob\"\n]; \nreports \n| make-graph employee --> manager with employees on name \n| graph-match (alice)<-[reports*1..5]-(employee)\n  where alice.name == \"Alice\" and employee.age < 30\n  project employee = employee.name, age = employee.age, reportingPath = map(reports, manager)\n\nlet Entities = datatable(name:string, type:string, age:long) \n[ \n  \"Alice\", \"Person\", 23,  \n  \"Bob\", \"Person\", 31,  \n  \"Eve\", \"Person\", 17,  \n  \"Mallory\", \"Person\", 29,  \n  \"Apollo\", \"System\", 99 \n]; \nlet Actions = datatable(source:string, destination:string, action_type:string) \n[ \n  \"Alice\", \"Bob\", \"communicatesWith\",  \n  \"Alice\", \"Apollo\", \"trusts\",  \n  \"Bob\", \"Apollo\", \"hasPermission\",  \n  \"Eve\", \"Alice\", \"attacks\",  \n  \"Mallory\", \"Alice\", \"attacks\",  \n  \"Mallory\", \"Bob\", \"attacks\"  \n]; \nActions \n| make-graph source --> destination with Entities on name \n| graph-match (mallory)-[attacks]->(compromised)-[hasPermission]->(apollo) \n  where mallory.name == \"Mallory\" and apollo.name == \"Apollo\" and attacks.action_type == \"attacks\" and hasPermission.action_type == \"hasPermission\" \n  project Attacker = mallory.name, Compromised = compromised.name, System = apollo.name\n\nlet Entities = datatable(name:string, type:string, age:long) \n[ \n  \"Alice\", \"Person\", 23,  \n  \"Bob\", \"Person\", 31,  \n  \"Eve\", \"Person\", 17,  \n  \"Mallory\", \"Person\", 29,  \n  \"Apollo\", \"System\", 99 \n]; \nlet Actions = datatable(source:string, destination:string, action_type:string) \n[ \n  \"Alice\", \"Bob\", \"communicatesWith\",  \n  \"Alice\", \"Apollo\", \"trusts\",  \n  \"Bob\", \"Apollo\", \"hasPermission\",  \n  \"Eve\", \"Alice\", \"attacks\",  \n  \"Mallory\", \"Alice\", \"attacks\",  \n  \"Mallory\", \"Bob\", \"attacks\"  \n]; \nActions \n| make-graph source --> destination with Entities on name \n| graph-match (mallory)-[attacks]->(compromised)-[hasPermission]->(apollo), (compromised)-[communicates]-(alice) \n  where mallory.name == \"Mallory\" and apollo.name == \"Apollo\" and attacks.action_type == \"attacks\" and hasPermission.action_type == \"hasPermission\" and alice.name == \"Alice\"\n  project Attacker = mallory.name, Compromised = compromised.name, System = apollo.name",
        "sourceLength": 10522,
        "url": "https://learn.microsoft.com/en-us/kusto/query/graph-match-operator"
      }
    },
    {
      "name": "graph-shortest-paths",
      "category": "Operator",
      "documentation": {
        "title": "graph-shortest-paths",
        "description": "The `graph-shortest-paths` operator finds the shortest paths between a set of source nodes and a set of target nodes in a graph and returns a table with the results.\n\n> \n> This operator is used with the make-graph operator.",
        "syntax": "*G* `|` `graph-shortest-paths` [`output` `=` *OutputOption*] *Pattern* `where` *Predicate* `project` [*ColumnName* `=`] *Expression* [`,` ...]",
        "returnInfo": "The `graph-shortest-paths` operator returns a tabular result, where each record corresponds to a path found in the graph. The returned columns are defined in the operator's `project` clause using properties of nodes and edges defined in the pattern. Properties and functions of properties of variable length edges, are returned as a dynamic array. Each value in the array corresponds to an occurrence of the variable length edge.",
        "parametersTable": "| Name | Type | Required |Description |\n|:---------------|:-------------|:----------|:-----------------------------|\n| *G* | string | *True* | The graph source, typically the output from a `make-graph` operation.                                                 |\n| *Pattern* | string | *True* | A path pattern that describes the path to find. Patterns must include at least one variable length edge and can't contain multiple sequences. |\n| *Predicate* | expression | | A boolean expression that consists of properties of named variables in the pattern and constants. |\n| *Expression* | expression | *True* | A scalar expression that defines the output row for each found path, using constants and references to properties of named variables in the pattern. |\n| *OutputOption*| string | | Specifies the search output as `any` (default) or `all`. Output is specified as `any` for a single shortest path per source/target pair and `all` for all shortest paths of equal minimum length. |\n\n### Path pattern notation\n\nThe following table shows the supported path pattern notations.\n\n| Element                  | Named variable | Anonymous element |\n|:--------------------------|:----------------|:-----------|\n| Node                     | `(`*n*`)`      | `()`      |\n| Directed edge from left to right | `-[`*e*`]->` | `-->`     |\n| Directed edge from right to left | `<-[`*e*`]-` | `<--`     |\n| Any direction edge       | `-[`*e*`]-`    | `--`      |\n| Variable length edge     | `-[`*e*`*3..5]-` | `-[*3..5]-` |\n\n#### Variable length edge\n\nA variable length edge allows a specific pattern to repeat multiple times within defined limits. An asterisk (`*`) denotes this type of edge, followed by the minimum and maximum occurrence values in the format *min*`..`*max*. These values must be integer scalars. Any sequence of edges within this range can match the variable edge of the pattern, provided all the edges in the sequence meet the `where` clause constraints.",
        "example": "let connections = datatable(from_station:string, to_station:string, line:string) \n[ \n  \"Central\", \"North\", \"red\",\n  \"North\", \"Central\", \"red\", \n  \"Central\", \"South\",  \"red\", \n  \"South\", \"Central\",  \"red\", \n  \"South\", \"South-West\", \"red\", \n  \"South-West\", \"South\", \"red\", \n  \"South-West\", \"West\", \"red\", \n  \"West\", \"South-West\", \"red\", \n  \"Central\", \"East\", \"blue\", \n  \"East\", \"Central\", \"blue\", \n  \"Central\", \"West\", \"blue\",\n  \"West\", \"Central\", \"blue\",\n]; \nconnections \n| make-graph from_station --> to_station with_node_id=station\n| graph-shortest-paths (start)-[connections*1..5]->(destination)\n  where start.station == \"South-West\" and destination.station == \"North\"\n  project from = start.station, path = map(connections, to_station), line = map(connections, line), to = destination.station\n\nlet connections = datatable(from_station:string, to_station:string, line:string) \n[ \n  \"Central\", \"North\", \"red\",\n  \"North\", \"Central\", \"red\", \n  \"Central\", \"South\",  \"red\", \n  \"South\", \"Central\",  \"red\", \n  \"South\", \"South-West\", \"red\", \n  \"South-West\", \"South\", \"red\", \n  \"South-West\", \"West\", \"red\", \n  \"West\", \"South-West\", \"red\", \n  \"Central\", \"East\", \"blue\", \n  \"East\", \"Central\", \"blue\", \n  \"Central\", \"West\", \"blue\",\n  \"West\", \"Central\", \"blue\",\n]; \nconnections \n| make-graph from_station --> to_station with_node_id=station\n| graph-shortest-paths output=all (start)-[connections*1..5]->(destination)\n  where start.station == \"South-West\" and destination.station == \"North\"\n  project from = start.station, path = map(connections, to_station), line = map(connections, line), to = destination.station",
        "sourceLength": 8009,
        "url": "https://learn.microsoft.com/en-us/kusto/query/graph-shortest-paths-operator"
      }
    },
    {
      "name": "graph-to-table",
      "category": "operator",
      "documentation": {
        "title": "graph-to-table",
        "description": "The `graph-to-table` operator exports nodes or edges from a graph to tables.",
        "syntax": "### Nodes\n\n*G* `|` `graph-to-table` `nodes` [ `with_node_id=`*ColumnName* ]\n\n### Edges\n\n*G* `|` `graph-to-table` `edges` [ `with_source_id=`*ColumnName* ] [ `with_target_id=`*ColumnName* ] [ `as` *TableName* ]\n\n### Nodes and edges\n\n*G* `|` `graph-to-table` `nodes` `as` *NodesTableName* [ `with_node_id=`*ColumnName* ]`,` `edges` `as` *EdgesTableName* [ `with_source_id=`*ColumnName* ] [ `with_target_id=`*ColumnName* ]",
        "returnInfo": "### Nodes\n\nThe `graph-to-table` operator returns a tabular result, in which each row corresponds to a node in the source graph. The returned columns are the node's properties. When `with_node_id` is provided, the node hash column is of `long` type.\n\n### Edges\n\nThe `graph-to-table` operator returns a tabular result, in which each row corresponds to an edge in the source graph. The returned columns are the node's properties. When `with_source_id` or `with_target_id` are provided, the node hash column is of `long` type.\n\n### Nodes and edges\n\nThe `graph-to-table` operator returns two tabular results, matching the previous descriptions.",
        "parametersTable": "|Name|Type|Required | Description |\n|:---|:---|:---|:---|\n|*G*| `string` | *True*|The input graph source.|\n|*NodesTableName*| `string` ||The name of the exported nodes table.|\n|*EdgesTableName*| `string` ||The name of the exported edges table.|\n|*ColumnName*| `string` ||Export the node hash ID, source node hash ID, or target node hash ID with the given column name.|",
        "example": "let nodes = datatable(name:string, type:string, age:long) \n[ \n\t\"Alice\", \"Person\", 23,  \n\t\"Bob\", \"Person\", 31,  \n\t\"Eve\", \"Person\", 17,  \n\t\"Mallory\", \"Person\", 29,  \n\t\"Trent\", \"System\", 99 \n]; \nlet edges = datatable(source:string, destination:string, edge_type:string) \n[ \n\t\"Alice\", \"Bob\", \"communicatesWith\",  \n\t\"Alice\", \"Trent\", \"trusts\",  \n\t\"Bob\", \"Trent\", \"hasPermission\",  \n\t\"Eve\", \"Alice\", \"attacks\",  \n\t\"Mallory\", \"Alice\", \"attacks\",  \n\t\"Mallory\", \"Bob\", \"attacks\"  \n]; \nedges \n| make-graph source --> destination with nodes on name\n| graph-to-table edges with_source_id=SourceId with_target_id=TargetId",
        "sourceLength": 7711,
        "url": "https://learn.microsoft.com/en-us/kusto/query/graph-to-table-operator"
      }
    },
    {
      "name": "has_all",
      "category": "Operator",
      "documentation": {
        "title": "has_all",
        "description": "Filters a record set for data with one or more case-insensitive search strings. `has_all` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *col* `has_all` `(`*expression*`,` ... `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar or tabular |  *True* |An expression that specifies the values for which to search. Each expression can be a scalar value or a tabular expression that produces a set of values. If a tabular expression has multiple columns, the first column is used. The search will consider up to 256 distinct values.|",
        "example": "StormEvents \n| where EpisodeNarrative has_all (\"cold\", \"strong\", \"afternoon\", \"hail\")\n| summarize Count=count() by EventType\n| top 3 by Count\n\nStormEvents \n| where EpisodeNarrative has_all (dynamic([\"cold\", \"strong\", \"afternoon\", \"hail\"]))\n| summarize Count=count() by EventType\n| top 3 by Count\n\nlet criteria = dynamic([\"cold\", \"strong\", \"afternoon\", \"hail\"]);\nStormEvents \n| where EpisodeNarrative has_all (criteria)\n| summarize Count=count() by EventType\n| top 3 by Count",
        "sourceLength": 4241,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-all-operator"
      }
    },
    {
      "name": "has_any",
      "category": "Operator",
      "documentation": {
        "title": "has_any",
        "description": "Filters a record set for data with any set of case-insensitive strings. `has_any` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *col* `has_any` `(`*expression*`,` ... `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar or tabular |  *True* | An expression that specifies the values for which to search. Each expression can be a scalar value or a tabular expression that produces a set of values. If a tabular expression has multiple columns, the first column is used. The search will consider up to 10,000 distinct values.|\n\n> \n> An inline tabular expression must be enclosed with double parentheses.",
        "example": "StormEvents \n| where State has_any (\"CAROLINA\", \"DAKOTA\", \"NEW\") \n| summarize count() by State\n\nStormEvents \n| where State has_any (dynamic(['south', 'north']))\n| summarize count() by State\n\nlet areas = dynamic(['south', 'north']);\nStormEvents \n| where State has_any (areas)\n| summarize count() by State\n\nStormEvents \n| where State has_any ((PopulationData | where Population > 5000000 | project State))\n| summarize count() by State\n\nlet large_states = PopulationData | where Population > 5000000 | project State;\nStormEvents \n| where State has_any (large_states)\n| summarize count() by State",
        "sourceLength": 5996,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-any-operator"
      }
    },
    {
      "name": "has_cs",
      "category": "Operator",
      "documentation": {
        "title": "has_cs",
        "description": "Filters a record set for data with a case-sensitive search string. `has_cs` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *Column* `has_cs` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True* | The column used to filter the records.|\n| *Expression* | scalar or tabular |  *True* | An expression for which to search. If the value is a tabular expression and has multiple columns, the first column is used.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State has_cs \"FLORIDA\"\n\nStormEvents\n| summarize event_count=count() by State\n| where State has_cs \"florida\"",
        "sourceLength": 2961,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-cs-operator"
      }
    },
    {
      "name": "has",
      "category": "Operator",
      "documentation": {
        "title": "has",
        "description": "Filters a record set for data with a case-insensitive string. `has` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *Column* `has` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True* | The column used to filter the records.|\n| *Expression* | scalar or tabular |  *True* | An expression for which to search. If the value is a tabular expression and has multiple columns, the first column is used.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State has \"New\"\n| where event_count > 10\n| project State, event_count",
        "sourceLength": 2513,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-operator"
      }
    },
    {
      "name": "hasprefix_cs",
      "category": "Operator",
      "documentation": {
        "title": "hasprefix_cs",
        "description": "Filters a record set for data with a case-sensitive starting string.\n\nFor best performance, use strings of three characters or more. `hasprefix_cs` searches for indexed terms, where a term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *Column* `hasprefix_cs` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True* | The column used to filter.|\n| *Expression* | `string` |  *True* | The expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State hasprefix_cs \"P\"\n| count \n\nStormEvents\n| summarize event_count=count() by State\n| where State hasprefix_cs \"P\"\n| project State, event_count",
        "sourceLength": 2779,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hasprefix-cs-operator"
      }
    },
    {
      "name": "hasprefix",
      "category": "Operator",
      "documentation": {
        "title": "hasprefix",
        "description": "Filters a record set for data with a case-insensitive starting string.\n\nFor best performance, use strings of three characters or more. `hasprefix` searches for indexed terms, where a term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *Column* `hasprefix` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True* | The column used to filter.|\n| *Expression* | `string` |  *True* | The expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State hasprefix \"la\"\n| project State, event_count",
        "sourceLength": 2430,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hasprefix-operator"
      }
    },
    {
      "name": "hassuffix_cs",
      "category": "Operator",
      "documentation": {
        "title": "hassuffix_cs",
        "description": "Filters a record set for data with a case-insensitive ending string. `hassuffix_cs` returns `true` if there is a term inside the filtered string column ending with the specified string expression.",
        "syntax": "*T* `|` `where` *column* `hassuffix_cs` `(` *expression* `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n|*column* | `string` |  *True* | The column by which to filter.|\n|*expression* | scalar |  *True* | The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State hassuffix_cs \"AS\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2405,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hassuffix-cs-operator"
      }
    },
    {
      "name": "hassuffix",
      "category": "Operator",
      "documentation": {
        "title": "hassuffix",
        "description": "Filters a record set for data with a case-insensitive ending string. `hassuffix` returns `true` if there is a term inside the filtered string column ending with the specified string expression.",
        "syntax": "*T* `|` `where` *Column* `hassuffix` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*T*| `string` |The tabular input whose records are to be filtered.|\n|*Column*| `string` |The column by which to filter.|\n|*Expression*|scalar|The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State hassuffix \"th\"\n| project State, event_count",
        "sourceLength": 2438,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hassuffix-operator"
      }
    },
    {
      "name": "in",
      "category": "Operator",
      "documentation": {
        "title": "in",
        "description": "Filters a record set for data with a case-sensitive string.",
        "syntax": "*T* `|` `where` *col* `in` `(`*expression*`,` ... `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar or tabular |  *True* | An expression that specifies the values for which to search. Each expression can be a scalar value or a tabular expression that produces a set of values. If a tabular expression has multiple columns, the first column is used. The search considers up to 1,000,000 distinct values.|",
        "example": "",
        "sourceLength": 6950,
        "url": "https://learn.microsoft.com/en-us/kusto/query/in-cs-operator"
      }
    },
    {
      "name": "in~",
      "category": "Operator",
      "documentation": {
        "title": "in~",
        "description": "Filters a record set for data with a case-insensitive string.",
        "syntax": "*T* `|` `where` *col* `in~` `(`*expression*`,` ... `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar or tabular |  *True* | An expression that specifies the values for which to search. Each expression can be a scalar value or a tabular expression that produces a set of values. If a tabular expression has multiple columns, the first column is used. The search will consider up to 1,000,000 distinct values.|",
        "example": "",
        "sourceLength": 5238,
        "url": "https://learn.microsoft.com/en-us/kusto/query/in-operator"
      }
    },
    {
      "name": "invoke",
      "category": "Operator",
      "documentation": {
        "title": "invoke",
        "description": "Invokes a lambda expression that receives the source of `invoke` as a tabular argument.\n\n> \n> For more information on how to declare lambda expressions that can accept tabular arguments, see let statements.",
        "syntax": "*T* `| invoke` *function*`(`[*param1*`,` *param2*]`)`",
        "returnInfo": "Returns the result of the evaluated expression.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T*| `string` |  *True* | The tabular source.|\n| *function*| `string` |  *True* | The name of the lambda `let` expression or stored function name to be evaluated.|\n| *param1*, *param2* ... | `string` || Any additional lambda arguments to pass to the function.|",
        "example": "// clipped_average(): calculates percentiles limits, and then makes another \n//                    pass over the data to calculate average with values inside the percentiles\nlet clipped_average = (T:(x: long), lowPercentile:double, upPercentile:double)\n{\n   let high = toscalar(T | summarize percentiles(x, upPercentile));\n   let low = toscalar(T | summarize percentiles(x, lowPercentile));\n   T \n   | where x > low and x < high\n   | summarize avg(x) \n};\nrange x from 1 to 100 step 1\n| invoke clipped_average(5, 99)",
        "sourceLength": 2642,
        "url": "https://learn.microsoft.com/en-us/kusto/query/invoke-operator"
      }
    },
    {
      "name": "join",
      "category": "Operator",
      "documentation": {
        "title": "join",
        "description": "Merge the rows of two tables to form a new table by matching values of the specified columns from each table.\n\nKusto Query Language (KQL) offers many kinds of joins that each affect the schema and rows in the resultant table in different ways. For example, if you use an `inner` join, the table has the same columns as the left table, plus the columns from the right table. For best performance, if one table is always smaller than the other, use it as the left side of the `join` operator.\n\nThe following image provides a visual representation of the operation performed by each join. The color of the shading represents the columns returned, and the areas shaded represent the rows returned.",
        "syntax": "*LeftTable* `|` `join` [ `kind` `=` *JoinFlavor* ] [ *Hints* ] `(`*RightTable*`)` `on` *Conditions*",
        "returnInfo": "The return schema and rows depend on the join flavor. The join flavor is specified with the *kind* keyword. The following table shows the supported join flavors. To see examples for a specific join flavor, select the link in the **Join flavor** column.\n\n| Join flavor | Returns | Illustration |\n| --- | --- | --- |\n| innerunique (default) | Inner join with left side deduplication<br />**Schema**: All columns from both tables, including the matching keys<br />**Rows**: All deduplicated rows from the left table that match rows from the right table |  |\n| inner | Standard inner join<br />**Schema**: All columns from both tables, including the matching keys<br />**Rows**: Only matching rows from both tables |  |\n| leftouter | Left outer join<br />**Schema**: All columns from both tables, including the matching keys<br />**Rows**: All records from the left table and only matching rows from the right table |  |\n| rightouter | Right outer join<br />**Schema**: All columns from both tables, including the matching keys<br />**Rows**: All records from the right table and only matching rows from the left table |  |\n| fullouter | Full outer join<br />**Schema**: All columns from both tables, including the matching keys<br />**Rows**: All records from both tables with unmatched cells populated with null |  |\n| leftsemi | Left semi join<br />**Schema**: All columns from the left table<br />**Rows**: All records from the left table that match records from the right table |  |\n| `leftanti`, `anti`, `leftantisemi` | Left anti join and semi variant<br />**Schema**: All columns from the left table<br />**Rows**: All records from the left table that don't match records from the right table |  |\n| rightsemi | Right semi join<br />**Schema**: All columns from the right table<br />**Rows**: All records from the right table that match records from the left table |  |\n| `rightanti`, `rightantisemi` | Right anti join and semi variant<br />**Schema**: All columns from the right table<br />**Rows**: All records from the right table that don't match records from the left table |  |\n\n### Cross-join\n\nKQL doesn't provide a cross-join flavor. However, you can achieve a cross-join effect by using a placeholder key approach.\n\nIn the following example, a placeholder key is added to both tables and then used for the inner join operation, effectively achieving a cross-join-like behavior:\n\n`X | extend placeholder=1 | join kind=inner (Y | extend placeholder=1) on placeholder`",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*LeftTable*| `string` | *True*|The left table or tabular expression, sometimes called the outer table, whose rows are to be merged. Denoted as `$left`.|\n|*JoinFlavor*| `string` ||The type of join to perform: `innerunique`, `inner`, `leftouter`, `rightouter`, `fullouter`, `leftanti`, `rightanti`, `leftsemi`, `rightsemi`. The default is `innerunique`. For more information about join flavors, see Returns.|\n|*Hints*| `string` ||Zero or more space-separated join hints in the form of *Name* `=` *Value* that control the behavior of the row-match operation and execution plan. For more information, see Hints.\n|*RightTable*| `string` | *True*|The right table or tabular expression, sometimes called the inner table, whose rows are to be merged. Denoted as `$right`.|\n|*Conditions*| `string` | *True*|Determines how rows from *LeftTable* are matched with rows from *RightTable*. If the columns you want to match have the same name in both tables, use the syntax `ON` *ColumnName*. Otherwise, use the syntax `ON $left.`*LeftColumn* `==` `$right.`*RightColumn*. To specify multiple conditions, you can either use the \"and\" keyword or separate them with commas. If you use commas, the conditions are evaluated using the \"and\" logical operator.|\n\n> \n> For best performance, if one table is always smaller than the other, use it as the left side of the join.\n\n### Hints\n\n> \n> The join hints don't change the semantic of `join` but may affect performance.",
        "example": "",
        "sourceLength": 8288,
        "url": "https://learn.microsoft.com/en-us/kusto/query/join-operator"
      }
    },
    {
      "name": "lookup",
      "category": "Operator",
      "documentation": {
        "title": "lookup",
        "description": "Extends the columns of a fact table with values looked-up in a dimension table.\n\nFor example, the following query results in a table that extends the `FactTable` (`$left`) with data from the `DimensionTable` (`$right`) by performing a lookup. The lookup matches each pair (`CommonColumn`, `Col1`) from `FactTable` with each pair (`CommonColumn`, `Col2`) in the `DimensionTable`. For the differences between fact and dimension tables, see fact and dimension tables.\n\n```kusto\nFactTable | lookup kind=leftouter (DimensionTable) on CommonColumn, $left.Col1 == $right.Col2\n```\n\nThe `lookup` operator performs an operation similar to the join operator\nwith the following differences:\n\n* The result doesn't repeat columns from the `$right` table that are the basis\n  for the join operation.\n* Only two kinds of lookup are supported, `leftouter` and `inner`, with `leftouter` being the default.\n* In terms of performance, the system by default assumes that the `$left` table\n  is the larger (facts) table, and the `$right` table is the smaller (dimensions)\n  table. This is exactly opposite to the assumption used by the `join` operator.\n* The `lookup` operator automatically broadcasts the `$right` table to the `$left`\n  table (essentially, behaves as if `hint.broadcast` was specified). This limits the size of the `$right` table.\n\n> \n> If the right side of the lookup is larger than several tens of MBs, the query will fail.\n>\n> You can run the following query to estimate the size of the right side in bytes:\n>\n> ```kusto\n> rightSide\n> | summarize sum(estimate_data_size(*))\n> ```",
        "syntax": "*LeftTable* `|` `lookup` [`kind` `=` (`leftouter`|`inner`)] `(`*RightTable*`)` `on` *Attributes*",
        "returnInfo": "A table with:\n\n* A column for every column in each of the two tables, including the matching keys.\n  The columns of the right side are automatically renamed if there are name conflicts.\n* A row for every match between the input tables. A match is a row selected from one table that has the same value for all the `on` fields as a row in the other table.\n* The *Attributes* (lookup keys) appear only once in the output table.\n* If `kind` is unspecified or `kind=leftouter`, then in addition to the inner matches, there's a row for every row on the left (and/or right), even if it has no match. In that case, the unmatched output cells contain nulls.\n* If `kind=inner`, then there's a row in the output for every combination of matching rows from left and right.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*LeftTable*| `string` | *True*|The table or tabular expression that is the basis for the lookup. Denoted as `$left`.|\n|*RightTable*| `string` | *True*|The table or tabular expression that is used to \"populate\" new columns in the fact table. Denoted as `$right`.|\n|*Attributes*| `string` | *True*|A comma-delimited list of one or more rules that describe how rows from *LeftTable* are matched to rows from *RightTable*. Multiple rules are evaluated using the `and` logical operator. See Rules.|\n|`kind`| `string` ||Determines how to treat rows in *LeftTable* that have no match in *RightTable*. By default, `leftouter` is used, which means all those rows appear in the output with null values used for the missing values of *RightTable* columns added by the operator. If `inner` is used, such rows are omitted from the output. Other kinds of join aren't supported by the `lookup` operator.|\n\n### Rules\n\n| Rule kind | Syntax | Predicate |\n|:---|:---|:---|\n| Equality by name | *ColumnName* | `where` *LeftTable*.*ColumnName* `==` *RightTable*.*ColumnName* |\n| Equality by value | `$left.`*LeftColumn* `==` `$right.`*RightColumn* | `where` `$left.`*LeftColumn* `==` `$right.`*RightColumn |\n\n> \n> In case of 'equality by value', the column names *must* be qualified with the applicable owner table denoted by `$left` and `$right` notations.",
        "example": "let FactTable=datatable(Row:string,Personal:string,Family:string) [\n  \"1\", \"Rowan\",   \"Murphy\",\n  \"2\", \"Ellis\",   \"Turner\",\n  \"3\", \"Ellis\",   \"Turner\",\n  \"4\", \"Maya\",  \"Robinson\",\n  \"5\", \"Quinn\",    \"Campbell\"\n];\nlet DimTable=datatable(Personal:string,Family:string,Alias:string) [\n  \"Rowan\",  \"Murphy\",   \"rowanm\",\n  \"Ellis\",  \"Turner\", \"ellist\",\n  \"Maya\", \"Robinson\", \"mayar\",\n  \"Quinn\",   \"Campbell\",    \"quinnc\"\n];\nFactTable\n| lookup kind=leftouter DimTable on Personal, Family",
        "sourceLength": 6233,
        "url": "https://learn.microsoft.com/en-us/kusto/query/lookup-operator"
      }
    },
    {
      "name": "macro-expand",
      "category": "Operator",
      "documentation": {
        "title": "macro-expand",
        "description": "The `macro-expand` operator simplifies running a subquery on a set of entities, such as clusters, databases, or tables, and then combining the results into a single output.\n\nThe operator is useful when you have data spread across multiple clusters, databases, or tables. For example, when data is held in the same global region as its source, you can use the `macro-expand` operator in a single query across data in distinct locations, instead of running separate queries for each entity and combining the results manually.\n\nThe set of entities you want to query is called an *entity group*. The entity group can be stored for reuse in a database or defined directly in your query text. For more information about stored entity groups, see Entity groups.\n\nThe `macro-expand` operator runs the subquery separately for each entity in the group and then combines all the results into a single output. The subquery can include nested `macro-expand` operators. However, the identifier for the inner `macro-expand` must be different from the identifier for the outer `macro-expand` to clearly distinguish between the scope and references of each one.",
        "syntax": "`macro-expand` [`kind` `=` *Kind*] [`isfuzzy` `=` *IsFuzzy*] *EntityGroup* `as` *EntityIdentifier*  `(`*Subquery*`)`\n\n`macro-expand` [`kind` `=` *Kind*] [`isfuzzy` `=` *IsFuzzy*] `entity_group` `[`*EntityReference* [`,` ...]  `as` *EntityIdentifier*  `(`*Subquery*`)``]`\n\n`macro-expand` *EntityIdentifier* `in` *EntityGroupIdentifier* `(`*Subquery*`)`\n\n> \n> The operation of the `macro-expand` operator can be modified by setting the `best_effort` request property to `true`, either by using a `set statement` or through client request properties. When this property is set to `true`, the `macro-expand` operator ignores fuzzy resolution and connectivity failures, to execute any of the subexpressions being unioned and issues a warning in the query status results.\n\n### Variations\n\nThere are several ways to specify the entity group used by the `macro-expand` operator:\n\n- **Inline:** All elements are explicitly defined in the text of the operator invocation itself. For an example, see Calculate errors.\n\n- **Via `let` statement:** The entity group is specified in the query using a `let` statement outside the `macro-expand` operator using the syntax:\n\n    `let` *EntityGroupIdentifier* `=` `entity_group` `[`*EntityReference* [`,` ...]`]`\n\n   For an example, see Calculate SKU errors using `let` statement.\n\n- **Using a stored entity group:** The query uses an entity group stored in the database in scope rather than defined in the query.\n\n   For an example, see Extend table with contextual scalar functions.",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Kind* | `string` | | Either `inner` or `outer` (default). When `kind` is set to `inner`, the results only include columns common to all the accessed scoped entities. If set to `outer`, the result includes all the columns that occur in any of the inputs. Cells not defined by an input row are set to `null`. |\n| *IsFuzzy* |  |  | When set to `true`, it only considers entity sources that currently exist and are accessible. If at least one entity is found, the query runs, and any missing entities generate warnings in the query status results. If no entities are found, the query can't resolve any specified entities and returns an error. The default is `false`. |\n| *EntityGroup* |  |  *True* | A set of one or more entities that *EntityIdentifier* expands into when a query is run. The entity group can be a stored entity group or a defined group. It denotes one or more entities of the same type that *EntityIdentifier* expands to. |\n| *EntityIdentifier* | `string` |  *True* |  An identifier that serves as a placeholder for an entity in the subquery, and which is expanded into the actual entity when the query is run. Entities that aren't explicitly scoped in *EntityIdentifier* are assumed to be part of the current in scope database. Any specific identifiers included in the query override the default assumption. |\n|*EntityReference*| `string` | |An entity included in the entity group. One or more *EntityReference* is required if an *EntityGroup* isn't specified. |\n| *Subquery* | `string` |  *True* | A single tabular expression that doesn’t take input data directly. It might include references to entities through an *EntityIdentifier*, and use expressions such as let statements, stored functions, or other elements from the database in scope. *Subquery* can be preceded by one or more `let` statements. It can also reference Subquery contextual functions.|\n\n> \n> A query can only reference entity groups defined in the query text or in the current database. Entity groups in other databases or clusters can't be referenced directly or indirectly.\n\n### Subquery contextual scalars\n\nThe `macro-expand` subquery can reference two specialized scalar values as if they're part of the entity being referenced:\n\n* `$current_database` - Returns the database name of the entity reference (a `string`).\n* `$current_cluster_endpoint` - Returns the URL of the cluster of the entity reference (a `string`).\n\n> \n> These values can only be used when they are scoped by the *EntityReference*.\n> For example, if *EntityReference* is a database and the `macro-expand` is using `DB` to reference the database,\n> use `DB.$current_cluster_endpoint` to retrieve the URL of the cluster which hosts the database.",
        "example": "",
        "sourceLength": 11537,
        "url": "https://learn.microsoft.com/en-us/kusto/query/macro-expand-operator"
      }
    },
    {
      "name": "make-graph",
      "category": "Operator",
      "documentation": {
        "title": "make-graph",
        "description": "The `make-graph` operator builds a graph structure from tabular inputs of edges and nodes.",
        "syntax": "*Edges* `|` `make-graph` *SourceNodeId* `-->` *TargetNodeId* [ `with` *Nodes1* `on` *NodeId1* [`,` *Nodes2* `on` *NodeId2* ]]\n\n*Edges* `|` `make-graph` *SourceNodeId* `-->` *TargetNodeId* [ `with_node_id=` *NodeIdPropertyName* ]\n\n*Edges* `|` `make-graph` *SourceNodeId* `-->` *TargetNodeId* [ `with` *Nodes1* `on` *NodeId1* [`,` *Nodes2* `on` *NodeId2* ]] `partitioned-by` *PartitionColumn* `(` *GraphOperator* `)`",
        "returnInfo": "The `make-graph` operator returns a graph expression and must be followed by a graph operator. Each row in the source *Edges* expression becomes an edge in the graph with properties that are the column values of the row. Each row in the *Nodes* tabular expression becomes a node in the graph with properties that are the column values of the row. Nodes that appear in the *Edges* table but don't have a corresponding row in the *Nodes* table are created as nodes with the corresponding node ID and empty properties.\n\nWhen using the `partitioned-by` clause, separate graphs are created for each unique value in the specified *PartitionColumn*. The specified *GraphOperator* is then applied to each partitioned graph independently, and the results are combined into a single output. This is particularly useful for multitenant scenarios where you want to analyze each tenant's data separately while maintaining the same graph structure and analysis logic.\n\n> \n> When using the `partitioned-by` clause, both the *Edges* table and all *Nodes* tables must contain the partition column.\n\n> \n> Each node has a unique identifier. If the same node ID appears in both the *Nodes1* and *Nodes2* tables, a single node is created by merging their properties. If there are conflicting property values for the same node, one of the values is arbitrarily chosen.\n\nUsers can handle node information in the following ways:\n\n1. **No node information required:** `make-graph` completes with source and target.\n2. **Explicit node properties:** use up to two tabular expressions using \"`with` *Nodes1* `on` *NodeId1* [`,` *Nodes2* `on` *NodeId2* ].\"\n3. **Default node identifier:** use \"`with_node_id=` *DefaultNodeId*.\"",
        "parametersTable": "| Name                   | Type     | Required           | Description                                                                 |\n|:------------------------|:----------|:--------------------|:-----------------------------------------------------------------------------|\n| *Edges*                | `string` | *True* | The tabular source containing the edges of the graph, each row represents an edge in the graph. |\n| *SourceNodeId*         | `string` | *True* | The column in *Edges* with the source node IDs of the edges. |\n| *TargetNodeId*         | `string` | *True* | The column in *Edges* with the target node IDs of the edges. |\n| *Nodes1*, *Nodes2*     | `string` |                    | The tabular expressions containing the properties of the nodes in the graph. |\n| *NodesId1*, *NodesId2* | `string` |                    | The corresponding columns with the node IDs in *Nodes1*, *Nodes2* respectively. |\n| *NodeIdPropertyName*   | `string` |                    | The name of the property for node ID on the nodes of the graph. |\n| *PartitionColumn*      | `string` |                    | The column to partition the graph by. Creates separate graphs for each unique value in this column. |\n| *GraphOperator*        | `string` |                    | The graph operator to apply to each partitioned graph. |",
        "example": "",
        "sourceLength": 14945,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-graph-operator"
      }
    },
    {
      "name": "make-series",
      "category": "Operator",
      "documentation": {
        "title": "make-series",
        "description": "Create series of specified aggregated values along a specified axis.",
        "syntax": "*T* `| make-series` [*MakeSeriesParameters*]\n      [*Column* `=`] *Aggregation* [`default` `=` *DefaultValue*] [`,` ...]\n    `on` *AxisColumn* [`from` *start*] [`to` *end*] `step` *step*\n    [`by`\n      [*Column* `=`] *GroupExpression* [`,` ...]]",
        "returnInfo": "The input rows are arranged into groups having the same values of the `by` expressions and the `bin_at(`*AxisColumn*`,`*step*`,`*start*`)` expression. Then the specified aggregation functions are computed over each group, producing a row for each group. The result contains the `by` columns, *AxisColumn* column and also at least one column for each computed aggregate. (Aggregations over multiple columns or non-numeric results aren't supported.)\n\nThis intermediate result has as many rows as there are distinct combinations of `by` and `bin_at(`*AxisColumn*`,`*step*`,`*start*`)` values.\n\nFinally the rows from the intermediate result arranged into groups having the same values of the `by` expressions and all aggregated values are arranged into arrays (values of `dynamic` type). For each aggregation, there's one column containing its array with the same name. The last column is an array containing the values of *AxisColumn* binned according to the specified *step*.\n\n> \n>\n> Although you can provide arbitrary expressions for both the aggregation and grouping expressions, it's more efficient to use simple column names.\n\n|Function|Description|\n|:--------|:-----------|\n|avg()|Returns an average value across the group|\n|avgif()|Returns an average with the predicate of the group|\n|count()|Returns a count of the group|\n|countif()|Returns a count with the predicate of the group|\n|covariance()|Returns the sample covariance of two random variables|\n|covarianceif()|Returns the sample covariance of two random variables with predicate|\n|covariancep()|Returns the population covariance of two random variables|\n|covariancepif()|Returns the population covariance of two random variables with predicate|\n|dcount()|Returns an  approximate distinct count of the group elements|\n|dcountif()|Returns an approximate distinct count with the predicate of the group|\n|max()|Returns the maximum value across the group|\n|maxif()|Returns the maximum value with the predicate of the group|\n|min()|Returns the minimum value across the group|\n|minif()|Returns the minimum value with the predicate of the group|\n|percentile()|Returns the percentile value across the group|\n|take_any()|Returns a random non-empty value for the group|\n|stdev()|Returns the standard deviation across the group|\n|sum()|Returns the sum of the elements within the group|\n|sumif()|Returns the sum of the elements with the predicate of the group|\n|variance()|Returns the sample variance across the group|\n|varianceif()|Returns the sample variance across the group with predicate|\n|variancep()|Returns the population variance across the group|\n|variancepif()|Returns the population variance across the group with predicate|\n\n|Function|Description|\n|:--------|:-----------|\n|series_fir()|Applies Finite Impulse Response filter|\n|series_iir()|Applies Infinite Impulse Response filter|\n|series_fit_line()|Finds a straight line that is the best approximation of the input|\n|series_fit_line_dynamic()|Finds a line that is the best approximation of the input, returning dynamic object|\n|series_fit_2lines()|Finds two lines that are the best approximation of the input|\n|series_fit_2lines_dynamic()|Finds two lines that are the best approximation of the input, returning dynamic object|\n|series_outliers()|Scores anomaly points in a series|\n|series_periods_detect()|Finds the most significant periods that exist in a time series|\n|series_periods_validate()|Checks whether a time series contains periodic patterns of given lengths|\n|series_stats_dynamic()|Return multiple columns with the common statistics (min/max/variance/stdev/average)|\n|series_stats()|Generates a dynamic value with the common statistics (min/max/variance/stdev/average)|\n\nFor a complete list of series analysis functions, see: Series processing functions\n\n|Function|Description|\n|:--------|:-----------|\n|series_fill_backward()|Performs backward fill interpolation of missing values in a series|\n|series_fill_const()|Replaces missing values in a series with a specified constant value|\n|series_fill_forward()|Performs forward fill interpolation of missing values in a series|\n|series_fill_linear()|Performs linear interpolation of missing values in a series|\n\n* Note: Interpolation functions by default assume `null` as a missing value. Therefore specify `default=`*double*(`null`) in `make-series` if you intend to use interpolation functions for the series.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*Column*| `string` | | The name for the result column. Defaults to a name derived from the expression.|\n|*DefaultValue* | scalar | | A default value to use instead of absent values. If there's no row with specific values of *AxisColumn* and *GroupExpression*, then the corresponding element of the array is assigned a *DefaultValue*. Default is 0.|\n|*Aggregation*| `string` |  *True* | A call to an aggregation function, such as `count()` or `avg()`, with column names as arguments. See the list of aggregation functions. Only aggregation functions that return numeric results can be used with the `make-series` operator.|\n|*AxisColumn*| `string` |  *True* | The column by which the series is ordered. Usually the column values are of type `datetime` or `timespan` but all numeric types are accepted.|\n|*start* | scalar |  *True* | The low bound value of the *AxisColumn* for each of the series to be built. If *start* isn't specified, it's the first bin, or step, that has data in each series.|\n|*end*| scalar|  *True* | The high bound non-inclusive value of the *AxisColumn*. The last index of the time series is smaller than this value and is *start* plus integer multiple of *step* that is smaller than *end*. If *end* isn't specified, it's the upper bound of the last bin, or step, that has data per each series.|\n|*step*| scalar |  *True* | The difference, or bin size, between two consecutive elements of the *AxisColumn* array. For a list of possible time intervals, see timespan.|\n|*GroupExpression* | | |An expression over the columns that provides a set of distinct values. Typically it's a column name that already provides a restricted set of values. |\n|*MakeSeriesParameters*| | | Zero or more space-separated parameters in the form of *Name* `=` *Value* that control the behavior. See supported make series parameters.|\n\n> \n> The `start`, `end`, and `step` parameters are used to build an array of *AxisColumn* values. The array consists of values between `start` and `end`, with the `step` value representing the difference between one array element to the next. All *Aggregation* values are ordered respectively to this array.\n\n### Supported make series parameters\n\n|Name|Description|\n|:--|:--|\n|`kind` |Produces default result when the input of make-series operator is empty. Value: `nonempty`|   \n|`hint.shufflekey=<key>` |The `shufflekey` query shares the query load on cluster nodes, using a key to partition data. See shuffle query |  \n\n> \n>\n> The arrays generated by make-series are limited to 1,048,576 values (2^20). Trying to generate a larger array with make-series would result in either an error or a truncated array.\n\n**Alternate Syntax**\n\n*T* `| make-series`\n      [*Column* `=`] *Aggregation* [`default` `=` *DefaultValue*] [`,` ...]\n    `on` *AxisColumn* `in` `range(`*start*`,` *stop*`,` *step*`)`\n    [`by`\n      [*Column* `=`] *GroupExpression* [`,` ...]]\n\nThe generated series from the alternate syntax differs from the main syntax in two aspects:\n\n* The *stop* value is inclusive.\n* Binning the index axis is generated with bin() and not bin_at(), which means that *start* might not be included in the generated series.\n\nWe recommend that you use the main syntax of make-series and not the alternate syntax.",
        "example": "T | make-series PriceAvg=avg(Price) default=0\non Purchase from datetime(2016-09-10) to datetime(2016-09-13) step 1d by Supplier, Fruit\n\nlet data=datatable(timestamp:datetime, metric: real)\n[\n  datetime(2016-12-31T06:00), 50,\n  datetime(2017-01-01), 4,\n  datetime(2017-01-02), 3,\n  datetime(2017-01-03), 4,\n  datetime(2017-01-03T03:00), 6,\n  datetime(2017-01-05), 8,\n  datetime(2017-01-05T13:40), 13,\n  datetime(2017-01-06), 4,\n  datetime(2017-01-07), 3,\n  datetime(2017-01-08), 8,\n  datetime(2017-01-08T21:00), 8,\n  datetime(2017-01-09), 2,\n  datetime(2017-01-09T12:00), 11,\n  datetime(2017-01-10T05:00), 5,\n];\nlet interval = 1d;\nlet stime = datetime(2017-01-01);\nlet etime = datetime(2017-01-10);\ndata\n| make-series avg(metric) on timestamp from stime to etime step interval \n\nlet data=datatable(timestamp:datetime, metric: real)\n[\n  datetime(2016-12-31T06:00), 50,\n  datetime(2017-01-01), 4,\n  datetime(2017-01-02), 3,\n  datetime(2017-01-03), 4,\n  datetime(2017-01-03T03:00), 6,\n  datetime(2017-01-05), 8,\n  datetime(2017-01-05T13:40), 13,\n  datetime(2017-01-06), 4,\n  datetime(2017-01-07), 3,\n  datetime(2017-01-08), 8,\n  datetime(2017-01-08T21:00), 8,\n  datetime(2017-01-09), 2,\n  datetime(2017-01-09T12:00), 11,\n  datetime(2017-01-10T05:00), 5,\n];\nlet interval = 1d;\nlet stime = datetime(2017-01-01);\nlet etime = datetime(2017-01-10);\ndata\n| take 0\n| make-series avg(metric) default=1.0 on timestamp from stime to etime step interval \n| count \n\nlet data=datatable(timestamp:datetime, metric: real)\n[\n  datetime(2016-12-31T06:00), 50,\n  datetime(2017-01-01), 4,\n  datetime(2017-01-02), 3,\n  datetime(2017-01-03), 4,\n  datetime(2017-01-03T03:00), 6,\n  datetime(2017-01-05), 8,\n  datetime(2017-01-05T13:40), 13,\n  datetime(2017-01-06), 4,\n  datetime(2017-01-07), 3,\n  datetime(2017-01-08), 8,\n  datetime(2017-01-08T21:00), 8,\n  datetime(2017-01-09), 2,\n  datetime(2017-01-09T12:00), 11,\n  datetime(2017-01-10T05:00), 5,\n];\nlet interval = 1d;\nlet stime = datetime(2017-01-01);\nlet etime = datetime(2017-01-10);\ndata\n| take 0\n| make-series kind=nonempty avg(metric) default=1.0 on timestamp from stime to etime step interval \n\nlet startDate = datetime(2025-01-06);\nlet endDate = datetime(2025-02-09);\nlet data = datatable(Time: datetime, Value: int, other:int)\n[\n    datetime(2025-01-07), 10, 11,\n    datetime(2025-01-16), 20, 21,\n    datetime(2025-02-01), 30, 5\n];\ndata\n| make-series Value=sum(Value), other=-1 default=-2 on Time from startDate to endDate step 7d\n| mv-expand Value, Time, other\n| extend Time=todatetime(Time), Value=toint(Value), other=toint(other)\n| project-reorder Time, Value, other",
        "sourceLength": 17665,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-series-operator"
      }
    },
    {
      "name": "matches regex",
      "category": "Operator",
      "documentation": {
        "title": "matches regex",
        "description": "Filters a record set based on a case-sensitive regular expression value.\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *col* `matches` `regex` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar |  *True* | The regular expression regex.md used to filter. The maximum number of regex groups is 16. For more information about the regex syntax supported by Kusto, see regular expression. |",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State matches regex \"K.*S\"\n| where event_count > 10\n| project State, event_count",
        "sourceLength": 2275,
        "url": "https://learn.microsoft.com/en-us/kusto/query/matches-regex-operator"
      }
    },
    {
      "name": "mv-apply",
      "category": "Operator",
      "documentation": {
        "title": "mv-apply",
        "description": "Applies a subquery to each record, and returns the union of the results of\nall subqueries.\n\nFor example, assume a table `T` has a column `Metric` of type `dynamic`\nwhose values are arrays of `real` numbers. The following query locates the\ntwo biggest values in each `Metric` value, and returns the records corresponding\nto these values.\n\n```kusto\nT | mv-apply Metric to typeof(real) on \n(\n   top 2 by Metric desc\n)\n```\n\nThe `mv-apply` operator has the following\nprocessing steps:\n\n1. Uses the `mv-expand` operator to expand each record in the input into subtables (order is preserved).\n1. Applies the subquery for each of the subtables.\n1. Adds zero or more columns to the resulting subtable. These columns contain the values of the source columns that aren't expanded, and are repeated where needed.\n1. Returns the union of the results.\n\nThe `mv-apply` operator gets the following inputs:\n\n1. One or more expressions that evaluate into dynamic arrays to expand.\n   The number of records in each expanded subtable is the maximum length of\n   each of those dynamic arrays. Null values are added where multiple expressions are specified and the corresponding arrays have different lengths.\n\n1. Optionally, the names to assign the values of the expressions after expansion.\n   These names become the columns names in the subtables.\n   If not specified, the original name of the column is used when the expression is a column reference. A random name is used otherwise.\n\n   > \n   > We recommend that you use the default column names.\n\n1. The data types of the elements of those dynamic arrays, after expansion.\n   These data types become the column types of the columns in the subtables.\n   If not specified, `dynamic` is used.\n\n1. Optionally, the name of a column to add to the subtables that specifies the\n   0-based index of the element in the array that resulted in the subtable record.\n\n1. Optionally, the maximum number of array elements to expand.\n\nThe `mv-apply` operator can be thought of as a generalization of the\n`mv-expand` operator (in fact, the latter can be implemented\nby the former, if the subquery includes only projections.)",
        "syntax": "*T* `|` `mv-apply` [*ItemIndex*] *ColumnsToExpand* [*RowLimit*] `on` `(` *SubQuery* `)`\n\nWhere *ItemIndex* has the syntax:\n\n`with_itemindex` `=` *IndexColumnName*\n\n*ColumnsToExpand* is a comma-separated list of one or more elements of the form:\n\n[*Name* `=`] *ArrayExpression* [`to` `typeof` `(`*Typename*`)`]\n\n*RowLimit* is simply:\n\n`limit` *RowLimit*\n\n*SubQuery* has the same syntax of any query statement.",
        "returnInfo": "",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|`ItemIndex`| `string` ||Indicates the name of a column of type `long` that's appended to the input as part of the array-expansion phase and indicates the 0-based array index of the expanded value.|\n|`Name`| `string` ||The name to assign the array-expanded values of each array-expanded expression. If not specified, the name of the column is used if available. A random name is generated if *ArrayExpression* isn't a simple column name.|\n|`ArrayExpression`| `dynamic` | *True*|The array whose values are array-expanded. If the expression is the name of a column in the input, the input column is removed from the input and a new column of the same name, or *ColumnName* if specified, appears in the output.|\n|`Typename`| `string` ||The name of the type that the individual elements of the `dynamic` array *ArrayExpression* take. Elements that don't conform to this type are replaced by a null value. If unspecified, `dynamic` is used by default.|\n|`RowLimit`| `int` ||A limit on the number of records to generate from each record of the input. If unspecified, 2147483647 is used.|\n|`SubQuery`| `string` ||A tabular query expression with an implicit tabular source that gets applied to each array-expanded subtable.|\n\n>\n> Unlike the `mv-expand` operator, the `mv-apply` operator doesn't support `bagexpand=array` expansion. If the expression to be expanded is a property bag and not an array, you can use an inner `mv-expand` operator (see the following example).",
        "example": "",
        "sourceLength": 12767,
        "url": "https://learn.microsoft.com/en-us/kusto/query/mv-apply-operator"
      }
    },
    {
      "name": "mv-expand",
      "category": "Operator",
      "documentation": {
        "title": "mv-expand",
        "description": "Expands multi-value dynamic arrays or property bags into multiple records.\n\n`mv-expand` can be described as the opposite of the aggregation operators\nthat pack multiple values into a single dynamic-typed\narray or property bag, such as `summarize` ... `make-list()` and `make-series`.\nEach element in the (scalar) array or property bag generates a new record in the\noutput of the operator. All columns of the input that aren't expanded are duplicated to all the records in the output.",
        "syntax": "*T* `|mv-expand` [`kind=`(`bag` | `array`)] [`with_itemindex=` *IndexColumnName*] *ColumnName* [`to typeof(` *Typename*`)`] [`,` *ColumnName* ...] [`limit` *Rowlimit*]\n\n*T* `|mv-expand` [`kind=`(`bag` | `array`)] [*Name* `=`] *ArrayExpression* [`to typeof(`*Typename*`)`] [`,` [*Name* `=`] *ArrayExpression* [`to typeof(`*Typename*`)`] ...] [`limit` *Rowlimit*]",
        "returnInfo": "For each record in the input, the operator returns zero, one, or many records in the output,\nas determined in the following way:\n\n1. Input columns that aren't expanded appear in the output with their original value.\n   If a single input record is expanded into multiple output records, the value is duplicated\n   to all records.\n\n1. For each *ColumnName* or *ArrayExpression* that is expanded, the number of output records\n   is determined for each value as explained in modes of expansion. For each input record, the maximum number of output records is calculated. All arrays or property bags are expanded \"in parallel\"\n   so that missing values (if any) are replaced by null values. Elements are expanded into rows in the order that they appear in the original array/bag.\n\n1. If the dynamic value is null, then a single record is produced for that value (null).\n   If the dynamic value is an empty array or property bag, no record is produced for that value.\n   Otherwise, as many records are produced as there are elements in the dynamic value.\n\nThe expanded columns are of type `dynamic`, unless they're explicitly typed\nby using the `to typeof()` clause.\n\n### Modes of expansion\n\nTwo modes of property bag expansions are supported:\n\n* `kind=bag` or `bagexpansion=bag`: Property bags are expanded into single-entry property bags. This mode is the default mode.\n* `kind=array` or `bagexpansion=array`: Property bags are expanded into two-element `[`*key*`,`*value*`]` array structures, allowing uniform access to keys and values. This mode also allows, for example, running a distinct-count aggregation over property names.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*ColumnName*, *ArrayExpression*| `string` | *True*|A column reference, or a scalar expression with a value of type `dynamic` that holds an array or a property bag. The individual top-level elements of the array or property bag get expanded into multiple records.<br>When *ArrayExpression* is used and *Name* doesn't equal any input column name, the expanded value is extended into a new column in the output. Otherwise, the existing *ColumnName* is replaced.|\n|*Name*| `string` | |A name for the new column.|\n|*Typename*| `string` | *True*|Indicates the underlying type of the array's elements, which becomes the type of the column produced by the `mv-expand` operator. The operation of applying type is cast-only and doesn't include parsing or type-conversion. Array elements that don't conform with the declared type become `null` values.|\n|*RowLimit*| `int` ||The maximum number of rows generated from each original row. The default is 2147483647. `mvexpand` is a legacy and obsolete form of the operator `mv-expand`. The legacy version has a default row limit of 128.|\n|*IndexColumnName*| `string` ||If `with_itemindex` is specified, the output includes another column named *IndexColumnName* that contains the index starting at 0 of the item in the original expanded collection.|",
        "example": "",
        "sourceLength": 10634,
        "url": "https://learn.microsoft.com/en-us/kusto/query/mv-expand-operator"
      }
    },
    {
      "name": "!between",
      "category": "Operator",
      "documentation": {
        "title": "!between",
        "description": "Matches the input that is outside of the inclusive range.\n\n`!between` can operate on any numeric, datetime, or timespan expression.",
        "syntax": "*T* `|` `where` *expr* `!between` `(`*leftRange*` .. `*rightRange*`)`",
        "returnInfo": "Rows in *T* for which the predicate of (*expr* < *leftRange* or *expr* > *rightRange*) evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be matched.|\n| *expr* | scalar |  *True* | The expression to filter.|\n| *leftRange* | int, long, real, or datetime |  *True* | The expression of the left range. The range is inclusive.|\n| *rightRange* | int, long, real, datetime, or timespan |  *True* | The expression of the right range. The range is inclusive.<br/><br/>This value can only be of type timespan if *expr* and *leftRange* are both of type `datetime`. See example.|",
        "example": "",
        "sourceLength": 3141,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-between-operator"
      }
    },
    {
      "name": "!contains_cs",
      "category": "Operator",
      "documentation": {
        "title": "!contains_cs",
        "description": "Filters a record set for data that doesn't include a case-sensitive string. `!contains_cs` searches for characters rather than terms of three or more characters. The query scans the values in the column, which is slower than looking up a term in a term index.",
        "syntax": "### Case-sensitive syntax\n\n*T* `|` `where` *Column* `!contains_cs` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True*| The column by which to filter.|\n| *Expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !contains_cs \"AS\"\n| count\n\nStormEvents\n| summarize event_count=count() by State\n| where State !contains_cs \"TEX\"\n| where event_count > 3000\n| project State, event_count",
        "sourceLength": 2881,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-contains-cs-operator"
      }
    },
    {
      "name": "!contains",
      "category": "Operator",
      "documentation": {
        "title": "!contains",
        "description": "Filters a record set for data that doesn't include a case-sensitive string. `!contains` searches for characters rather than terms of three or more characters. The query scans the values in the column, which is slower than looking up a term in a term index.",
        "syntax": "### Case insensitive syntax\n\n*T* `|` `where` *Column* `!contains` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True*| The column by which to filter.|\n| *Expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !contains \"kan\"\n| where event_count > 3000\n| project State, event_count",
        "sourceLength": 2444,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-contains-operator"
      }
    },
    {
      "name": "notcontains",
      "category": "Operator",
      "documentation": {
        "title": "!contains",
        "description": "Filters a record set for data that doesn't include a case-sensitive string. `!contains` searches for characters rather than terms of three or more characters. The query scans the values in the column, which is slower than looking up a term in a term index.",
        "syntax": "### Case insensitive syntax\n\n*T* `|` `where` *Column* `!contains` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True*| The column by which to filter.|\n| *Expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !contains \"kan\"\n| where event_count > 3000\n| project State, event_count",
        "sourceLength": 2444,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-contains-operator"
      }
    },
    {
      "name": "!endswith_cs",
      "category": "Operator",
      "documentation": {
        "title": "!endswith_cs",
        "description": "Filters a record set for data that doesn't contain a case-insensitive ending string.",
        "syntax": "*T* `|` `where` *col* `!endswith_cs` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The column to filter. |\n| *expression* | `string` |  *True* | The expression used to filter. |",
        "example": "StormEvents\n| summarize Events=count() by State\n| where State !endswith_cs \"A\"",
        "sourceLength": 2122,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-endswith-cs-operator"
      }
    },
    {
      "name": "!endswith",
      "category": "Operator",
      "documentation": {
        "title": "!endswith",
        "description": "Filters a record set for data that excludes a case-insensitive ending string.",
        "syntax": "*T* `|` `where` *col* `!endswith` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered. |\n| *col* | `string` |  *True* | The column to filter. |\n| *expression* | `string` |  *True* | The expression used to filter. |",
        "example": "StormEvents\n| summarize Events=count() by State\n| where State !endswith \"is\"\n| where Events > 2000\n| project State, Events",
        "sourceLength": 2081,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-endswith-operator"
      }
    },
    {
      "name": "not-equals-cs",
      "category": "operator",
      "documentation": {
        "title": "!= (not equals)",
        "description": "Filters a record set for data that doesn't match a case-sensitive string.\n\nThe following table provides a comparison of the `==` (equals) operators:\n\n|Operator   |Description   |Case-Sensitive  |Example (yields `true`)  |\n|:-----------|:--------------|:----------------|:-------------------------|\n|`==`|Equals |Yes|`\"aBc\" == \"aBc\"`|\n|`!=`|Not equals |Yes |`\"abc\" != \"ABC\"`|\n|`=~` |Equals |No |`\"abc\" =~ \"ABC\"`|\n|`!~` |Not equals |No |`\"aBc\" !~ \"xyz\"`|\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *column* `!=` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where (State != \"FLORIDA\") and (event_count > 4000)\n| project State, event_count",
        "sourceLength": 2599,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-equals-cs-operator"
      }
    },
    {
      "name": "not-equals",
      "category": "operator",
      "documentation": {
        "title": "!~ (not equals)",
        "description": "Filters a record set for data that doesn't match a case-insensitive string.\n\nThe following table provides a comparison of the `==` (equals) operators:\n\n|Operator   |Description   |Case-Sensitive  |Example (yields `true`)  |\n|:-----------|:--------------|:----------------|:-------------------------|\n|`==`|Equals |Yes|`\"aBc\" == \"aBc\"`|\n|`!=`|Not equals |Yes |`\"abc\" != \"ABC\"`|\n|`=~` |Equals |No |`\"abc\" =~ \"ABC\"`|\n|`!~` |Not equals |No |`\"aBc\" !~ \"xyz\"`|\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *column* `!~` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where (State !~ \"texas\") and (event_count > 3000)\n| project State, event_count",
        "sourceLength": 2672,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-equals-operator"
      }
    },
    {
      "name": "!has_cs",
      "category": "Operator",
      "documentation": {
        "title": "!has_cs",
        "description": "Filters a record set for data that doesn't have a matching case-sensitive string. `!has_cs` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *column* `!has_cs` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !has_cs \"new\"\n| count",
        "sourceLength": 2187,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-has-cs-operator"
      }
    },
    {
      "name": "!has",
      "category": "Operator",
      "documentation": {
        "title": "!has",
        "description": "Filters a record set for data that doesn't have a matching case-insensitive string. `!has` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *column* `!has` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !has \"NEW\"\n| where event_count > 3000\n| project State, event_count",
        "sourceLength": 2368,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-has-operator"
      }
    },
    {
      "name": "!hasprefix_cs",
      "category": "Operator",
      "documentation": {
        "title": "!hasprefix_cs",
        "description": "Filters a record set for data that doesn't have a case-sensitive starting string. `!hasprefix_cs` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.\n\n|Operator   |Description   |Case-Sensitive  |Example (yields `true`)  |\n|:-----------|:--------------|:----------------|:-------------------------|\n|`hasprefix` |RHS is a term prefix in LHS |No |`\"North America\" hasprefix \"ame\"`|\n|`!hasprefix` |RHS isn't a term prefix in LHS |No |`\"North America\" !hasprefix \"mer\"`|\n|`hasprefix_cs` |RHS is a term prefix in LHS |Yes |`\"North America\" hasprefix_cs \"Ame\"`|\n|`!hasprefix_cs` |RHS isn't a term prefix in LHS |Yes |`\"North America\" !hasprefix_cs \"CA\"`|\n\n> \n> The following abbreviations are used in the above table:\n>\n> * RHS = right hand side of the expression\n> * LHS = left hand side of the expression\n\nFor more information about other operators and to determine which operator is most appropriate for your query, see datatype string operators.",
        "syntax": "*T* `|` `where` *column* `!hasprefix_cs` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !hasprefix_cs \"P\"\n| count",
        "sourceLength": 3087,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-hasprefix-cs-operator"
      }
    },
    {
      "name": "!hasprefix",
      "category": "Operator",
      "documentation": {
        "title": "!hasprefix operators",
        "description": "Filters a record set for data that doesn't include a case-insensitive starting string.\n\nFor best performance, use strings of three characters or more. `!hasprefix` searches for indexed terms, where an indexed term is three or more characters. If your term is fewer than three characters, the query scans the values in the column, which is slower than looking up the term in the term index.",
        "syntax": "*T* `|` `where` *Column* `!hasprefix` `(`*Expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input whose records are to be filtered.|\n| *Column* | `string` |  *True* | The column used to filter.|\n| *Expression* | `string` |  *True* | The expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !hasprefix \"N\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2502,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-hasprefix-operator"
      }
    },
    {
      "name": "!hassuffix_cs",
      "category": "Operator",
      "documentation": {
        "title": "!hassuffix_cs",
        "description": "Filters a record set for data that doesn't have a case-sensitive ending string. `!hassuffix_cs` returns `true` if there is no term inside string column ending with the specified string expression.",
        "syntax": "*T* `|` `where` *column* `!hassuffix_cs` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !hassuffix_cs \"AS\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2462,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-hassuffix-cs-operator"
      }
    },
    {
      "name": "!hassuffix",
      "category": "Operator",
      "documentation": {
        "title": "!hassuffix",
        "description": "Filters a record set for data that doesn't have a case-insensitive ending string. `!hassuffix` returns `true` if there's no term inside string column ending with the specified string expression.",
        "syntax": "*T* `|` `where` *column* `!hassuffix` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !hassuffix \"A\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2561,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-hassuffix-operator"
      }
    },
    {
      "name": "!in",
      "category": "Operator",
      "documentation": {
        "title": "!in",
        "description": "Filters a record set for data without a case-sensitive string.",
        "syntax": "*T* `|` `where` *col* `!in` `(`*expression*`,` ... `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar or tabular |  *True* | An expression that specifies the values for which to search. Each expression can be a scalar value or a tabular expression that produces a set of values. If a tabular expression has multiple columns, the first column is used. The search will consider up to 1,000,000 distinct values.|",
        "example": "",
        "sourceLength": 5081,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-in-cs-operator"
      }
    },
    {
      "name": "!in~",
      "category": "Operator",
      "documentation": {
        "title": "!in~",
        "description": "Filters a record set for data without a case-insensitive string.",
        "syntax": "*T* `|` `where` *col* `!in~` `(`*expression*`,` ... `)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column by which to filter.|\n| *expression* | scalar or tabular |  *True* | An expression that specifies the values for which to search. Each expression can be a scalar value or a tabular expression that produces a set of values. If a tabular expression has multiple columns, the first column is used. The search will consider up to 1,000,000 distinct values. |",
        "example": "",
        "sourceLength": 5174,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-in-operator"
      }
    },
    {
      "name": "!startswith_cs",
      "category": "Operator",
      "documentation": {
        "title": "!startswith_cs operators",
        "description": "Filters a record set for data that doesn't start with a case-sensitive search string.",
        "syntax": "*T* `|` `where` *column* `!startswith_cs` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !startswith_cs \"I\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2105,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-startswith-cs-operator"
      }
    },
    {
      "name": "!startswith",
      "category": "Operator",
      "documentation": {
        "title": "!startswith",
        "description": "Filters a record set for data that doesn't start with a case-insensitive search string.",
        "syntax": "*T* `|` `where` *column* `!startswith` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True*| The tabular input whose records are to be filtered.|\n| *column* | `string` |  *True*| The column by which to filter.|\n| *expression* | scalar |  *True*| The scalar or literal expression for which to search.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State !startswith \"i\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2178,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-startswith-operator"
      }
    },
    {
      "name": "parse-kv",
      "category": "Operator",
      "documentation": {
        "title": "parse-kv",
        "description": "Extracts structured information from a string expression and represents the information in a key/value form.\n\nThe following extraction modes are supported:\n\n* **Specified delimiter**: Extraction based on specified delimiters that dictate how keys/values and pairs are separated from each other.\n* **Non-specified delimiter**: Extraction with no need to specify delimiters. Any nonalphanumeric character is considered a delimiter.\n* **Regex**: Extraction based on regular expressions.",
        "syntax": "### Specified delimiter\n\n*T* `|` `parse-kv` *Expression* `as` `(` *KeysList* `)` `with` `(` `pair_delimiter` `=` *PairDelimiter* `,` `kv_delimiter` `=` *KvDelimiter*  [`,` `quote` `=` *QuoteChars* ... [`,` `escape` `=` *EscapeChar* ...]] [`,` `greedy` `=` `true`] `)`\n\n### Nonspecified delimiter\n\n*T* `|` `parse-kv` *Expression* `as` `(` *KeysList* `)` `with` `(` [`quote` `=` *QuoteChars* ... [`,` `escape` `=` *EscapeChar* ...]] `)`\n\n### Regex\n\n*T* `|` `parse-kv` *Expression* `as` `(` *KeysList* `)` `with` `(` `regex` `=` *RegexPattern*`)` `)`",
        "returnInfo": "The original input tabular expression *T*, extended with columns per specified keys to extract.\n\n> \n>\n> * If a key doesn't appear in a record, the corresponding column value is either `null` or an empty string, depending on the column type.\n> * Only keys that are listed in the operator are extracted.\n> * The first appearance of a key is extracted, and subsequent values are ignored.\n> * When you extract keys and values, leading and trailing white spaces are ignored.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*Expression*| `string` | *True*|The expression from which to extract key values.|\n|*KeysList*| `string` | *True*|A comma-separated list of key names and their value data types. The order of the keys doesn't have to match the order in which they appear in the text.|\n|*PairDelimiter*| `string` ||A delimiter that separates key value pairs from each other.|\n|*KvDelimiter*| `string` ||A delimiter that separates keys from values.|\n|*QuoteChars*| `string` ||A one- or two-character string literal representing opening and closing quotes that key name or the extracted value may be wrapped with. The parameter can be repeated to specify a separate set of opening/closing quotes.|\n|*EscapeChar*| `string` ||A one-character string literal describing a character that may be used for escaping special characters in a quoted value. The parameter can be repeated if multiple escape characters are used.|\n|*RegexPattern*| `string` ||A regular expression containing two capturing groups exactly. The first group represents the key name, and the second group represents the key value.|",
        "example": "",
        "sourceLength": 12292,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-kv-operator"
      }
    },
    {
      "name": "parse",
      "category": "Operator",
      "documentation": {
        "title": "parse",
        "description": "Evaluates a string expression and parses its value into one or more calculated columns. The calculated columns return `null` values for unsuccessfully parsed strings. If there's no need to use rows where parsing doesn't succeed, prefer using the parse-where operator.",
        "syntax": "*T* `| parse` [ `kind=`*kind* [ `flags=`*regexFlags* ]] *expression* `with` [ `*` ] *stringConstant* *columnName* [`:` *columnType*] [ `*` ] `,` ...",
        "returnInfo": "The input table extended according to the list of columns that are provided to the operator.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to parse.|\n| *kind* | `string` |  *True* | One of the supported kind values. The default value is `simple`.|\n| *regexFlags* | `string` | |If *kind* is `regex`, then you can specify regex flags to be used like `U` for ungreedy, `m` for multi-line mode, `s` for match new line `\\n`, and `i` for case-insensitive. More flags can be found in Flags.|\n| *expression* | `string` |  *True* | An expression that evaluates to a string.|\n| *stringConstant* | `string` |  *True* | A string constant for which to search and parse.|\n| *columnName* | `string` |  *True* | The name of a column to assign a value to, extracted from the string expression. |\n| *columnType* | `string` | | The scalar value that indicates the type to convert the value to. The default is `string`.|\n\n> \n>\n> * The parse pattern can start with *ColumnName* in addition to *StringConstant*.\n> * Use `*` in the pattern to skip junk values. The `*` can't be used after a `string` type column.\n> * If the parsed *expression* isn't of type `string`, it will be converted to type `string`.\n> * Use `project` if you also want to drop or rename some columns.\n\n### Supported `kind` values\n\n|Text|Description|\n|:--|:--|\n| `simple` | This is the default value. *stringConstant* is a regular string value and the match is strict. All string delimiters should appear in the parsed string, and all extended columns must match the required types.|\n| `regex` | *stringConstant* can be a regular expression and the match is strict. All string delimiters, which can be a regex for this mode, should appear in the parsed string, and all extended columns must match the required types.|\n| `relaxed` | *stringConstant* is a regular string value and the match is relaxed. All string delimiters should appear in the parsed string, but extended columns might partially match the required types. Extended columns that didn't match the required types get the value `null`.|\n\n### Regex mode\n\nIn regex mode, parse translates the pattern to a regex. Use regular expressions to do the matching and use numbered captured groups that are handled internally. For example:\n\n```kusto\nparse kind=regex Col with * <regex1> var1:string <regex2> var2:long\n```\n\nIn the parse statement, the regex internally generated by the parse is `.*?<regex1>(.*?)<regex2>(\\-\\d+)`.\n\n* `*` was translated to `.*?`.\n\n* `string` was translated to `.*?`.\n\n* `long` was translated to `\\-\\d+`.",
        "example": "",
        "sourceLength": 23570,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-operator"
      }
    },
    {
      "name": "parse-where",
      "category": "Operator",
      "documentation": {
        "title": "parse-where",
        "description": "Evaluates a string expression, and parses its value into one or more calculated columns. The result is only the successfully parsed strings.\n\n`parse-where` parses the strings in the same way as parse, and filters out strings that were not parsed successfully.\n\nSee parse operator, which produces nulls for unsuccessfully parsed strings.",
        "syntax": "*T* `| parse-where` [`kind=`*kind* [`flags=` *regexFlags*]] *expression* `with` `*` (*stringConstant* *columnName* [`:` *columnType*]) `*`...",
        "returnInfo": "The input table, which is extended according to the list of columns that are provided to the operator.\n\n> \n> Only successfully parsed strings will be in the output. Strings that don't match the pattern will be filtered out.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to parse.|\n| *kind* | `string` |  *True* | One of the supported kind values. The default value is `simple`.|\n| *regexFlags* | `string` | |If *kind* is `regex`, then you can specify regex flags to be used like `U` for ungreedy, `m` for multi-line mode, `s` for match new line `\\n`, and `i` for case-insensitive. More flags can be found in Flags.|\n| *expression* | `string` |  *True* | An expression that evaluates to a string.|\n| *stringConstant* | `string` |  *True* | A string constant for which to search and parse.|\n| *columnName* | `string` |  *True* | The name of a column to assign a value to, extracted from the string expression. |\n| *columnType* | `string` | | The scalar value that indicates the type to convert the value to. The default is the `string`.|\n\n>\n>\n> * Use project if you also want to drop or rename some columns.\n> * Use `*` in the pattern to skip junk values. This value can't be used after `string` column.\n> * The parse pattern may start with *ColumnName*, in addition to *StringConstant*.\n> * If the parsed *expression* isn't of type `string`, it will be converted to type `string`.\n\n### Supported kind values\n\n|Text|Description|\n|:--|:--|\n| `simple` | This is the default value. *stringConstant* is a regular string value and the match is strict. All string delimiters should appear in the parsed string, and all extended columns must match the required types.|\n| `regex` | *stringConstant* may be a regular expression and the match is strict. All string delimiters, which can be a regex for this mode, should appear in the parsed string, and all extended columns must match the required types.|\n\n### Regex mode\n\nIn regex mode, parse will translate the pattern to a regex and use regular expressions in order to do the matching using numbered captured groups that are handled internally. For example:\n\n```kusto\nparse-where kind=regex Col with * <regex1> var1:string <regex2> var2:long\n```\n\nThe regex that will be generated by the parse internally is `.*?<regex1>(.*?)<regex2>(\\-\\d+)`.\n\n* `*` was translated to `.*?`.\n* `string` was translated to `.*?`.\n* `long` was translated to `\\-\\d+`.",
        "example": "",
        "sourceLength": 14499,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-where-operator"
      }
    },
    {
      "name": "partition",
      "category": "operator",
      "documentation": {
        "title": "partition",
        "description": "The partition operator partitions the records of its input table into multiple subtables according to values in a key column. The operator runs a subquery on each subtable, and produces a single output table that is the union of the results of all subqueries.\n\nThe partition operator is useful when you need to perform a subquery only on a subset of rows that belong to the same partition key, and not a query of the whole dataset. These subqueries could include aggregate functions, window functions, top *N* and others.\n\nThe partition operator supports several strategies of subquery operation:\n\n* Native - use with an implicit data source with thousands of key partition values.\n* Shuffle - use with an implicit source with millions of key partition values.\n* Legacy - use with an implicit or explicit source for 64 or less key partition values.",
        "syntax": "*T* `|` `partition` [ `hint.strategy=`*Strategy* ] [ *Hints* ] `by` *Column* `(` *TransformationSubQuery* `)`\n\n*T* `|` `partition` [ `hint.strategy=legacy` ] [ *Hints* ] `by` *Column* `{` *SubQueryWithSource* `}`",
        "returnInfo": "The operator returns a union of the results of the individual subqueries.\n\nThe partition operator supports several strategies of subquery operation: native, shuffle, and legacy.\n\n> \n> The distinction between the `native` and `shuffle` strategies allows the caller to indicate the cardinality and execution strategy of the subquery. This choice may affect how long the subquery takes to complete but doesn't change the end result.\n\n### Native strategy\n\nThis strategy should be applied when the number of distinct values of the partition key isn't large, roughly in the thousands.\n\nThe subquery must be a tabular transformation that doesn't specify a tabular source. The source is implicit and is assigned according to the subtable partitions. Only certain supported operators can be used in the subquery. There's no restriction on the number of partitions.\n\nTo use this strategy, specify `hint.strategy=native`.\n\n### Shuffle strategy\n\nThis strategy should be applied when the number of distinct values of the partition key is large, in the millions.\n\nThe subquery must be a tabular transformation that doesn't specify a tabular source. The source is implicit and is assigned according to the subtable partitions. Only certain supported operators can be used in the subquery. There's no restriction on the number of partitions.\n\nTo use this strategy, specify `hint.strategy=shuffle`. For more information about shuffle strategy and performance, see shuffle query.\n\n### Supported operators for the native and shuffle strategies\n\nThe following list of operators can be used in subqueries with the native or shuffle strategies:\n\n* count\n* distinct\n* extend\n* make-series (partially supported, see note)\n* mv-apply\n* mv-expand\n* parse\n* parse-where\n* project\n* project-away\n* project-keep\n* project-rename\n* project-reorder\n* reduce\n* sample\n* sample-distinct\n* scan\n* search\n* serialize\n* sort\n* summarize\n* take\n* top\n* top-hitters\n* top-nested\n* where\n\n> \n> * Operators that reference a table source other than the subtable partitions aren't compatible with the `native` and `shuffle` strategies. For example, join, union, externaldata, and evaluate (plugins). For such scenarios, resort to the legacy strategy.\n> * The fork operator isn't supported for any strategy type, as the subquery must return a single tabular result.\n> * The make-series operator is only partially supported within the `partition by` operator. It is supported only when both the `from` and `to` parameters are specified.\n\n### Legacy strategy\n\nFor historical reasons, the `legacy` strategy is the default strategy. However, we recommend favoring the native or shuffle strategies, as the `legacy` approach is limited to 64 partitions and is less efficient.\n\nIn some scenarios, the `legacy` strategy might be necessary due to its support for including a tabular source in the subquery. In such cases, the subquery can only reference the key column, *Column*, from the input tabular source, *T*. To reference the column, use the syntax `toscalar(`*Column*`)`.\n\nIf the subquery is a tabular transformation without a tabular source, the source is implicit and is based on the subtable partitions.\n\nTo use this strategy, specify `hint.strategy=legacy` or omit any other strategy indication.\n\n> \n> An error occurs if the partition column, *Column*, contains more than 64 distinct values.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The input tabular source.|\n| *Strategy* | `string` | | The value `legacy`, `shuffle`, or `native`. This hint defines the execution strategy of the partition operator.</br></br> If no strategy is specified, the `legacy` strategy is used. For more information, see Strategies. | \n| *Column*| `string` |  *True* | The name of a column in *T* whose values determine how to partition the input tabular source.|\n| *TransformationSubQuery*| `string` |  *True* | A tabular transformation expression. The source is implicitly the subtables produced by partitioning the records of *T*. Each subtable is homogenous on the value of *Column*.</br></br> The expression must provide only one tabular result and shouldn't have other types of statements, such as `let` statements.|\n| *SubQueryWithSource*| `string` |  *True* | A tabular expression that includes its own tabular source, such as a table reference. This syntax is only supported with the legacy strategy. The subquery can only reference the key column, *Column*, from *T*. To reference the column, use the syntax `toscalar(`*Column*`)`.</br></br> The expression must provide only one tabular result and shouldn't have other types of statements, such as `let` statements.|\n| *Hints*| `string` | | Zero or more space-separated parameters in the form of: *HintName* `=` *Value* that control the behavior of the operator. See the supported hints per strategy type.|\n\n### Supported hints\n\n|Hint name|Type|Strategy|Description|\n|:--|:--|:--|:--|\n|`hint.shufflekey`| `string` | shuffle | The partition key used to run the partition operator with the `shuffle` strategy. |\n|`hint.materialized`| `bool` | legacy | If set to `true`, materializes the source of the `partition` operator. The default value is `false`. |\n|`hint.concurrency`| `int` | legacy | Determines how many partitions to run in parallel. The default value is `16`.|\n|`hint.spread`| `int` | legacy | Determines how to distribute the partitions among cluster nodes. The default value is `1`.</br></br> For example, if there are *N* partitions and the spread hint is set to *P*, then the *N* partitions are processed by *P* different cluster nodes equally, in parallel/sequentially depending on the concurrency hint.|",
        "example": "",
        "sourceLength": 13199,
        "url": "https://learn.microsoft.com/en-us/kusto/query/partition-operator"
      }
    },
    {
      "name": "print",
      "category": "Operator",
      "documentation": {
        "title": "print",
        "description": "Outputs a single row with one or more scalar expression results as columns.",
        "syntax": "`print` [*ColumnName* `=`] *ScalarExpression* [`,` ...]",
        "returnInfo": "A table with one or more columns and a single row. Each column returns the corresponding value of the evaluated *ScalarExpression*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ColumnName* | `string` | | The name to assign to the output column.|\n| *ScalarExpression* | `string` |  *True* | The expression to evaluate.|",
        "example": "",
        "sourceLength": 2427,
        "url": "https://learn.microsoft.com/en-us/kusto/query/print-operator"
      }
    },
    {
      "name": "project-away",
      "category": "Operator",
      "documentation": {
        "title": "project-away",
        "description": "Select what columns from the input table to exclude from the output table.",
        "syntax": "*T* `| project-away` *ColumnNameOrPattern* [`,` ...]",
        "returnInfo": "A table with columns that weren't named as arguments. Contains same number of rows as the input table.\n\n> \n> You can `project-away` any columns that are present in the original table or that were computed as part of the query.\n\n> \n> The order of the columns in the result is determined by their original order in the table. Only the columns that were specified as arguments are dropped. The other columns are included in the result.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input from which to remove columns. |\n| *ColumnNameOrPattern* | `string` |  *True* | One or more column names or column wildcard-patterns to be removed from the output.|",
        "example": "PopulationData\n| project-away Population",
        "sourceLength": 5181,
        "url": "https://learn.microsoft.com/en-us/kusto/query/project-away-operator"
      }
    },
    {
      "name": "project-by-names",
      "category": "Operator",
      "documentation": {
        "title": "project-by-names",
        "description": "Select and reorder a subset of columns from the input table by their names, dynamic arrays, or name patterns.",
        "syntax": "*T* `| project-by-names` *ColumnSpecifier* [`,` ...]",
        "returnInfo": "A table containing only the columns specified in the *ColumnSpecifier* parameter, in the specified order. All unspecified columns are excluded from the result.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input from which to remove columns. |\n| *ColumnSpecifier* | `string` |  *True* | The name of the column, dynamic array of column names, or column wildcard pattern to keep and reorder.|\n\n> \n> * Columns in the result are ordered based on the sequence in which they're specified or matched.\n> * Column names that don't match any existing column are safely ignored.\n> * Wildcard characters (*) can be used to match multiple columns by name pattern.\n> * ColumnSpecifier can include the result of a column_names_of(Table) expression, which returns a dynamic array of column names from the specified table.\n> * Subqueries or scalar expressions like toscalar() aren't supported in the *ColumnSpecifier* parameter.\n> * For related functionality:\n>   * Use `project-away` to exclude specific columns from the result.\n>   * Use `project-keep` to retain columns without changing their order.\n>   * Use `project-rename` to rename columns.",
        "example": "",
        "sourceLength": 7634,
        "url": "https://learn.microsoft.com/en-us/kusto/query/project-by-names-operator"
      }
    },
    {
      "name": "project-keep",
      "category": "Operator",
      "documentation": {
        "title": "project-keep",
        "description": "Select what columns from the input to keep in the output. Only the columns that are specified as arguments will be shown in the result. The other columns are excluded.",
        "syntax": "*T* `| project-keep` *ColumnNameOrPattern* [`,` ...]",
        "returnInfo": "A table with columns that were named as arguments. Contains same number of rows as the input table.\n\n> \n> You can `project-keep` any columns that are present in the original table or that were computed as part of the query.\n\n> \n> The order of the columns in the result is determined by their original order in the table. Only the columns that were specified as arguments are kept. The other columns are excluded from the result.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input from which to keep columns.|\n| *ColumnNameOrPattern* | `string` |  *True* | One or more column names or column wildcard-patterns to be kept in the output.|",
        "example": "ConferenceSessions\n| project-keep session*",
        "sourceLength": 3565,
        "url": "https://learn.microsoft.com/en-us/kusto/query/project-keep-operator"
      }
    },
    {
      "name": "project",
      "category": "Operator",
      "documentation": {
        "title": "project",
        "description": "Select the columns to include, rename or drop, and insert new computed columns.\n\nThe order of the columns in the result is specified by the order of the arguments. Only the columns specified in the arguments are included in the result. Any other columns in the input are dropped.",
        "syntax": "*T* `| project` [*ColumnName* | `(`*ColumnName*[`,`]`)` `=`] *Expression* [`,` ...]\n\nor\n\n*T* `| project` *ColumnName* [`=` *Expression*] [`,` ...]",
        "returnInfo": "A table with columns that were named as arguments. Contains same number of rows as the input table.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n| *T* | `string` |  *True* | The tabular input for which to project certain columns. |\n| *ColumnName* | `string` | | A column name or comma-separated list of column names to appear in the output. |\n| *Expression* | `string` | | The scalar expression to perform over the input. |\n\n* Either *ColumnName* or *Expression* must be specified.\n* If there's no *Expression*, then a column of *ColumnName* must appear in the input.\n* If *ColumnName* is omitted, the output column name of *Expression* will be automatically generated.\n* If *Expression* returns more than one column, a list of column names can be specified in parentheses. If a list of the column names isn't specified, all *Expression*'s output columns with generated names will be added to the output.\n\n> \n> It's not recommended to return a new calculated column with the same name as an existing column in the input.",
        "example": "",
        "sourceLength": 4318,
        "url": "https://learn.microsoft.com/en-us/kusto/query/project-operator"
      }
    },
    {
      "name": "project-rename",
      "category": "Operator",
      "documentation": {
        "title": "project-rename",
        "description": "Renames columns in the output table.",
        "syntax": "*T* `| project-rename` *NewColumnName* = *ExistingColumnName* [`,` ...]",
        "returnInfo": "A table that has the columns in the same order as in an existing table, with columns renamed.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The input tabular data.|\n| *NewColumnName* | `string` |  *True* | The new column name.|\n| *ExistingColumnName* | `string` |  *True* | The name of the existing column to rename.|",
        "example": "print a='alpha', b='bravo', c='charlie'\n| project-rename new_a=a, new_b=b, new_c=c",
        "sourceLength": 1857,
        "url": "https://learn.microsoft.com/en-us/kusto/query/project-rename-operator"
      }
    },
    {
      "name": "project-reorder",
      "category": "Operator",
      "documentation": {
        "title": "project-reorder",
        "description": "Reorders columns in the output table.",
        "syntax": "*T* `| project-reorder` *ColumnNameOrPattern* [`asc` | `desc` | `granny-asc` | `granny-desc`] [`,` ...]",
        "returnInfo": "A table that contains columns in the order specified by the operator arguments. `project-reorder` doesn't rename or remove columns from the table, therefore, all columns that existed in the source table, appear in the result table.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The input tabular data.|\n| *ColumnNameOrPattern* | `string` |  *True* | The name of the column or column wildcard pattern by which to order the columns. |\n| `asc`, `desc`, `granny-asc`, `granny-desc` | `string` | | Indicates how to order the columns when a wildcard pattern is used. `asc` or `desc` orders columns by column name in ascending or descending manner, respectively. `granny-asc` or `granny-desc` orders by ascending or descending, respectively, while secondarily sorting by the next numeric value. For example, `a20` comes before `a100` when `granny-asc` is specified.|\n\n> \n>\n> * If no explicit ordering is specified, the order is determined by the matching columns as they appear in the source table.\n> * In ambiguous *ColumnNameOrPattern* matching, the column appears in the first position matching the pattern.\n> * Specifying columns for the `project-reorder` is optional. Columns that aren't specified explicitly appear as the last columns of the output table.\n> * To remove columns, use `project-away`.\n> * To choose which columns to keep, use `project-keep`.\n> * To rename columns, use `project-rename`.",
        "example": "",
        "sourceLength": 3654,
        "url": "https://learn.microsoft.com/en-us/kusto/query/project-reorder-operator"
      }
    },
    {
      "name": "range",
      "category": "Operator",
      "documentation": {
        "title": "range",
        "description": "Generates a single-column table of values.\n\n> \n> This operator doesn't take a tabular input.",
        "syntax": "`range` *columnName* `from` *start* `to` *stop* `step` *step*",
        "returnInfo": "A table with a single column called *columnName*,\nwhose values are *start*, *start* `+` *step*, ... up to and until *stop*.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*columnName*| `string` | *True*| The name of the single column in the output table.|\n|*start*|int, long, real, datetime, or timespan| *True*| The smallest value in the output.|\n|*stop*|int, long, real, datetime, or timespan| *True*| The highest value being generated in the output or a bound on the highest value if *step* is over this value.|\n|*step*|int, long, real, datetime, or timespan| *True*| The difference between two consecutive values.|\n\n> \n> The values can't reference the columns of any table. If you want to compute the range based on an input table, use the range function potentially with the mv-expand operator.",
        "example": "",
        "sourceLength": 6339,
        "url": "https://learn.microsoft.com/en-us/kusto/query/range-operator"
      }
    },
    {
      "name": "reduce",
      "category": "Operator",
      "documentation": {
        "title": "reduce",
        "description": "Groups a set of strings together based on value similarity.\n\nFor each such group, the operator returns a `pattern`, `count`, and `representative`. The `pattern` best describes the group, in which the `*` character represents a wildcard. The `count` is the number of values in the group, and the `representative` is one of the original values in the group.",
        "syntax": "*T* `|` `reduce` [`kind` `=` *ReduceKind*] `by` *Expr* [`with` [`threshold` `=` *Threshold*] [`,` `characters` `=` *Characters*]]",
        "returnInfo": "A table with as many rows as there are groups and columns titled `pattern`, `count`, and `representative`. The `pattern` best describes the group, in which the `*` character represents a wildcard, or placeholder for an arbitrary insertion string. The `count` is the number of values in the group, and the `representative` is one of the original values in the group.\n\nFor example, the result of `reduce by city` might include:\n\n|Pattern     |Count |Representative|\n|:------------|:------|:--------------|\n| San *      | 5182 |San Bernard   |\n| Saint *    | 2846 |Saint Lucy    |\n| Moscow     | 3726 |Moscow        |\n| \\* -on- \\* | 2730 |One -on- One  |\n| Paris      | 2716 |Paris         |",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Expr* | `string` |  *True* | The value by which to reduce.|\n| *Threshold* | `real` | | A value between 0 and 1 that determines the minimum fraction of rows required to match the grouping criteria in order to trigger a reduction operation. The default value is 0.1.<br/><br/> The threshold parameter determines the minimum level of similarity required for values to be grouped together. With a smaller threshold value (closer to 0), more similar values are grouped together, resulting in fewer but more similar groups. A larger threshold value (closer to 1) requires less similarity, resulting in more groups that are less similar. We recommend setting a small threshold value for large inputs. See Examples.|\n| *Characters* | `string` | | A list of characters that separate between terms. The default is every non-ascii numeric character. For examples, see Examples.|\n| *ReduceKind* | `string` | | The only valid value is `source`. If `source` is specified, the operator appends the `Pattern` column to the existing rows in the table instead of aggregating by `Pattern`.|",
        "example": "range x from 1 to 1000 step 1\n| project MyText = strcat(\"MachineLearningX\", tostring(toint(rand(10))))\n| reduce by MyText  with threshold=0.001 , characters = \"X\" \n\nrange x from 1 to 1000 step 1\n| project MyText = strcat(\"MachineLearningX\", tostring(toint(rand(10))))\n| reduce by MyText  with threshold=0.9 , characters = \"X\" \n\nrange x from 1 to 10 step 1 | project str = strcat(\"foo\", \"Z\", tostring(x)) | reduce by str\n\nrange x from 1 to 10 step 1 | project str = strcat(\"foo\", \"Z\", tostring(x)) | reduce by str with characters=\"Z\"\n\nTrace\n| take 10000\n| extend Text = replace(@\"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\", \"GUID\", Text)\n| reduce by Text with characters=\"-_\"",
        "sourceLength": 8203,
        "url": "https://learn.microsoft.com/en-us/kusto/query/reduce-operator"
      }
    },
    {
      "name": "render",
      "category": "Operator",
      "documentation": {
        "title": "render",
        "description": "Instructs the user agent to render a visualization of the query results.  \n\nThe render operator must be the last operator in the query, and can only be used with queries that produce a single tabular data stream result.  The render operator doesn't modify data. It injects an annotation (\"Visualization\") into the result's extended  properties. The annotation contains the information provided by the operator in the query. The interpretation of the visualization information is done by the user agent. Different agents, such as Kusto.Explorer or Azure Data Explorer web UI, may support different visualizations.\n\nThe data model of the render operator looks at the tabular data as if it has\nthree kinds of columns:\n\n* The x axis column (indicated by the `xcolumn` property).\n* The series columns (any number of columns indicated by the `series` property.) For each record, the combined values of these columns define a single series, and the chart has as many series as there are distinct combined values.\n* The y axis columns (any number of columns indicated by the `ycolumns` property). For each record, the series has as many measurements (\"points\" in the chart) as there are y-axis columns.\n\n> \n>\n> * Use `where`, `summarize` and `top` to limit the volume that you display.\n> * Sort the data to define the order of the x-axis.\n> * User agents are free to \"guess\" the value of properties that are not specified\n  by the query. In particular, having \"uninteresting\" columns in the schema of\n  the result might translate into them guessing wrong. Try projecting-away such\n  columns when that happens.",
        "syntax": "*T* `|` `render` *visualization* [`with` `(` *propertyName* `=` *propertyValue* [`,` ...]`)`]",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | Input table name.\n| *visualization* | `string` |  *True* | Indicates the kind of visualization to use. Must be one of the supported values in the following list.|\n| *propertyName*, *propertyValue* | `string` | | A comma-separated list of key-value property pairs. See supported properties.|\n\n### Visualization\n\n### Supported properties\n\n*PropertyName*/*PropertyValue* indicate additional information to use when rendering.\n  All properties are optional. The supported properties are:\n\n#### `kind` property\n\nThis visualization can be further elaborated by providing the `kind` property.\nThe supported values of this property are:\n\n|*Visualization*|`kind`             |Description                        |\n|:---------------|:-------------------|:-----------------------------------|\n|`areachart`    |`default`          |Each \"area\" stands on its own.     |\n|               |`unstacked`        |Same as `default`.                 |\n|               |`stacked`          |Stack \"areas\" to the right.        |\n|               |`stacked100`       |Stack \"areas\" to the right and stretch each one to the same width as the others.|\n|`barchart`     |`default`          |Each \"bar\" stands on its own.      |\n|               |`unstacked`        |Same as `default`.                 |\n|               |`stacked`          |Stack \"bars\".                      |\n|               |`stacked100`       |Stack \"bars\" and stretch each one to the same width as the others.|\n|`columnchart`  |`default`          |Each \"column\" stands on its own.   |\n|               |`unstacked`        |Same as `default`.                 |\n|               |`stacked`          |Stack \"columns\" one atop the other.|\n|               |`stacked100`       |Stack \"columns\" and stretch each one to the same height as the others.|\n|`scatterchart` |`map`              |Expected columns are [Longitude, Latitude] or GeoJSON point. Series column is optional. For more information, see Geospatial visualizations. |\n|`piechart`     |`map`              |Expected columns are [Longitude, Latitude] or GeoJSON point, color-axis and numeric. Supported in Kusto Explorer desktop. For more information, see Geospatial visualizations.|\n\n::: moniker range=\"microsoft-fabric || azure-data-explorer\"",
        "example": "InsightsMetrics\n| where Computer == \"DC00.NA.contosohotels.com\"\n| where Namespace  == \"Processor\" and Name == \"UtilizationPercentage\"\n| summarize avg(Val) by Computer, bin(TimeGenerated, 1h)\n| render timechart",
        "sourceLength": 18490,
        "url": "https://learn.microsoft.com/en-us/kusto/query/render-operator"
      }
    },
    {
      "name": "sample-distinct",
      "category": "Operator",
      "documentation": {
        "title": "sample-distinct",
        "description": "Returns a single column that contains up to the specified number of distinct values of the requested column.\n\nThe operator tries to return an answer as quickly as possible rather than trying to make a fair sample.",
        "syntax": "*T* `| sample-distinct` *NumberOfValues* `of` *ColumnName*",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T*| `string` |  *True* | The input tabular expression. |\n| *NumberOfValues*| int, long, or real |  *True* | The number distinct values of *T* to return. You can specify any numeric expression.|\n| *ColumnName*| `string` |  *True* | The name of the column from which to sample.|\n\n> \n>\n> * Use the top-hitters operator to get the top values.\n> * Refer to the sample operator to sample data rows.",
        "example": "",
        "sourceLength": 3052,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sample-distinct-operator"
      }
    },
    {
      "name": "sample",
      "category": "Operator",
      "documentation": {
        "title": "sample",
        "description": "Returns up to the specified number of random rows from the input table.\n\n> \n>\n> * `sample` is geared for speed rather than even distribution of values. Specifically, it means that it will not produce 'fair' results if used after operators that union 2 datasets of different sizes (such as a `union` or `join` operators). It's recommended to use `sample` right after the table reference and filters.\n> * `sample` is a non-deterministic operator, and returns a different result set each time it's evaluated during the query. For example, the following query yields two different rows (even if one would expect to return the same row twice).",
        "syntax": "*T* `| sample` *NumberOfRows*",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T*| `string` |  *True* | The input tabular expression. |\n| *NumberOfRows*| int, long, or real |  *True* | The number of rows to return. You can specify any numeric expression.|",
        "example": "",
        "sourceLength": 5669,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sample-operator"
      }
    },
    {
      "name": "scan",
      "category": "Operator",
      "documentation": {
        "title": "scan",
        "description": "Scans data, matches, and builds sequences based on the predicates.\n\nMatching records are determined according to predicates defined in the operator’s steps. A predicate can depend on the state that is generated by previous steps.\nThe output for the matching record is determined by the input record and assignments defined in the operator's steps.",
        "syntax": "*T* `| scan` [ `with_match_id` `=` *MatchIdColumnName* ] [ `declare` `(` *ColumnDeclarations* `)` ] `with` `(` *StepDefinitions* `)`\n\n### *ColumnDeclarations* syntax\n\n*ColumnName* `:` *ColumnType*[`=` *DefaultValue* ] [`,` ... ]\n\n### *StepDefinition* syntax\n\n`step` *StepName* [ `output` = `all` | `last` | `none`] `:` *Condition* [ `=>` *Column* `=` *Assignment* [`,` ... ] ] `;`",
        "returnInfo": "A record for each match of a record from the input to a step. The schema of the output is the schema of the source extended with the column in the `declare` clause.\n\n`scan` goes over the serialized input data, record by record, comparing each record against each step’s condition while taking into account the current state of each step.\n\n### State\n\nThe underlying state of the `scan` operator can be thought of as a table with a row for each `step`. Each step maintains its own state with the latest values of the columns and declared variables from all of the previous steps and the current step. If relevant, it also holds the match ID for the ongoing sequence.\n\nIf a scan operator has *n* steps named *s_1*, *s_2*, ..., *s_n* then step *s_k* would have *k* records in its state corresponding to *s_1*, *s_2*, ..., *s_k*. The *StepName*.*ColumnName* format is used to reference a value in the state. For instance, `s_2.col1` would reference column `col1` that belongs to step *s_2* in the state of *s_k*. For a detailed example, see the scan logic walkthrough.\n\nThe state starts empty and updates whenever a scanned input record matches a step. When the state of the current step is nonempty, the step is referred to as having an *active sequence*.\n\n### Matching logic\n\nEach input record is evaluated against all of the steps in reverse order, from the last step to the first. When a record *r* is evaluated against some step *s_k*, the following logic is applied:\n\n* **Check 1:** If the state of the previous step (*s_k-1*) is nonempty, and *r* meets the *Condition* of *s_k*, then a match occurs. The match leads to the following actions:\n    1. The state of *s_k* is cleared.\n    1. The state of *s_k-1* is promoted to become the state of *s_k*.\n    1. The assignments of *s_k* are calculated and extend *r*.\n    1. The extended *r* is added to the output and to the state of *s_k*.\n\n    > \n    > If **Check 1** results in a match, **Check 2** is disregarded, and *r* moves on to be evaluated against *s_k-1*.\n\n* **Check 2:** If the state of *s_k* has an active sequence or *s_k* is the first step, and *r* meets the *Condition* of *s_k*, then a match occurs. The match leads to the following actions:\n    1. The assignments of *s_k* are calculated and extend *r*.\n    1. The values that represent *s_k* in the state of *s_k* are replaced with the values of the extended *r*.\n    1. If *s_k* is defined as `output=all`, the extended *r* is added to the output.\n    1. If *s_k* is the first step, a new sequence begins and the match ID increases by `1`. This only affects the output when `with_match_id` is used.\n\nOnce the checks for *s_k* are complete, *r* moves on to be evaluated against *s_k-1*.\n\nFor a detailed example of this logic, see the scan logic walkthrough.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*T*| `string` | *True*|The input tabular source.|\n| *MatchIdColumnName* | `string` | |  The name of a column of type `long` that is appended to the output as part of the scan execution. Indicates the 0-based index of the match for the record. |\n| *ColumnDeclarations* | `string` | | Declares an extension to the schema of *T*. These columns are assigned values in the steps. If not assigned, the *DefaultValue* is returned. Unless otherwise specified, *DefaultValue* is `null`.|\n| *StepName* | `string` |  *True* | Used to reference values in the state of scan for conditions and assignments. The step name must be unique.|\n| *Condition* | `string` |  *True* | An expression that evaluates to `true` or `false` that defines which records from the input match the step. A record matches the step when the condition is `true` with the step’s state or with the previous step’s state.|\n| *Assignment* | `string` | | A scalar expression that is assigned to the corresponding column when a record matches a step.|\n| `output` | `string` | | Controls the output logic of the step on repeated matches. `all` outputs all records matching the step, `last` outputs only the last record in a series of repeating matches for the step, and `none` doesn't output records matching the step. The default is `all`.|",
        "example": "",
        "sourceLength": 26201,
        "url": "https://learn.microsoft.com/en-us/kusto/query/scan-operator"
      }
    },
    {
      "name": "search",
      "category": "Operator",
      "documentation": {
        "title": "search",
        "description": "Searches a text pattern in multiple tables and columns.\n\n> \n> If you know the specific tables and columns you want to search, it's more performant to use the union and where operators. The `search` operator can be slow when searching across a large number of tables and columns.",
        "syntax": "[*T* `|`] `search` [`kind=` *CaseSensitivity* ] [`in` `(`*TableSources*`)`] *SearchPredicate*",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` | | The tabular data source to be searched over, such as a table name, a union operator, or the results of a tabular query. Can't be specified together with *TableSources*.|\n| *CaseSensitivity* | `string` | | A flag that controls the behavior of all `string` scalar operators, such as `has`, with respect to case sensitivity. Valid values are `default`, `case_insensitive`, `case_sensitive`. The options `default` and `case_insensitive` are synonymous, since the default behavior is case insensitive.|\n| *TableSources* | `string` | | A comma-separated list of \"wildcarded\" table names to take part in the search. The list has the same syntax as the list of the union operator. Can't be specified together with tabular data source (*T*).|\n| *SearchPredicate* | `string` |  *True* | A boolean expression to be evaluated for every record in the input. If it returns `true`, the record is outputted. See Search predicate syntax.|\n\n> \n> If both tabular data source (*T*) and *TableSources* are omitted, the search is carried over all unrestricted tables and views of the database in scope.\n\n### Search predicate syntax\n\nThe *SearchPredicate* allows you to search for specific terms in all columns of a table. The operator that is applied to a search term depends on the presence and placement of a wildcard asterisk (`*`) in the term, as shown in the following table.\n\n|Literal   |Operator   |\n|:----------|:-----------|\n|`billg`   |`has`      |\n|`*billg`  |`hassuffix`|\n|`billg*`  |`hasprefix`|\n|`*billg*` |`contains` |\n|`bi*lg`   |`matches regex`|\n\nYou can also restrict the search to a specific column, look for an exact match instead of a term match, or search by regular expression. The syntax for each of these cases is shown in the following table.\n\n|Syntax|Explanation|\n|:--|:--|\n|*ColumnName*`:`*StringLiteral* | This syntax can be used to restrict the search to a specific column. The default behavior is to search all columns. |\n|*ColumnName*`==`*StringLiteral* | This syntax can be used to search for exact matches of a column against a string value. The default behavior is to look for a term-match.|\n| *Column* `matches regex` *StringLiteral* | This syntax indicates regular expression matching, in which *StringLiteral* is the regex pattern.|\n\nUse boolean expressions to combine conditions and create more complex searches. For example, `\"error\" and x==123` would result in a search for records that have the term `error` in any columns and the value `123` in the `x` column.\n\n### Search predicate syntax examples\n\n  |# |Syntax                                 |Meaning (equivalent `where`)           |Comments|\n  |:--|:---------------------------------------|:---------------------------------------|:--------|\n  | 1|`search \"err\"`                         |`where * has \"err\"`                    ||\n  | 2|`search in (T1,T2,A*) \"err\"`           |<code>union T1,T2,A* &#124; where * has \"err\"<code>   ||\n  | 3|`search col:\"err\"`                     |`where col has \"err\"`                  ||\n  | 4|`search col==\"err\"`                    |`where col==\"err\"`                     ||\n  | 5|`search \"err*\"`                        |`where * hasprefix \"err\"`              ||\n  | 6|`search \"*err\"`                        |`where * hassuffix \"err\"`              ||\n  | 7|`search \"*err*\"`                       |`where * contains \"err\"`               ||\n  | 8|`search \"Lab*PC\"`                      |`where * matches regex @\"\\bLab.*PC\\b\"`||\n  | 9|`search *`                             |`where 0==0`                           ||\n  |10|`search col matches regex \"...\"`       |`where col matches regex \"...\"`        ||\n  |11|`search kind=case_sensitive`           |                                       |All string comparisons are case-sensitive|\n  |12|`search \"abc\" and (\"def\" or \"hij\")`    |`where * has \"abc\" and (* has \"def\" or * has hij\")`||\n  |13|`search \"err\" or (A>a and A<b)`        |`where * has \"err\" or (A>a and A<b)`   ||\n\nUnlike the find operator, the `search` operator doesn't support the following syntax:\n\n1. `withsource=`: The output always includes a column called `$table` of type `string` whose value is the table name from which each record was retrieved (or some system-generated name if the source\n   isn't a table but a composite expression).\n2. `project=`, `project-smart`: The `search` operator doesn't support these options for customizing the output columns. Instead, it automatically selects a relevant set of columns for the output, which is equivalent to the set of columns retrieved by the `project-smart` option in the `find` operator.",
        "example": "search \"Green\"\n\nsearch \"Green\" and (\"Deluxe\" or \"Proseware\")\n\nsearch in (Products) \"Green\"\n\nsearch kind=case_sensitive \"blue\"\n\nsearch FirstName:\"Aaron\" or LastName:\"Hughes\"\n\nsearch \"Hughes\" and DateKey > datetime('2009-01-01')",
        "sourceLength": 13226,
        "url": "https://learn.microsoft.com/en-us/kusto/query/search-operator"
      }
    },
    {
      "name": "serialize",
      "category": "Operator",
      "documentation": {
        "title": "serialize",
        "description": "Marks that the order of the input row set is safe to use for window functions.\n\nThe operator has a declarative meaning. It marks the input row set as serialized (ordered), so that window functions can be applied to it.",
        "syntax": "`serialize` [*Name1* `=` *Expr1* [`,` *Name2* `=` *Expr2*]...]",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Name* | `string` | | The name of the column to add or update. If omitted, the output column name is automatically generated. |\n| *Expr* | `string` |  *True* | The calculation to perform over the input.|",
        "example": "",
        "sourceLength": 6263,
        "url": "https://learn.microsoft.com/en-us/kusto/query/serialize-operator"
      }
    },
    {
      "name": "order",
      "category": "Operator",
      "documentation": {
        "title": "sort",
        "description": "Sorts the rows of the input table into order by one or more columns.\n\n> The `sort` and `order` operators are equivalent",
        "syntax": "*T* `| sort by` *column* [`asc` | `desc`] [`nulls first` | `nulls last`] [`,` ...]",
        "returnInfo": "A copy of the input table sorted in either ascending or descending order based on the provided column.\n\nWhen the input table contains the special values `null`, `NaN`, `-inf` and `+inf`, the order will be as follows:\n\n| Value| Ascending | Descending|\n|:--|:--|:--|\n|**Nulls first**|`null`,`NaN`,`-inf`,`-5`,`0`,`5`,`+inf`|`null`,`NaN`,`+inf`,`5`,`0`,`-5`|\n|**Nulls last**|`-inf`,`-5`,`0`,`+inf`,`NaN`,`null`|`+inf`,`5`,`0`,`-5`,`NaN`,`null`|\n\n> \n>\n> * Null and NaN values are always grouped together.\n> * The order between null and NaN values is determined by the first and last property because nulls and NaNs don't have an ascending and descending order.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to sort. |\n| *column* | scalar |  *True* | The column of *T* by which to sort. The type of the column values must be numeric, date, time or string.|\n| `asc` or `desc` | `string` | | `asc` sorts into ascending order, low to high. Default is `desc`, high to low. |\n| `nulls first` or `nulls last`  | `string` | | `nulls first` will place the null values at the beginning and `nulls last` will place the null values at the end. Default for `asc` is `nulls first`. Default for `desc` is `nulls last`.|",
        "example": "StormEvents\n| sort by State asc, StartTime desc",
        "sourceLength": 3364,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sort-operator"
      }
    },
    {
      "name": "sort",
      "category": "Operator",
      "documentation": {
        "title": "sort",
        "description": "Sorts the rows of the input table into order by one or more columns.\n\n> The `sort` and `order` operators are equivalent",
        "syntax": "*T* `| sort by` *column* [`asc` | `desc`] [`nulls first` | `nulls last`] [`,` ...]",
        "returnInfo": "A copy of the input table sorted in either ascending or descending order based on the provided column.\n\nWhen the input table contains the special values `null`, `NaN`, `-inf` and `+inf`, the order will be as follows:\n\n| Value| Ascending | Descending|\n|:--|:--|:--|\n|**Nulls first**|`null`,`NaN`,`-inf`,`-5`,`0`,`5`,`+inf`|`null`,`NaN`,`+inf`,`5`,`0`,`-5`|\n|**Nulls last**|`-inf`,`-5`,`0`,`+inf`,`NaN`,`null`|`+inf`,`5`,`0`,`-5`,`NaN`,`null`|\n\n> \n>\n> * Null and NaN values are always grouped together.\n> * The order between null and NaN values is determined by the first and last property because nulls and NaNs don't have an ascending and descending order.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to sort. |\n| *column* | scalar |  *True* | The column of *T* by which to sort. The type of the column values must be numeric, date, time or string.|\n| `asc` or `desc` | `string` | | `asc` sorts into ascending order, low to high. Default is `desc`, high to low. |\n| `nulls first` or `nulls last`  | `string` | | `nulls first` will place the null values at the beginning and `nulls last` will place the null values at the end. Default for `asc` is `nulls first`. Default for `desc` is `nulls last`.|",
        "example": "StormEvents\n| sort by State asc, StartTime desc",
        "sourceLength": 3364,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sort-operator"
      }
    },
    {
      "name": "startswith_cs",
      "category": "Operator",
      "documentation": {
        "title": "startswith_cs",
        "description": "Filters a record set for data with a case-sensitive string starting sequence.",
        "syntax": "*T* `|` `where` *col* `startswith_cs` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column used to filter.|\n| *expression* | `string` |  *True* | The expression by which to filter.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State startswith_cs \"I\"\n| where event_count > 2000\n| project State, event_count",
        "sourceLength": 2011,
        "url": "https://learn.microsoft.com/en-us/kusto/query/startswith-cs-operator"
      }
    },
    {
      "name": "startswith",
      "category": "Operator",
      "documentation": {
        "title": "startswith",
        "description": "Filters a record set for data with a case-insensitive string starting sequence.",
        "syntax": "*T* `|` `where` *col* `startswith` `(`*expression*`)`",
        "returnInfo": "Rows in *T* for which the predicate is `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to filter.|\n| *col* | `string` |  *True* | The column used to filter.|\n| *expression* | `string` |  *True* | The expression by which to filter.|",
        "example": "StormEvents\n| summarize event_count=count() by State\n| where State startswith \"Lo\"\n| where event_count > 10\n| project State, event_count",
        "sourceLength": 2087,
        "url": "https://learn.microsoft.com/en-us/kusto/query/startswith-operator"
      }
    },
    {
      "name": "summarize",
      "category": "Operator",
      "documentation": {
        "title": "summarize",
        "description": "Produces a table that aggregates the content of the input table.",
        "syntax": "*T* `| summarize` [ *SummarizeParameters* ]\n      [[*Column* `=`] *Aggregation* [`,` ...]]\n    [`by`\n      [*Column* `=`] *GroupExpression* [`,` ...]]",
        "returnInfo": "The input rows are arranged into groups having the same values of the `by` expressions. Then the specified aggregation functions are computed over each group, producing a row for each group. The result contains the `by` columns and also at least one column for each computed aggregate. (Some aggregation functions return multiple columns.)\n\nThe result has as many rows as there are distinct combinations of `by` values\n(which might be zero). If there are no group keys provided, the result has a single\nrecord.\n\nTo summarize over ranges of numeric values, use `bin()` to reduce ranges to discrete values.\n\n> \n>\n> * Although you can provide arbitrary expressions for both the aggregation and grouping expressions, it's more efficient to use simple column names, or apply `bin()` to a numeric column.\n> * The automatic hourly bins for datetime columns are no longer supported. Use explicit binning instead. For example, `summarize by bin(timestamp, 1h)`.\n\nThe following table summarizes the default values of aggregations:\n\n| Operator | Default value |\n|:--|:--|\n| `count()`, `countif()`, `dcount()`, `dcountif()`, `count_distinct()`, `sum()`, `sumif()`, `variance()`, `varianceif()`, `stdev()`, `stdevif()` | 0 |\n| `make_bag()`, `make_bag_if()`, `make_list()`, `make_list_if()`, `make_set()`, `make_set_if()` | empty dynamic array ([]) |\n| All others | null |\n\n> \n> When applying these aggregates to entities that include null values, the null values are ignored and don't factor into the calculation. See Examples.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*Column*| `string` ||The name for the result column. Defaults to a name derived from the expression.|\n|*Aggregation*| `string` | *True*|A call to an aggregation function such as `count()` or `avg()`, with column names as arguments.|\n|*GroupExpression*|scalar| *True*|A scalar expression that can reference the input data. The output has as many records as there are distinct values of all the group expressions.|\n|*SummarizeParameters*| `string` ||Zero or more space-separated parameters in the form of *Name* `=` *Value* that control the behavior. See supported parameters.|\n\n> \n> When the input table is empty, the output depends on whether *GroupExpression*\n> is used:\n>\n> * If *GroupExpression* isn't provided, the output is a single (empty) row.\n> * If *GroupExpression* is provided, the output has no rows.\n\n### Supported parameters\n\n  |Name  |Description  |\n  |:---|:---|\n  |`hint.num_partitions` |Specifies the number of partitions used to share the query load on cluster nodes. See shuffle query  |\n  |`hint.shufflekey=<key>` |The `shufflekey` query shares the query load on cluster nodes, using a key to partition data. See shuffle query |\n  |`hint.strategy=shuffle` |The `shuffle` strategy query shares the query load on cluster nodes, where each node processes one partition of the data. See shuffle query  |",
        "example": "StormEvents\n| where InjuriesDirect > 0\n| summarize by State, EventType\n\nStormEvents\n| where State == \"HAWAII\" and EventType == \"Heavy Rain\"\n| project Duration = EndTime - StartTime\n| summarize Min = min(Duration), Max = max(Duration)\n\nStormEvents\n| summarize TypesOfStorms=dcount(EventType) by State\n| sort by TypesOfStorms\n\nStormEvents\n| project EventType, Duration = EndTime - StartTime\n| where Duration > 1d\n| summarize EventCount=count() by EventType, Length=bin(Duration, 1d)\n| sort by Length\n\ndatatable(x:long)[]\n| summarize any_x=take_any(x), arg_max_x=arg_max(x, *), arg_min_x=arg_min(x, *), avg(x), buildschema(todynamic(tostring(x))), max(x), min(x), percentile(x, 55), hll(x) ,stdev(x), sum(x), sumif(x, x > 0), tdigest(x), variance(x)\n\ndatatable(x:long)[]\n| summarize  count(x), countif(x > 0) , dcount(x), dcountif(x, x > 0)\n\ndatatable(x:long)[]\n| summarize  make_set(x), make_list(x)\n\nrange x from 1 to 4 step 1\n| extend y = iff(x == 1, real(null), real(5))\n| summarize sum(y), avg(y)\n\nrange x from 1 to 2 step 1\n| extend y = iff(x == 1, real(null), real(5))\n| summarize count(y)\n\nrange x from 1 to 2 step 1\n| extend y = iff(x == 1, real(null), real(5))\n| summarize make_set(y), make_set(y)",
        "sourceLength": 11456,
        "url": "https://learn.microsoft.com/en-us/kusto/query/summarize-operator"
      }
    },
    {
      "name": "limit",
      "category": "Operator",
      "documentation": {
        "title": "take",
        "description": "Return up to the specified number of rows.\n\nThere is no guarantee which records are returned, unless\nthe source data is sorted. If the data is sorted, then the top values will be returned.\n\n> The `take` and `limit` operators are equivalent\n\n> \n> `take` is a simple, quick, and efficient way to view a small sample of records when browsing data interactively, but be aware that it doesn't guarantee any consistency in its results when executing multiple times, even if the dataset hasn't changed.\n> Even if the number of rows returned by the query isn't explicitly limited by the query (no `take` operator is used), Kusto limits that number by default. For more details, see Kusto query limits.",
        "syntax": "`take` *NumberOfRows*",
        "returnInfo": "",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*NumberOfRows*| `int` | *True*|The number of rows to return.|",
        "example": "StormEvents | take 5",
        "sourceLength": 2550,
        "url": "https://learn.microsoft.com/en-us/kusto/query/take-operator"
      }
    },
    {
      "name": "take",
      "category": "Operator",
      "documentation": {
        "title": "take",
        "description": "Return up to the specified number of rows.\n\nThere is no guarantee which records are returned, unless\nthe source data is sorted. If the data is sorted, then the top values will be returned.\n\n> The `take` and `limit` operators are equivalent\n\n> \n> `take` is a simple, quick, and efficient way to view a small sample of records when browsing data interactively, but be aware that it doesn't guarantee any consistency in its results when executing multiple times, even if the dataset hasn't changed.\n> Even if the number of rows returned by the query isn't explicitly limited by the query (no `take` operator is used), Kusto limits that number by default. For more details, see Kusto query limits.",
        "syntax": "`take` *NumberOfRows*",
        "returnInfo": "",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*NumberOfRows*| `int` | *True*|The number of rows to return.|",
        "example": "StormEvents | take 5",
        "sourceLength": 2550,
        "url": "https://learn.microsoft.com/en-us/kusto/query/take-operator"
      }
    },
    {
      "name": "top-hitters",
      "category": "Operator",
      "documentation": {
        "title": "top-hitters",
        "description": "Returns an approximation for the most popular distinct values, or the values\nwith the largest sum, in the input.\n\n> \n> `top-hitters` uses an approximation algorithm optimized for performance\n> when the input data is large.\n> The approximation is based on the Count-Min-Sketch algorithm.",
        "syntax": "*T* `|` `top-hitters` *NumberOfValues* `of` *ValueExpression* [ `by` *SummingExpression* ]",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The input tabular expression.|\n| *NumberOfValues* | int, long, or real |  *True* | The number of distinct values of *ValueExpression*.|\n| *ValueExpression* | `string` |  *True* | An expression over the input table *T* whose distinct values are returned.|\n| *SummingExpression* | `string` | | If specified, a numeric expression over the input table *T* whose sum per distinct value of *ValueExpression* establishes which values to emit. If not specified, the count of each distinct value of *ValueExpression*  is used instead.|\n\n> \n> * When you include *SummingExpression* in the syntax, the query is equivalent to:\n> \n>   `T | summarize S = sum(SummingExpression) by ValueExpression | top NumberOfValues by S desc`\n>\n> * When you don't include *SummingExpression* in the syntax, the query is equivalent to:\n> \n>   `T | summarize C = count() by ValueExpression | top NumberOfValues by C desc`",
        "example": "",
        "sourceLength": 4499,
        "url": "https://learn.microsoft.com/en-us/kusto/query/top-hitters-operator"
      }
    },
    {
      "name": "top-nested",
      "category": "Operator",
      "documentation": {
        "title": "top-nested",
        "description": "The `top-nested` operator performs hierarchical aggregation and value selection.\n\nImagine you have a table with sales information like regions, salespeople, and amounts sold. The `top-nested` operator can help you answer complex questions, such as \"What are the top five regions by sales, and who are the top three salespeople in each of those regions?\"\n\nThe source data is partitioned based on the criteria set in the first `top-nested` clause, such as region. Next, the operator picks the top records in each partition using an aggregation, such as adding sales amounts. Each subsequent `top-nested` clause refines the partitions created by the previous clause, creating a hierarchy of more precise groups.\n\nThe result is a table with two columns per clause. One column holds the partitioning values, such as region, while the other column holds the outcomes of the aggregation calculation, like the sum of sales.",
        "syntax": "*T* `|` `top-nested` [ *N* ] `of` *Expr* [`with` `others` `=` *ConstExpr*] `by` *Aggregation* [`asc` | `desc`] [`,`  \n&emsp;&emsp;`top-nested` ... ]",
        "returnInfo": "A table with two columns for each clause. One column contains unique values computed using *Expr*, and the other column shows the results obtained from the *Aggregation* calculation.\n\n### Using the `with` `others` clause\n\nUsing the `top-nested` operator with `with` `others` adds the ability to see your top content contextualized in a wider data set. Evaluating your data in this way is valuable when rendering the data visually.\n\n### Include data from other columns\n\nOnly columns specified as a `top-nested` clause *Expr* are displayed in the output table.\n\nTo include all values of a column at a specific level:\n\n1. Don't specify the value of *N*.\n1. Use the column name as the value of *Expr*.\n1. Use `Ignore=max(1)` as the value of *Aggregation*.\n1. Remove the unnecessary `Ignore` column with project-away.\n\nFor an example, see Most recent events per state with other column data.\n\nThe number of records can grow exponentially with the number of `top-nested` clauses, and record growth is even faster if the *N* parameter is not specified. This operator can consume a considerable amount of resources.\n\nIf the aggregation distribution is irregular, limit the number of distinct values to return by specifying *N*. Then, use the `with` `others` `=` *ConstExpr* clause to get a sense of the weight of all other cases.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*T*| `string` | *True*|The input tabular expression.|\n|*N*| `int` ||The number of top values to be returned for this hierarchy level. If omitted, all distinct values are returned.|\n|*Expr*| `string` | *True*|An expression over the input record indicating which value to return for this hierarchy level. Typically, it refers to a column from *T* or involves a calculation like bin() on a column. Optionally, set an output column name as *Name* `=` *Expr*.|\n|*ConstExpr*| `string` ||If specified, for each hierarchy level, one record is added with the value that is the aggregation over all records that didn't make it to the top.|\n|*Aggregation*| `string` ||The aggregation function applied to records with the same *Expr* value. The result determines the top records. See Supported aggregation functions. Optionally, set an output column name as *Name* `=` *Aggregation*.|\n\n### Supported aggregation functions\n\nThe following aggregation functions are supported:\n\n* sum()\n* count()\n* max()\n* min()\n* dcount()\n* avg()\n* percentile()\n* percentilew()\n\n> \n> Any algebraic combination of the aggregations is also supported.",
        "example": "",
        "sourceLength": 12004,
        "url": "https://learn.microsoft.com/en-us/kusto/query/top-nested-operator"
      }
    },
    {
      "name": "top",
      "category": "Operator",
      "documentation": {
        "title": "top",
        "description": "Returns the first *N* records sorted by the specified column.",
        "syntax": "*T* `| top` *NumberOfRows* `by` *Expression* [`asc` | `desc`] [`nulls first` | `nulls last`]",
        "returnInfo": "",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *T* | `string` |  *True* | The tabular input to sort. |\n| *NumberOfRows* | `int` |  *True* | The number of rows of *T* to return.|\n| *Expression* | `string` |  *True* | The scalar expression by which to sort.|\n| `asc` or `desc` | `string` | | Controls whether the selection is from the \"bottom\" or \"top\" of the range. Default `desc`.\n| `nulls first` or `nulls last`  | `string` | | Controls whether null values appear at the \"bottom\" or \"top\" of the range. Default for `asc` is `nulls first`. Default for `desc` is `nulls last`.|\n\n> \n> `top 5 by name` is equivalent to the expression `sort by name | take 5` both from semantic and performance perspectives.",
        "example": "StormEvents\n| top 3 by InjuriesDirect",
        "sourceLength": 2491,
        "url": "https://learn.microsoft.com/en-us/kusto/query/top-operator"
      }
    },
    {
      "name": "union",
      "category": "Operator",
      "documentation": {
        "title": "union",
        "description": "Takes two or more tables and returns the rows of all of them.",
        "syntax": "",
        "returnInfo": "A table with as many rows as there are in all the input tables.",
        "parametersTable": "> \n>\n> * The `union` scope can include let statements if attributed with the `view` keyword.\n> * The `union` scope will not include functions. To include a function, define a let statement with the `view` keyword.\n> * There's no guarantee of the order in which the union legs will appear, but if each leg has an `order by` operator, then each leg will be sorted.",
        "example": "",
        "sourceLength": 10432,
        "url": "https://learn.microsoft.com/en-us/kusto/query/union-operator"
      }
    },
    {
      "name": "where",
      "category": "Operator",
      "documentation": {
        "title": "where",
        "description": "Filters a table to the subset of rows that satisfy a predicate.\n\n> The `where` and `filter` operators are equivalent",
        "syntax": "*T* `| where` *Predicate*",
        "returnInfo": "Rows in *T* for which *Predicate* is `true`.\n\n> \n> All filtering functions return false when compared with null values. Use special null-aware functions to write queries that handle null values.\n>\n> * isnull()\n> * isnotnull()\n> * isempty()\n> * isnotempty()\n\n* **Use simple comparisons** between column names and constants. ('Constant' means constant over the table - so `now()` and `ago()` are OK, and so are scalar values assigned using a `let` statement.)\n\n    For example, prefer `where Timestamp >= ago(1d)` to `where bin(Timestamp, 1d) == ago(1d)`.\n\n* **Simplest terms first**: If you have multiple clauses conjoined with `and`, put first the clauses that involve just one column. So `Timestamp > ago(1d) and OpId == EventId` is better than the other way around.\n\nFor more information, see the summary of available String operators and the summary of available Numerical operators.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n| *T* | `string` |  *True* | Tabular input whose records are to be filtered. |\n| *Predicate* | `string` |  *True* | Expression that evaluates to a bool for each row in *T*.",
        "example": "",
        "sourceLength": 4364,
        "url": "https://learn.microsoft.com/en-us/kusto/query/where-operator"
      }
    }
  ],
  "functions": [
    {
      "name": "abs",
      "category": "Function",
      "documentation": {
        "title": "abs()",
        "description": "Calculates the absolute value of the input.",
        "syntax": "`abs(`*x*`)`",
        "returnInfo": "Absolute value of x.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | int, real, or timespan |  *True* | The value to make absolute. |",
        "example": "print abs(-5)",
        "sourceLength": 1194,
        "url": "https://learn.microsoft.com/en-us/kusto/query/abs-function"
      }
    },
    {
      "name": "acos",
      "category": "Function",
      "documentation": {
        "title": "acos()",
        "description": "Calculates the angle whose cosine is the specified number. Inverse operation of `cos()`.",
        "syntax": "`acos(`*x*`)`",
        "returnInfo": "The value of the arc cosine of `x`. The return value is `null` if `x` < -1 or `x` > 1.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True* | The value used to calculate the arc cosine. |",
        "example": "",
        "sourceLength": 1003,
        "url": "https://learn.microsoft.com/en-us/kusto/query/acos-function"
      }
    },
    {
      "name": "ago",
      "category": "Function",
      "documentation": {
        "title": "ago()",
        "description": "Subtracts the given timespan from the current UTC time.\n\nLike `now()`, if you use `ago()` multiple times in a single query statement, the current UTC time\nbeing referenced is the same across all uses.",
        "syntax": "`ago(`*timespan*`)`",
        "returnInfo": "A datetime value equal to the current time minus the timespan.",
        "parametersTable": "| Name | Type | Required | Description |\n|:---|:---|:---|:---|\n| *timespan* | `timespan` |  *True* | The interval to subtract from the current UTC clock time `now()`. For a full list of possible timespan values, see timespan literals.|",
        "example": "T | where Timestamp > ago(1h)",
        "sourceLength": 1992,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ago-function"
      }
    },
    {
      "name": "around",
      "category": "Function",
      "documentation": {
        "title": "around()",
        "description": "Creates a `bool` value indicating if the first argument is within a range around the center value.",
        "syntax": "`around(`*value*`,`*center*`,`*delta*`)`",
        "returnInfo": "Returns `true` if the value is within the range, `false` if the value is outside the range.\nReturns `null` if any of the arguments is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*value*| int, long, real, datetime, or timespan |  *True* | The value to compare to the *center*.|\n| *center* | int, long, real, datetime, or timespan |  *True* | The center of the range defined as [(`center`-`delta`) .. (`center` + `delta`)]. |\n| *delta* | int, long, real, datetime, or timespan |  *True* | The delta value of the range defined as [(`center`-`delta`) .. (`center` + `delta`)].|",
        "example": "range dt \n    from datetime(2021-01-01 01:00) \n    to datetime(2021-01-01 02:00) \n    step 1min\n| where around(dt, datetime(2021-01-01 01:30), 1min)",
        "sourceLength": 2173,
        "url": "https://learn.microsoft.com/en-us/kusto/query/around-function"
      }
    },
    {
      "name": "array_concat",
      "category": "Function",
      "documentation": {
        "title": "array_concat()",
        "description": "Concatenates many dynamic arrays to a single array.",
        "syntax": "`array_concat(`*arr* [`,` ...]`)`",
        "returnInfo": "Returns a dynamic array of all input arrays.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *arr* | `dynamic` |  *True* | The arrays to concatenate into a dynamic array.|",
        "example": "range x from 1 to 3 step 1\n| extend y = x * 2\n| extend z = y * 2\n| extend a1 = pack_array(x,y,z), a2 = pack_array(x, y)\n| project array_concat(a1, a2)",
        "sourceLength": 1697,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-concat-function"
      }
    },
    {
      "name": "array_iff",
      "category": "Function",
      "documentation": {
        "title": "array_iff()",
        "description": "Element-wise `iif` function on dynamic arrays.\n\n> The `array_iff()` and `array_iif()` functions are equivalent",
        "syntax": "`array_iff(`*condition_array*, *when_true*, *when_false*`)`",
        "returnInfo": "Returns a dynamic array of the values taken either from the *when_true* or *when_false* array values, according to the corresponding value of the condition array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *condition_array*| `dynamic` |  *True*| An array of *boolean* or numeric values.|\n| *when_true* | dynamic or scalar |  *True* | An array of values or primitive value. It's the result when *condition_array* is *true*.|\n| *when_false* | dynamic or scalar |  *True* | An array of values or primitive value. It's the result when *condition_array* is *false*.|\n\n> \n>\n> * The length of the return value is same as the input *condition_array*.\n> * Numeric condition values are considered `true` if not equal to 0.\n> * Non-numeric and non-boolean condition values is null in the corresponding index of the return value.\n> * If *when_true* or *when_false* is shorter than *condition_array*, missing values are treated as null.",
        "example": "print condition=dynamic([true,false,true]), if_true=dynamic([1,2,3]), if_false=dynamic([4,5,6]) \n| extend res= array_iff(condition, if_true, if_false)\n\nprint condition=dynamic([1,0,50]), if_true=\"yes\", if_false=\"no\" \n| extend res= array_iff(condition, if_true, if_false)\n\nprint condition=dynamic([\"some string value\", datetime(\"01-01-2022\"), null]), if_true=1, if_false=0\n| extend res= array_iff(condition, if_true, if_false)\n\nprint condition=dynamic([true,true,true]), if_true=dynamic([1,2]), if_false=dynamic([3,4]) \n| extend res= array_iff(condition, if_true, if_false)",
        "sourceLength": 4846,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-iff-function"
      }
    },
    {
      "name": "array_index_of",
      "category": "Function",
      "documentation": {
        "title": "array_index_of()",
        "description": "Searches an array for the specified item, and returns its position.",
        "syntax": "`array_index_of(`*array*`,` *value* [`,` *start* [`,` *length* [`,` *occurence* ]]]`)`",
        "returnInfo": "Returns a zero-based index position of lookup.\nReturns -1 if the value isn't found in the array.\nReturns *null* for irrelevant inputs (*occurrence* < 0 or  *length* < -1).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *array* | `dynamic` |  *True* | The array to search. |\n| *value* | long, int, datetime, timespan, string, guid, or bool |  *True* | The value to lookup. |\n| *start* | `int` |  | The search start position. A negative value will offset the starting search value from the end of the array by `abs(`*start*`)` steps. |\n| *length* | `int` |  | The number of values to examine. A value of -1 means unlimited length. |\n| *occurrence* | `int` |  | The number of the occurrence. The default is 1. |",
        "example": "let arr=dynamic([\"this\", \"is\", \"an\", \"example\", \"an\", \"example\"]);\nprint\n idx1 = array_index_of(arr,\"an\")    // lookup found in input string\n , idx2 = array_index_of(arr,\"example\",1,3) // lookup found in researched range \n , idx3 = array_index_of(arr,\"example\",1,2) // search starts from index 1, but stops after 2 values, so lookup can't be found\n , idx4 = array_index_of(arr,\"is\",2,4) // search starts after occurrence of lookup\n , idx5 = array_index_of(arr,\"example\",2,-1)  // lookup found\n , idx6 = array_index_of(arr, \"an\", 1, -1, 2)   // second occurrence found in input range\n , idx7 = array_index_of(arr, \"an\", 1, -1, 3)   // no third occurrence in input array\n , idx8 = array_index_of(arr, \"an\", -3)   // negative start index will look at last 3 elements\n , idx9 = array_index_of(arr, \"is\", -4)   // negative start index will look at last 3 elements",
        "sourceLength": 3610,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-index-of-function"
      }
    },
    {
      "name": "array_length",
      "category": "Function",
      "documentation": {
        "title": "array_length()",
        "description": "Calculates the number of elements in a dynamic array.\n\n> **Deprecated aliases:** arraylength()",
        "syntax": "`array_length(`*array*`)`",
        "returnInfo": "Returns the number of elements in *array*, or `null` if *array* isn't an array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *array* | `dynamic` |  *True* | The array for which to calculate length.",
        "example": "print array_length(dynamic([1, 2, 3, \"four\"]))",
        "sourceLength": 1505,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-length-function"
      }
    },
    {
      "name": "array_reverse",
      "category": "Function",
      "documentation": {
        "title": "array_reverse()",
        "description": "Reverses the order of the elements in a dynamic array.",
        "syntax": "`array_reverse(`*value*`)`",
        "returnInfo": "Returns an array that contains the same elements as the input array in reverse order.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*value*| `dynamic` |  *True*| The array to reverse.|",
        "example": "print arr=dynamic([\"this\", \"is\", \"an\", \"example\"]) \n| project Result=array_reverse(arr)",
        "sourceLength": 1551,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-reverse-function"
      }
    },
    {
      "name": "array_rotate_left",
      "category": "Function",
      "documentation": {
        "title": "array_rotate_left()",
        "description": "Rotates values inside a `dynamic` array to the left.",
        "syntax": "`array_rotate_left(`*array*, *rotate_count*`)`",
        "returnInfo": "Dynamic array containing the same elements as the original array with each element rotated according to *rotate_count*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*array* | `dynamic` |  *True*| The array to rotate.|\n|*rotate_count*| integer |  *True*| The number of positions that array elements will be rotated to the left. If the value is negative, the elements will be rotated to the right.|",
        "example": "print arr=dynamic([1,2,3,4,5])\n| extend arr_rotated=array_rotate_left(arr, 2)\n\nprint arr=dynamic([1,2,3,4,5])\n| extend arr_rotated=array_rotate_left(arr, -2)",
        "sourceLength": 2680,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-rotate-left-function"
      }
    },
    {
      "name": "array_rotate_right",
      "category": "Function",
      "documentation": {
        "title": "array_rotate_right()",
        "description": "Rotates values inside a `dynamic` array to the right.",
        "syntax": "`array_rotate_right(`*array*, *rotate_count*`)`",
        "returnInfo": "Dynamic array containing the same elements as the original array with each element rotated according to *rotate_count*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*array* | `dynamic` |  *True*| The array to rotate.|\n|*rotate_count*| integer |  *True*| The number of positions that array elements will be rotated to the right. If the value is negative, the elements will be rotated to the Left.|",
        "example": "print arr=dynamic([1,2,3,4,5])\n| extend arr_rotated=array_rotate_right(arr, 2)\n\nprint arr=dynamic([1,2,3,4,5])\n| extend arr_rotated=array_rotate_right(arr, -2)",
        "sourceLength": 2702,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-rotate-right-function"
      }
    },
    {
      "name": "array_shift_left",
      "category": "Function",
      "documentation": {
        "title": "array_shift_left()",
        "description": "Shifts the values inside a dynamic array to the left.",
        "syntax": "`array_shift_left(`*array*, *shift_count* [`,` *default_value* ]`)`",
        "returnInfo": "Returns a dynamic array containing the same number of elements as in the original array. Each element has been shifted according to *shift_count*. New elements that are added in place of removed elements have a value of *default_value*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*array* | `dynamic` | *True* | The array to shift.|\n|*shift_count* | `int` |  *True* | The number of positions that array elements are shifted to the left. If the value is negative, the elements are shifted to the right. |\n|*default_value* | scalar | | The value used for an element that was shifted and removed. The default is null or an empty string depending on the type of elements in the *array*.|",
        "example": "print arr=dynamic([1,2,3,4,5])\n| extend arr_shift=array_shift_left(arr, 2)\n\nprint arr=dynamic([1,2,3,4,5])\n| extend arr_shift=array_shift_left(arr, 2, -1)\n\nprint arr=dynamic([1,2,3,4,5])\n| extend arr_shift=array_shift_left(arr, -2, -1)",
        "sourceLength": 3615,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-shift-left-function"
      }
    },
    {
      "name": "array_shift_right",
      "category": "Function",
      "documentation": {
        "title": "array_shift_right()",
        "description": "Shifts the values inside a dynamic array to the right.",
        "syntax": "`array_shift_right(`*array*, *shift_count* [`,` *default_value* ]`)`",
        "returnInfo": "Returns a dynamic array containing the same amount of the elements as in the original array. Each element has been shifted according to *shift_count*. New elements that are added instead of the removed elements have a value of *default_value*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*array* | `dynamic` | *True* | The array to shift.|\n|*shift_count* | `int` |  *True* | The number of positions that array elements are shifted to the right. If the value is negative, the elements are shifted to the left. |\n|*default_value* | scalar | | The value used for an element that was shifted and removed. The default is null or an empty string depending on the type of elements in the *array*.|",
        "example": "print arr=dynamic([1,2,3,4,5])\n| extend arr_shift=array_shift_right(arr, 2)\n\nprint arr=dynamic([1,2,3,4,5])\n| extend arr_shift=array_shift_right(arr, 2, -1)\n\nprint arr=dynamic([1,2,3,4,5])\n| extend arr_shift=array_shift_right(arr, -2, -1)",
        "sourceLength": 3594,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-shift-right-function"
      }
    },
    {
      "name": "array_slice",
      "category": "Function",
      "documentation": {
        "title": "array_slice()",
        "description": "Extracts a slice of a dynamic array.",
        "syntax": "`array_slice`(*array*, *start*, *end*)",
        "returnInfo": "Returns a dynamic array of the values in the range [`start..end`] from `array`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *array* | `dynamic` |  *True* | The array from which to extract the slice.|\n| *start*| `int` |  *True* | The start index of the slice (inclusive). Negative values are converted to `array_length`+`start`.|\n| *end*| `int` |  *True* | The last index of the slice. (inclusive). Negative values are converted to `array_length`+`end`.|\n\n> \n> Out of bounds indices are ignored.",
        "example": "print arr=dynamic([1,2,3]) \n| extend sliced=array_slice(arr, 1, 2)\n\nprint arr=dynamic([1,2,3,4,5]) \n| extend sliced=array_slice(arr, 2, -1)\n\nprint arr=dynamic([1,2,3,4,5]) \n| extend sliced=array_slice(arr, -3, -2)",
        "sourceLength": 2735,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-slice-function"
      }
    },
    {
      "name": "array_sort_asc",
      "category": "Function",
      "documentation": {
        "title": "array_sort_asc()",
        "description": "Receives one or more arrays. Sorts the first array in ascending order. Orders the remaining arrays to match the reordered first array.",
        "syntax": "`array_sort_asc(`*array1*[, ..., *arrayN*][`,` *nulls_last*]`)`\n\nIf *nulls_last* isn't provided, a default value of `true` is used.",
        "returnInfo": "Returns the same number of arrays as in the input, with the first array sorted in ascending order, and the remaining arrays ordered to match the reordered first array.\n\n`null` is returned for every array that differs in length from the first one.\n\nAn array which contains elements of different types, is sorted in the following order:\n\n* Numeric, `datetime`, and `timespan` elements\n* String elements\n* Guid elements\n* All other elements",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*array1...arrayN*| `dynamic` |  *True* | The array or list of arrays to sort.|\n| *nulls_last* | `bool` |  | Determines whether `null`s should be last.|",
        "example": "let array1 = dynamic([1,3,4,5,2]);\nlet array2 = dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]);\nprint array_sort_asc(array1,array2)\n\nlet Names = \"John,Paul,Jane,Kao\";\nlet SortedNames = strcat_array(array_sort_asc(split(Names, \",\")), \",\");\nprint result = SortedNames\n\ndatatable(command:string, command_time:datetime, user_id:string)\n[\n    'chmod',   datetime(2019-07-15),   \"user1\",\n    'ls',      datetime(2019-07-02),   \"user1\",\n    'dir',     datetime(2019-07-22),   \"user1\",\n    'mkdir',   datetime(2019-07-14),   \"user1\",\n    'rm',      datetime(2019-07-27),   \"user1\",\n    'pwd',     datetime(2019-07-25),   \"user1\",\n    'rm',      datetime(2019-07-23),   \"user2\",\n    'pwd',     datetime(2019-07-25),   \"user2\",\n]\n| summarize timestamps = make_list(command_time), commands = make_list(command) by user_id\n| project user_id, commands_in_chronological_order = array_sort_asc(timestamps, commands)[1]\n\nprint result=array_sort_asc(dynamic([null,\"blue\",\"yellow\",\"green\",null]))\n\nprint result=array_sort_asc(dynamic([null,\"blue\",\"yellow\",\"green\",null]), false)",
        "sourceLength": 6614,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-sort-asc-function"
      }
    },
    {
      "name": "array_sort_desc",
      "category": "Function",
      "documentation": {
        "title": "array_sort_desc()",
        "description": "Receives one or more arrays. Sorts the first array in descending order. Orders the remaining arrays to match the reordered first array.",
        "syntax": "`array_sort_desc(`*array1*[, ..., *argumentN*]`)`\n\n`array_sort_desc(`*array1*[, ..., *argumentN*]`,`*nulls_last*`)`\n\nIf *nulls_last* isn't provided, a default value of `true` is used.",
        "returnInfo": "Returns the same number of arrays as in the input, with the first array sorted in ascending order, and the remaining arrays ordered to match the reordered first array.\n\n`null` is returned for every array that differs in length from the first one.\n\nAn array which contains elements of different types, is sorted in the following order:\n\n* Numeric, `datetime`, and `timespan` elements\n* String elements\n* Guid elements\n* All other elements",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*array1...arrayN*| `dynamic` |  *True* | The array or list of arrays to sort.|\n| *nulls_last* | `bool` |  | Determines whether `null`s should be last.|",
        "example": "let array1 = dynamic([1,3,4,5,2]);\nlet array2 = dynamic([\"a\",\"b\",\"c\",\"d\",\"e\"]);\nprint array_sort_desc(array1,array2)\n\nlet Names = \"John,Paul,Jane,Kayo\";\nlet SortedNames = strcat_array(array_sort_desc(split(Names, \",\")), \",\");\nprint result = SortedNames\n\ndatatable(command:string, command_time:datetime, user_id:string)\n[\n    'chmod',   datetime(2019-07-15),   \"user1\",\n    'ls',      datetime(2019-07-02),   \"user1\",\n    'dir',     datetime(2019-07-22),   \"user1\",\n    'mkdir',   datetime(2019-07-14),   \"user1\",\n    'rm',      datetime(2019-07-27),   \"user1\",\n    'pwd',     datetime(2019-07-25),   \"user1\",\n    'rm',      datetime(2019-07-23),   \"user2\",\n    'pwd',     datetime(2019-07-25),   \"user2\",\n]\n| summarize timestamps = make_list(command_time), commands = make_list(command) by user_id\n| project user_id, commands_in_chronological_order = array_sort_desc(timestamps, commands)[1]\n\nprint result=array_sort_desc(dynamic([null,\"blue\",\"yellow\",\"green\",null]))\n\nprint result=array_sort_desc(dynamic([null,\"blue\",\"yellow\",\"green\",null]), false)",
        "sourceLength": 6688,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-sort-desc-function"
      }
    },
    {
      "name": "array_split",
      "category": "Function",
      "documentation": {
        "title": "array_split()",
        "description": "Splits an array to multiple arrays according to the split indices and packs the generated array in a dynamic array.",
        "syntax": "`array_split`(*array*, *index*)",
        "returnInfo": "Returns a dynamic array containing N+1 arrays with the values in the range `[0..i1), [i1..i2), ... [iN..array_length)` from `array`, where N is the number of input indices and `i1...iN` are the indices.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *array*| `dynamic` |  *True* | The array to split.|\n| *index* | `int` or `dynamic` |  *True*| An integer or dynamic array of integers used to indicate the location at which to split the array. The start index of arrays is zero. Negative values are converted to `array_length` + `value`.|",
        "example": "print arr=dynamic([1,2,3,4,5]) \n| extend arr_split=array_split(arr, 2)\n\nprint arr=dynamic([1,2,3,4,5]) \n| extend arr_split=array_split(arr, dynamic([1,3]))",
        "sourceLength": 2297,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-split-function"
      }
    },
    {
      "name": "array_sum",
      "category": "Function",
      "documentation": {
        "title": "array_sum()",
        "description": "Calculates the sum of elements in a dynamic array.",
        "syntax": "`array_sum`(*array*)",
        "returnInfo": "Returns a double type value with the sum of the elements of the array.\n\n> \n> If the array contains elements of non-numeric types, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *array*| `dynamic` |  *True*| The array to sum.|",
        "example": "print arr=dynamic([1,2,3,4]) \n| extend arr_sum=array_sum(arr)",
        "sourceLength": 1523,
        "url": "https://learn.microsoft.com/en-us/kusto/query/array-sum-function"
      }
    },
    {
      "name": "asin",
      "category": "Function",
      "documentation": {
        "title": "asin()",
        "description": "Calculates the angle whose sine is the specified number, or the arc sine. This is the inverse operation of `sin()`.",
        "syntax": "`asin(`*x*`)`",
        "returnInfo": "Returns the value of the arc sine of `x`. Returns `null` if `x` < -1 or `x` > 1.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*x* | `real` |  *True*| A real number in range [-1, 1] used to calculate the arc sine.|",
        "example": "asin(0.5)",
        "sourceLength": 1388,
        "url": "https://learn.microsoft.com/en-us/kusto/query/asin-function"
      }
    },
    {
      "name": "assert",
      "category": "Function",
      "documentation": {
        "title": "assert()",
        "description": "Checks for a condition. If the condition is false, outputs error messages and fails the query.\n\n> \n> The `assert` function gets evaluated during the query analysis phase, before optimizations such as constant-folding and predicate short-circuiting get applied.\n\n> \n> The parameters given to `assert` must be evaluated to constants during the query analysis phase. In other words, it can be constructed from other expressions referencing constants only, and can't be bound to row-context.",
        "syntax": "`assert(`*condition*`,`*message*`)`",
        "returnInfo": "Returns `true` if the condition is `true`.\nRaises a semantic error if the condition is evaluated to `false`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *condition* | `bool` |  *True* | The conditional expression to evaluate. The condition must be evaluated to constant during the query analysis phase.|\n| *message* | `string` |  *True* | The message used if assertion is evaluated to `false`.|",
        "example": "let checkLength = (len:long, s:string)\n{\n    assert(len > 0, \"Length must be greater than zero\") and\n    strlen(s) > len\n};\ndatatable(input:string)\n[\n    '123',\n    '4567'\n]\n| where checkLength(len=long(-1), input)\n\nlet checkLength = (len:long, s:string)\n{\n    assert(len > 0, \"Length must be greater than zero\") and strlen(s) > len\n};\ndatatable(input:string)\n[\n    '123',\n    '4567'\n]\n| where checkLength(len=3, input)\n\nlet b=false;\nprint x=\"Hello\"\n| where b\n| where assert(b, \"Assertion failed\")",
        "sourceLength": 3545,
        "url": "https://learn.microsoft.com/en-us/kusto/query/assert-function"
      }
    },
    {
      "name": "atan",
      "category": "Function",
      "documentation": {
        "title": "atan()",
        "description": "Returns the angle whose tangent is the specified number. This is the inverse operation of `tan()`.",
        "syntax": "`atan(`*x*`)`",
        "returnInfo": "The value of the arc tangent of `x`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True* | The number used to calculate the arc tangent.|",
        "example": "atan(0.5)",
        "sourceLength": 1309,
        "url": "https://learn.microsoft.com/en-us/kusto/query/atan-function"
      }
    },
    {
      "name": "atan2",
      "category": "Function",
      "documentation": {
        "title": "atan2()",
        "description": "Calculates the angle, in radians, between the positive x-axis and the ray from the origin to the point (y, x).",
        "syntax": "`atan2(`*y*`,`*x*`)`",
        "returnInfo": "Returns the angle in radians between the positive x-axis and the ray from the origin to the point (y, x).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *y* | `real` |  *True* | The Y coordinate.|\n| *x* | `real` |  *True* | The X coordinate.|",
        "example": "print atan2_0 = atan2(1,1) // Pi / 4 radians (45 degrees)\n| extend atan2_1 = atan2(0,-1) // Pi radians (180 degrees)\n| extend atan2_2 = atan2(-1,0) // - Pi / 2 radians (-90 degrees)",
        "sourceLength": 1784,
        "url": "https://learn.microsoft.com/en-us/kusto/query/atan2-function"
      }
    },
    {
      "name": "base64_decode_toarray",
      "category": "Function",
      "documentation": {
        "title": "base64_decode_toarray()",
        "description": "Decodes a base64 string to an array of long values.",
        "syntax": "`base64_decode_toarray(`*base64_string*`)`",
        "returnInfo": "Returns an array of long values decoded from a base64 string.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n| *base64_string* | `string` |  *True* |  The value to decode from base64 to an array of long values.|",
        "example": "print Quine=base64_decode_toarray(\"S3VzdG8=\")  \n// 'K', 'u', 's', 't', 'o'",
        "sourceLength": 1889,
        "url": "https://learn.microsoft.com/en-us/kusto/query/base64-decode-toarray-function"
      }
    },
    {
      "name": "base64_decode_toguid",
      "category": "Function",
      "documentation": {
        "title": "base64_decode_toguid()",
        "description": "Decodes a base64 string to a GUID.",
        "syntax": "`base64_decode_toguid(`*base64_string*`)`",
        "returnInfo": "Returns a GUID decoded from a base64 string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *base64_string* | `string` |  *True* | The value to decode from base64 to a GUID. |",
        "example": "print Quine = base64_decode_toguid(\"JpbpECu8dUy7Pv5gbeJXAA==\")  \n\nprint Empty = base64_decode_toguid(\"abcd1231\")",
        "sourceLength": 2189,
        "url": "https://learn.microsoft.com/en-us/kusto/query/base64-decode-toguid-function"
      }
    },
    {
      "name": "base64_decode_tostring",
      "category": "Function",
      "documentation": {
        "title": "base64_decode_tostring()",
        "description": "Decodes a base64 string to a UTF-8 string.\n\n> **Deprecated aliases:** base64_decodestring()",
        "syntax": "`base64_decode_tostring(`*base64_string*`)`",
        "returnInfo": "Returns UTF-8 string decoded from base64 string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *base64_string* | `string` |  *True* | The value to decode from base64 to UTF-8 string. |",
        "example": "print Quine=base64_decode_tostring(\"S3VzdG8=\")\n\nprint Empty=base64_decode_tostring(\"U3RyaW5n0KHR0tGA0L7Rh9C60LA=\")",
        "sourceLength": 2345,
        "url": "https://learn.microsoft.com/en-us/kusto/query/base64-decode-tostring-function"
      }
    },
    {
      "name": "base64_encode_fromarray",
      "category": "Function",
      "documentation": {
        "title": "base64_encode_fromarray()",
        "description": "Encodes a base64 string from a bytes array.",
        "syntax": "`base64_encode_fromarray(`*base64_string_decoded_as_a_byte_array*`)`",
        "returnInfo": "Returns the base64 string encoded from the bytes array. Note that byte is an integer type.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *base64_string_decoded_as_a_byte_array* | `dynamic` |  *True* | The bytes (integer) array to be encoded into a base64 string. |",
        "example": "let bytes_array = toscalar(print base64_decode_toarray(\"S3VzdG8=\"));\nprint decoded_base64_string = base64_encode_fromarray(bytes_array)\n\nlet empty_bytes_array = toscalar(print base64_decode_toarray(\"U3RyaW5n0KHR0tGA0L7Rh9C60LA\"));\nprint empty_string = base64_encode_fromarray(empty_bytes_array)",
        "sourceLength": 2876,
        "url": "https://learn.microsoft.com/en-us/kusto/query/base64-encode-fromarray-function"
      }
    },
    {
      "name": "base64_encode_fromguid",
      "category": "Function",
      "documentation": {
        "title": "base64_encode_fromguid()",
        "description": "Encodes a GUID to a base64 string.",
        "syntax": "`base64_encode_fromguid(`*guid*`)`",
        "returnInfo": "Returns a base64 string encoded from a GUID.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *guid* | `guid` |  *True* | The value to encode to a base64 string. |",
        "example": "print Quine = base64_encode_fromguid(toguid(\"ae3133f2-6e22-49ae-b06a-16e6a9b212eb\"))  \n\nprint Empty = base64_encode_fromguid(\"abcd1231\")",
        "sourceLength": 2322,
        "url": "https://learn.microsoft.com/en-us/kusto/query/base64-encode-fromguid-function"
      }
    },
    {
      "name": "base64_encode_tostring",
      "category": "Function",
      "documentation": {
        "title": "base64_encode_tostring()",
        "description": "Encodes a string as base64 string.\n\n> **Deprecated aliases:** base64_encodestring()",
        "syntax": "`base64_encode_tostring(`*string*`)`",
        "returnInfo": "Returns *string* encoded as a base64 string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *string* | `string` |  *True* |  The value to encode as a base64 string. |",
        "example": "print Quine=base64_encode_tostring(\"Kusto\")",
        "sourceLength": 1737,
        "url": "https://learn.microsoft.com/en-us/kusto/query/base64-encode-tostring-function"
      }
    },
    {
      "name": "beta_cdf",
      "category": "Function",
      "documentation": {
        "title": "beta_cdf()",
        "description": "Returns the standard cumulative beta distribution function.\n\nIf *probability* = `beta_cdf(`*x*,...`)`, then `beta_inv(`*probability*,...`)` = *x*.\n\nThe beta distribution is commonly used to study variation in the percentage of something across samples, such as the fraction of the day people spend watching television.",
        "syntax": "`beta_cdf(`*x*`,` *alpha*`,` *beta*`)`",
        "returnInfo": "The cumulative beta distribution function.\n\n> \n>\n> * If any argument is nonnumeric, the function returns `null`.\n> * If `x < 0` or `x > 1`, the function returns `NaN`.\n> * If `alpha ≤ 0` or `alpha > 10000`, the function returns `NaN`.\n> * If `beta ≤ 0` or `beta > 10000`, the function returns `NaN`.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *x* | int, long, or real |  *True*| A value at which to evaluate the function.|\n| *alpha* | int, long, or real |  *True*| A parameter of the distribution.|\n| *beta* | int, long, or real |  *True*| A parameter of the distribution.|",
        "example": "datatable(x:double, alpha:double, beta:double, comment:string)\n[\n    0.9, 10.0, 20.0, \"Valid input\",\n    1.5, 10.0, 20.0, \"x > 1, yields NaN\",\n    double(-10), 10.0, 20.0, \"x < 0, yields NaN\",\n    0.1, double(-1.0), 20.0, \"alpha is < 0, yields NaN\"\n]\n| extend b = beta_cdf(x, alpha, beta)",
        "sourceLength": 2950,
        "url": "https://learn.microsoft.com/en-us/kusto/query/beta-cdf-function"
      }
    },
    {
      "name": "beta_inv",
      "category": "Function",
      "documentation": {
        "title": "beta_inv()",
        "description": "Returns the inverse of the beta cumulative probability density function.\n\nIf *probability* = `beta_cdf(`*x*,...`)`, then `beta_inv(`*probability*,...`)` = *x*.\n\nThe beta distribution can be used in project planning to model probable completion times given an expected completion time and variability.",
        "syntax": "`beta_inv(`*probability*`,`*alpha*`,`*beta*`)`",
        "returnInfo": "The inverse of the beta cumulative probability density function beta_cdf()\n\n> \n>\n> * If any argument is nonnumeric, the function returns `null`.\n> * If `alpha ≤ 0` or `beta ≤ 0`, the function returns `null`.\n> * If `probability ≤ 0` or `probability > 1`, the function returns `NaN`.\n> * Given a value for *probability*, `beta_inv()` seeks that value x such that `beta_cdf(x, alpha, beta)` `=` *probability*.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *probability* | int, long, or real |  *True*| A probability associated with the beta distribution.|\n| *alpha* | int, long, or real |  *True*| A parameter of the distribution.|\n| *beta* | int, long, or real |  *True*| A parameter of the distribution.|",
        "example": "datatable(p:double, alpha:double, beta:double, comment:string)\n[\n    0.1, 10.0, 20.0, \"Valid input\",\n    1.5, 10.0, 20.0, \"p > 1, yields null\",\n    0.1, double(-1.0), 20.0, \"alpha is < 0, yields NaN\"\n]\n| extend b = beta_inv(p, alpha, beta)",
        "sourceLength": 3046,
        "url": "https://learn.microsoft.com/en-us/kusto/query/beta-inv-function"
      }
    },
    {
      "name": "beta_pdf",
      "category": "Function",
      "documentation": {
        "title": "beta_pdf()",
        "description": "Returns the probability density beta function.\n\nThe beta distribution is commonly used to study variation in the percentage of something across samples, such as the fraction of the day people spend watching television.",
        "syntax": "`beta_pdf(`*x*`,` *alpha*`,` *beta*`)`",
        "returnInfo": "The probability beta density function.\n\n> \n>\n> * If any argument is nonnumeric, the function returns `null`.\n> * If `x ≤ 0` or `1 ≤ x`, the function returns `NaN`.\n> * If `alpha ≤ 0` or `beta ≤ 0`, the function returns `NaN`.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *x* | int, long, or real |  *True*| A value at which to evaluate the function.|\n| *alpha* | int, long, or real |  *True*| A parameter of the distribution.|\n| *beta* | int, long, or real |  *True*| A parameter of the distribution.|",
        "example": "datatable(x:double, alpha:double, beta:double, comment:string)\n[\n    0.5, 10.0, 20.0, \"Valid input\",\n    1.5, 10.0, 20.0, \"x > 1, yields NaN\",\n    double(-10), 10.0, 20.0, \"x < 0, yields NaN\",\n    0.1, double(-1.0), 20.0, \"alpha is < 0, yields NaN\"\n]\n| extend r = beta_pdf(x, alpha, beta)",
        "sourceLength": 2770,
        "url": "https://learn.microsoft.com/en-us/kusto/query/beta-pdf-function"
      }
    },
    {
      "name": "bin",
      "category": "Function",
      "documentation": {
        "title": "bin()",
        "description": "Rounds values down to an integer multiple of a given bin size.\n\nUsed frequently in combination with `summarize by ...`.\nIf you have a scattered set of values, they'll be grouped into a smaller set of specific values.\n\n> The `bin()` and `floor()` functions are equivalent",
        "syntax": "`bin(`*value*`,`*roundTo*`)`",
        "returnInfo": "The nearest multiple of *roundTo* below *value*. Null values, a null bin size, or a negative bin size will result in null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* |  int, long, real, timespan, or datetime |  *True* | The value to round down. |\n| *roundTo* |  int, long, real, or timespan |  *True* | The \"bin size\" that divides *value*. |",
        "example": "print bin(4.5, 1)\n\nprint bin(time(16d), 7d)\n\nprint bin(datetime(1970-05-11 13:45:07), 1d)\n\nlet Start = datetime('2007-04-07');\nlet End = Start + 7d;\nStormEvents\n| where StartTime between (Start .. End)\n| where State == \"CALIFORNIA\" and EventType == \"Strong Wind\"\n| summarize PropertyDamage=sum(DamageProperty) by bin(StartTime, 1d)\n\nlet Start = datetime('2007-04-07');\nlet End = Start + 7d;\nStormEvents\n| where StartTime between (Start .. End)\n| where State == \"CALIFORNIA\" and EventType == \"Strong Wind\"\n| union (\n    range x from 1 to 1 step 1\n    | mv-expand StartTime=range(Start, End, 1d) to typeof(datetime)\n    | extend PropertyDamage=0\n    )\n| summarize PropertyDamage=sum(DamageProperty) by bin(StartTime, 1d)",
        "sourceLength": 5803,
        "url": "https://learn.microsoft.com/en-us/kusto/query/bin-function"
      }
    },
    {
      "name": "binary_and",
      "category": "Function",
      "documentation": {
        "title": "binary_and()",
        "description": "Performs a bitwise `AND` operation on two values.",
        "syntax": "`binary_and(`*value1*`,`*value2*`)`",
        "returnInfo": "Returns the result of a bitwise `AND` operation between `value1` and `value2`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value1* | `long` |  *True* | The left-hand value of the bitwise `AND` operation. |\n| *value2* | `long` |  *True* | The right-hand value of the bitwise `AND` operation. |",
        "example": "print result = binary_and(6, 3)",
        "sourceLength": 1441,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-and-function"
      }
    },
    {
      "name": "binary_not",
      "category": "Function",
      "documentation": {
        "title": "binary_not()",
        "description": "Performs a bitwise negation operation on a given value.",
        "syntax": "`binary_not(`*value*`)`",
        "returnInfo": "Returns logical NOT operation on a number: value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `long` |  *True* | The value to negate. |",
        "example": "binary_not(100)",
        "sourceLength": 1269,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-not-function"
      }
    },
    {
      "name": "binary_or",
      "category": "Function",
      "documentation": {
        "title": "binary_or()",
        "description": "Performs a bitwise `or` operation on two values.",
        "syntax": "`binary_or(`*value1*`,` *value2* `)`",
        "returnInfo": "Returns logical OR operation on a pair of numbers: value1 | value2.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value1* | `long` |  *True* | The left-hand value of the bitwise `OR` operation. |\n| *value2* | `long` |  *True* | The right-hand value of the bitwise `OR` operation. |",
        "example": "print result = binary_or(5, 3)",
        "sourceLength": 1461,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-or-function"
      }
    },
    {
      "name": "binary_shift_left",
      "category": "Function",
      "documentation": {
        "title": "binary_shift_left()",
        "description": "Performs a binary shift left operation on a pair of numbers.",
        "syntax": "`binary_shift_left(`*value*`,`*shift*`)`",
        "returnInfo": "Returns binary shift left operation on a pair of numbers: value << (shift%64).\nIf n is negative, a NULL value is returned.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `int` |  *True* | The value to shift left. |\n| *shift* | `int` |  *True* | The number of bits to shift left. |",
        "example": "binary_shift_left(1,2)",
        "sourceLength": 1498,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-shift-left-function"
      }
    },
    {
      "name": "binary_shift_right",
      "category": "Function",
      "documentation": {
        "title": "binary_shift_right()",
        "description": "Performs a binary shift right operation on a pair of numbers.",
        "syntax": "`binary_shift_right(`*value*`,`*shift*`)`",
        "returnInfo": "Returns binary shift right operation on a pair of numbers: value >> (shift%64).\nIf n is negative, a NULL value is returned.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `int` |  *True* | The value to shift right. |\n| *shift* | `int` |  *True* | The number of bits to shift right. |",
        "example": "binary_shift_right(1,2)",
        "sourceLength": 1507,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-shift-right-function"
      }
    },
    {
      "name": "binary_xor",
      "category": "Function",
      "documentation": {
        "title": "binary_xor()",
        "description": "Performs a bitwise `xor` operation on two values.",
        "syntax": "`binary_xor(`*value1*`,`*value2*`)`",
        "returnInfo": "Returns logical XOR operation on a pair of numbers: value1 ^ value2.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value1* | `int` |  *True* | The left-side value of the XOR operation. |\n| *value2* | `int` |  *True* | The right-side value of the XOR operation. |",
        "example": "binary_xor(1,1)\n\nbinary_xor(1,2)",
        "sourceLength": 1736,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-xor-function"
      }
    },
    {
      "name": "bitset_count_ones",
      "category": "Function",
      "documentation": {
        "title": "bitset_count_ones()",
        "description": "Performs a bitwise operation on the binary representation of a number.",
        "syntax": "`bitset_count_ones(`*value*`)`",
        "returnInfo": "Returns the number of set bits in the binary representation of a number.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `int` |  *True* | The value for which to calculate the number of set bits. |",
        "example": "// 42 = 32+8+2 : b'00101010' == 3 bits set\nprint ones = bitset_count_ones(42)",
        "sourceLength": 1516,
        "url": "https://learn.microsoft.com/en-us/kusto/query/bitset-count-ones-function"
      }
    },
    {
      "name": "case",
      "category": "Function",
      "documentation": {
        "title": "case()",
        "description": "Evaluates a list of predicates and returns the first result expression whose predicate is satisfied.\n\nIf none of the predicates return `true`, the result of the `else` expression is returned.\nAll `predicate` arguments must be expressions that evaluate to a  `boolean` value.\nAll `then` arguments and the `else` argument must be of the same type.",
        "syntax": "`case(`*predicate_1*, *then_1*,\n       [*predicate_2*, *then_2*, ...]\n       *else*`)`",
        "returnInfo": "The value of the first *then_i* whose *predicate_i* evaluates to `true`, or the value of *else* if neither of the predicates are satisfied.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *predicate* | `string` |  *True* | An expression that evaluates to a `boolean` value. |\n| *then* | `string` |  *True* | An expression that gets evaluated and its value is returned from the function if *predicate* is the first predicate that evaluates to `true`. |\n| *else* | `string` |  *True* | An expression that gets evaluated and its value is returned from the function if neither of the *predicate_i* evaluate to `true`. |",
        "example": "range Size from 1 to 15 step 2\n| extend bucket = case(Size <= 3, \"Small\", \n                       Size <= 10, \"Medium\", \n                       \"Large\")",
        "sourceLength": 2475,
        "url": "https://learn.microsoft.com/en-us/kusto/query/case-function"
      }
    },
    {
      "name": "ceiling",
      "category": "Function",
      "documentation": {
        "title": "ceiling()",
        "description": "Calculates the smallest integer greater than, or equal to, the specified numeric expression.",
        "syntax": "`ceiling(`*number*`)`",
        "returnInfo": "The smallest integer greater than, or equal to, the specified numeric expression.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | int, long, or real |  *True* | The value to round up. |",
        "example": "print c1 = ceiling(-1.1), c2 = ceiling(0), c3 = ceiling(0.9)",
        "sourceLength": 1466,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ceiling-function"
      }
    },
    {
      "name": "cluster",
      "category": "Function",
      "documentation": {
        "title": "cluster()",
        "description": ":::moniker range=\"azure-data-explorer\"\nChanges the reference of the query to a remote cluster. To access a database within the same cluster, use the database() function. For more information, see cross-database and cross-cluster queries.\n:::moniker-end\n\n:::moniker range=\"microsoft-fabric\"\nChanges the reference of the query to a remote Eventhouse. To access a database within the same Eventhouse, use the database() function. For more information, see cross-database and cross-cluster queries.\n<!-- Update link to the correct version for Fabric -->\n:::moniker-end",
        "syntax": "`cluster(`*name*`)`",
        "returnInfo": "",
        "parametersTable": ":::moniker range=\"azure-data-explorer\"\n| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *name* | `string` |  *True* | The name of the cluster to reference. The value can be specified as a fully qualified domain name, or the name of the cluster without the `.kusto.windows.net` suffix. The cluster name is treated as case-insenstive and the recommendation is to provide it lower-case. The value can't be the result of subquery evaluation. |\n:::moniker-end\n\n:::moniker range=\"microsoft-fabric\"\n| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *name* | `string` |  *True* | The full URL of the Eventhouse to reference. The value can be specified as a fully qualified domain name, or the name of the Eventhouse. The Eventhouse name is treated as case-insenstive and the recommendation is to provide it lower-case. The value can't be the result of subquery evaluation. |\n:::moniker-end",
        "example": "cluster('help').database('Samples').StormEvents | count\n\ncluster('help.kusto.windows.net').database('Samples').StormEvents | count\n\ncluster('help').database('Samples').StormEvents | count\n\ncluster('help.kusto.windows.net').database('Samples').StormEvents | count\n\nlet foo = (clusterName:string)\n{\n    cluster(clusterName).database('Samples').StormEvents | count\n};\nfoo('help')\n\n.create function foo(clusterName:string)\n{\n    cluster(clusterName).database('Samples').StormEvents | count\n};",
        "sourceLength": 4486,
        "url": "https://learn.microsoft.com/en-us/kusto/query/cluster-function"
      }
    },
    {
      "name": "coalesce",
      "category": "Function",
      "documentation": {
        "title": "coalesce()",
        "description": "Evaluates a list of expressions and returns the first non-null (or non-empty for string) expression.",
        "syntax": "`coalesce(`*arg*`,`*arg_2*`,[`*arg_3*`,...])`",
        "returnInfo": "The value of the first *arg* whose value isn't null (or not-empty for string expressions).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| arg | scalar |  *True* | The expression to be evaluated.|\n\n> \n>\n> * All arguments must be of the same type.\n> * Maximum of 64 arguments is supported.",
        "example": "print result=coalesce(tolong(\"not a number\"), tolong(\"42\"), 33)",
        "sourceLength": 1592,
        "url": "https://learn.microsoft.com/en-us/kusto/query/coalesce-function"
      }
    },
    {
      "name": "column_ifexists",
      "category": "Function",
      "documentation": {
        "title": "column_ifexists()",
        "description": "Displays the column, if the column exists. Otherwise, it returns the default column.\n\n> **Deprecated aliases:** columnifexists()",
        "syntax": "`column_ifexists(`*columnName*`,`*defaultValue*`)`",
        "returnInfo": "If *columnName* exists, then returns the column. Otherwise, it returns the *defaultValue* column.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *columnName* | `string` |  *True* | The name of the column to return.|\n| *defaultValue* | scalar |  *True* | The default column to return if *columnName* doesn't exist in the table. This value can be any scalar expression. For example, a reference to another column.|",
        "example": "StormEvents | project column_ifexists(\"Capital\", State)",
        "sourceLength": 2096,
        "url": "https://learn.microsoft.com/en-us/kusto/query/column-ifexists-function"
      }
    },
    {
      "name": "column_names_of",
      "category": "Function",
      "documentation": {
        "title": "column_names_of()",
        "description": "Returns the column names of a tabular expression.",
        "syntax": "`column_names_of(`*expression*`)`",
        "returnInfo": "Returns a dynamic array of strings, where each element represents a column name of the `expression` schema. If the expression doesn't exist, an error is raised.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expression* | `expression` | *True* | The tabular expression to evaluate. |",
        "example": "",
        "sourceLength": 1972,
        "url": "https://learn.microsoft.com/en-us/kusto/query/column-names-of-function"
      }
    },
    {
      "name": "convert_angle",
      "category": "Function",
      "documentation": {
        "title": "convert_angle",
        "description": "Converts an angle value from one unit to another.",
        "syntax": "`convert_angle(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one angle unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| `value` | `real` |  *True* | The value to be converted. |\n| `from` | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| `to` | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* Arcminute\n* Arcsecond\n* Centiradian\n* Deciradian\n* Degree\n* Gradian\n* Microdegree\n* Microradian\n* Millidegree\n* Milliradian\n* Nanodegree\n* Nanoradian\n* NatoMil\n* Radian\n* Revolution\n* Tilt",
        "example": "print result = convert_angle(1.2, 'Degree', 'Arcminute')",
        "sourceLength": 1993,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-angle-function"
      }
    },
    {
      "name": "convert_energy",
      "category": "Function",
      "documentation": {
        "title": "convert_energy",
        "description": "Converts an energy value from one unit to another.",
        "syntax": "`convert_energy(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one energy unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* BritishThermalUnit\n* Calorie\n* DecathermEc\n* DecathermImperial\n* DecathermUs\n* ElectronVolt\n* Erg\n* FootPound\n* GigabritishThermalUnit\n* GigaelectronVolt\n* Gigajoule\n* GigawattDay\n* GigawattHour\n* HorsepowerHour\n* Joule\n* KilobritishThermalUnit\n* Kilocalorie\n* KiloelectronVolt\n* Kilojoule\n* KilowattDay\n* KilowattHour\n* MegabritishThermalUnit\n* Megacalorie\n* MegaelectronVolt\n* Megajoule\n* MegawattDay\n* MegawattHour\n* Millijoule\n* TeraelectronVolt\n* TerawattDay\n* TerawattHour\n* ThermEc\n* ThermImperial\n* ThermUs\n* WattDay\n* WattHour",
        "example": "print result = convert_energy(1.2, 'Joule', 'BritishThermalUnit')",
        "sourceLength": 2385,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-energy-function"
      }
    },
    {
      "name": "convert_force",
      "category": "Function",
      "documentation": {
        "title": "convert_force",
        "description": "Converts a force value from one unit to another.",
        "syntax": "`convert_force(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one force unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* Decanewton\n* Dyn\n* KilogramForce\n* Kilonewton\n* KiloPond\n* KilopoundForce\n* Meganewton\n* Micronewton\n* Millinewton\n* Newton\n* OunceForce\n* Poundal\n* PoundForce\n* ShortTonForce\n* TonneForce",
        "example": "print result = convert_force(1.2, 'Newton', 'Decanewton')",
        "sourceLength": 1988,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-force-function"
      }
    },
    {
      "name": "convert_length",
      "category": "Function",
      "documentation": {
        "title": "convert_length",
        "description": "Converts a length value from one unit to another.",
        "syntax": "`convert_length(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one length unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* Angstrom\n* AstronomicalUnit\n* Centimeter\n* Chain\n* DataMile\n* Decameter\n* Decimeter\n* DtpPica\n* DtpPoint\n* Fathom\n* Foot\n* Hand\n* Hectometer\n* Inch\n* KilolightYear\n* Kilometer\n* Kiloparsec\n* LightYear\n* MegalightYear\n* Megaparsec\n* Meter\n* Microinch\n* Micrometer\n* Mil\n* Mile\n* Millimeter\n* Nanometer\n* NauticalMile\n* Parsec\n* PrinterPica\n* PrinterPoint\n* Shackle\n* SolarRadius\n* Twip\n* UsSurveyFoot\n* Yard",
        "example": "print result = convert_length(1.2, 'Meter', 'Foot')",
        "sourceLength": 2216,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-length-function"
      }
    },
    {
      "name": "convert_mass",
      "category": "Function",
      "documentation": {
        "title": "convert_mass",
        "description": "Converts a mass value from one unit to another.",
        "syntax": "`convert_mass(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one mass unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* Centigram\n* Decagram\n* Decigram\n* EarthMass\n* Grain\n* Gram\n* Hectogram\n* Kilogram\n* Kilopound\n* Kilotonne\n* LongHundredweight\n* LongTon\n* Megapound\n* Megatonne\n* Microgram\n* Milligram\n* Nanogram\n* Ounce\n* Pound\n* ShortHundredweight\n* ShortTon\n* Slug\n* SolarMass\n* Stone\n* Tonne",
        "example": "print result = convert_mass(1.2, 'Kilogram', 'Pound')",
        "sourceLength": 2077,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-mass-function"
      }
    },
    {
      "name": "convert_speed",
      "category": "Function",
      "documentation": {
        "title": "convert_speed",
        "description": "Converts a speed value from one unit to another.",
        "syntax": "`convert_speed(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one speed unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units.|\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* CentimeterPerHour\n* CentimeterPerMinute\n* CentimeterPerSecond\n* DecimeterPerMinute\n* DecimeterPerSecond\n* FootPerHour\n* FootPerMinute\n* FootPerSecond\n* InchPerHour\n* InchPerMinute\n* InchPerSecond\n* KilometerPerHour\n* KilometerPerMinute\n* KilometerPerSecond\n* Knot\n* MeterPerHour\n* MeterPerMinute\n* MeterPerSecond\n* MicrometerPerMinute\n* MicrometerPerSecond\n* MilePerHour\n* MillimeterPerHour\n* MillimeterPerMinute\n* MillimeterPerSecond\n* NanometerPerMinute\n* NanometerPerSecond\n* UsSurveyFootPerHour\n* UsSurveyFootPerMinute\n* UsSurveyFootPerSecond\n* YardPerHour\n* YardPerMinute\n* YardPerSecond",
        "example": "print result = convert_speed(1.2, 'MeterPerSecond', 'CentimeterPerHour')",
        "sourceLength": 2424,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-speed-function"
      }
    },
    {
      "name": "convert_temperature",
      "category": "Function",
      "documentation": {
        "title": "convert_temperature",
        "description": "Converts a temperature value from one unit to another.",
        "syntax": "`convert_temperature(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one temperature unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* DegreeCelsius\n* DegreeDelisle\n* DegreeFahrenheit\n* DegreeNewton\n* DegreeRankine\n* DegreeReaumur\n* DegreeRoemer\n* Kelvin\n* MillidegreeCelsius\n* SolarTemperature",
        "example": "print result = convert_temperature(1.2, 'Kelvin', 'DegreeCelsius')",
        "sourceLength": 2035,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-temperature-function"
      }
    },
    {
      "name": "convert_volume",
      "category": "Function",
      "documentation": {
        "title": "convert_volume",
        "description": "Converts a volume value from one unit to another.",
        "syntax": "`convert_volume(`*value*`,`*from*`,`*to*`)`",
        "returnInfo": "Returns the input value converted from one volume unit to another. Invalid units return `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `real` |  *True* | The value to be converted. |\n| *from* | `string` |  *True* | The unit to convert from. For possible values, see Conversion units. |\n| *to* | `string` |  *True* | The unit to convert to. For possible values, see Conversion units. |\n\n### Conversion units\n\n* AcreFoot\n* AuTablespoon\n* BoardFoot\n* Centiliter\n* CubicCentimeter\n* CubicDecimeter\n* CubicFoot\n* CubicHectometer\n* CubicInch\n* CubicKilometer\n* CubicMeter\n* CubicMicrometer\n* CubicMile\n* CubicMillimeter\n* CubicYard\n* Decaliter\n* DecausGallon\n* Deciliter\n* DeciusGallon\n* HectocubicFoot\n* HectocubicMeter\n* Hectoliter\n* HectousGallon\n* ImperialBeerBarrel\n* ImperialGallon\n* ImperialOunce\n* ImperialPint\n* KilocubicFoot\n* KilocubicMeter\n* KiloimperialGallon\n* Kiloliter\n* KilousGallon\n* Liter\n* MegacubicFoot\n* MegaimperialGallon\n* Megaliter\n* MegausGallon\n* MetricCup\n* MetricTeaspoon\n* Microliter\n* Milliliter\n* OilBarrel\n* UkTablespoon\n* UsBeerBarrel\n* UsCustomaryCup\n* UsGallon\n* UsLegalCup\n* UsOunce\n* UsPint\n* UsQuart\n* UsTablespoon\n* UsTeaspoon",
        "example": "print result = convert_volume(1.2, 'CubicMeter', 'AcreFoot')",
        "sourceLength": 2576,
        "url": "https://learn.microsoft.com/en-us/kusto/query/convert-volume-function"
      }
    },
    {
      "name": "cos",
      "category": "Function",
      "documentation": {
        "title": "cos()",
        "description": "Performs a cosine operation on the input value.\nThe angle is specified in radians.",
        "syntax": "`cos(`*number*`)`",
        "returnInfo": "The cosine of *number* of radians.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | `real` |  *True* | The value in radians for which to calculate the cosine. |",
        "example": "print cos(1)",
        "sourceLength": 1347,
        "url": "https://learn.microsoft.com/en-us/kusto/query/cos-function"
      }
    },
    {
      "name": "cot",
      "category": "Function",
      "documentation": {
        "title": "cot()",
        "description": "Calculates the trigonometric cotangent of the specified angle, in radians.",
        "syntax": "`cot(`*number*`)`",
        "returnInfo": "The cotangent function value for *number*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | `real` |  *True* | The value for which to calculate the cotangent. |",
        "example": "print cot(1)",
        "sourceLength": 1305,
        "url": "https://learn.microsoft.com/en-us/kusto/query/cot-function"
      }
    },
    {
      "name": "countof",
      "category": "Function",
      "documentation": {
        "title": "countof()",
        "description": "Counts occurrences of a substring in a string. Plain string matches may overlap; regex matches don't.",
        "syntax": "`countof(`*source*`,` *search* [`,` *kind*]`)`",
        "returnInfo": "The number of times that the *search* value can be matched in the *source* string. Plain string matches may overlap; regex matches don't.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | `string` |  *True* | The value to search. |\n| *search* | `string` |  *True* | The value or regular expression to match inside *source*. |\n| *kind* | `string` | | The value `normal` or `regex`. The default is `normal`. |",
        "example": "",
        "sourceLength": 1540,
        "url": "https://learn.microsoft.com/en-us/kusto/query/countof-function"
      }
    },
    {
      "name": "current_cluster_endpoint",
      "category": "Function",
      "documentation": {
        "title": "current_cluster_endpoint()",
        "description": ":::moniker range=\"azure-data-explorer || azure-monitor || microsoft-sentinel\"\nProvides the network endpoint (DNS name) of the current cluster being queried.\n::: moniker-end\n\n:::moniker range=\"microsoft-fabric\"\nProvides the network endpoint (DNS name) of the current Eventhouse being queried.\n::: moniker-end",
        "syntax": "`current_cluster_endpoint()`",
        "returnInfo": ":::moniker range=\"azure-data-explorer || azure-monitor || microsoft-sentinel\"\nReturns the network endpoint (DNS name) of the current cluster being queried, as a value of type `string`.\n::: moniker-end\n\n:::moniker range=\"microsoft-fabric\"\nReturns the network endpoint (DNS name) of the current Eventhouse being queried, as a value of type `string`.\n::: moniker-end",
        "parametersTable": "",
        "example": "print strcat(\"This query executed on: \", current_cluster_endpoint())",
        "sourceLength": 1535,
        "url": "https://learn.microsoft.com/en-us/kusto/query/current-cluster-endpoint-function"
      }
    },
    {
      "name": "current_database",
      "category": "Function",
      "documentation": {
        "title": "current_database()",
        "description": "PRovides the name of the database in scope (database that all query\nentities are resolved against if no other database is specified).",
        "syntax": "`current_database()`",
        "returnInfo": "Returns name of the database in scope as a value of type `string`.",
        "parametersTable": "",
        "example": "print strcat(\"Database in scope: \", current_database())",
        "sourceLength": 1003,
        "url": "https://learn.microsoft.com/en-us/kusto/query/current-database-function"
      }
    },
    {
      "name": "current_principal",
      "category": "Function",
      "documentation": {
        "title": "current_principal()",
        "description": "Provides the current principal name that runs the query.",
        "syntax": "`current_principal()`",
        "returnInfo": "The current principal fully qualified name (FQN) as a `string`.  \nThe string format is:  \n*PrinciplaType*`=`*PrincipalId*`;`*TenantId*",
        "parametersTable": "",
        "example": "print fqn=current_principal()",
        "sourceLength": 1451,
        "url": "https://learn.microsoft.com/en-us/kusto/query/current-principal-function"
      }
    },
    {
      "name": "current_principal_details",
      "category": "Function",
      "documentation": {
        "title": "current_principal_details()",
        "description": "Provides details of the principal running the query.",
        "syntax": "`current_principal_details()`",
        "returnInfo": "Returns the details of the current principal as a dynamic. The following table describes the returned fields.\n\n|Field|Description|\n|:--|:--|\n|UserPrincipalName|The sign-in identifier for users. For more information, see UPN.|\n|IdentityProvider|The source that validates the identity of the principal.|\n|Authority|The Microsoft Entra tenant ID.|\n|Mfa|Indicates the use of multifactor authentication. For more information, see Access token claims reference.|\n|Type|The category of the principal: `aaduser`, `aadapp`, or `aadgroup`.|\n|DisplayName|The user-friendly name  for the principal that is displayed in the UI.|\n|ObjectId|The Microsoft Entra object ID for the principal.|\n|FQN|The Fully Qualified Name (FQN) of the principal. Valuable for security role management commands. For more information, see Referencing security principals.|\n|Country|The user's country or region. This property is returned if the information is present. The value is a standard two-letter country or region code, for example, FR, JP, and SZ.|\n|TenantCountry|The resource tenant's country or region, set at a tenant level by an admin. This property is returned if the information is present. The value is a standard two-letter country or region code, for example, FR, JP, and SZ. |\n|TenantRegion|The region of the resource tenant. This property is returned if the information is present. The value is a standard two-letter country or region code, for example, FR, JP, and SZ. |",
        "parametersTable": "",
        "example": "print details=current_principal_details()",
        "sourceLength": 3434,
        "url": "https://learn.microsoft.com/en-us/kusto/query/current-principal-details-function"
      }
    },
    {
      "name": "current_principal_is_member_of",
      "category": "Function",
      "documentation": {
        "title": "current_principal_is_member_of()",
        "description": "Checks group membership or principal identity of the current principal running the query.",
        "syntax": "`current_principal_is_member_of(`*group*`)`",
        "returnInfo": "The function returns `true` if the current principal running the query is successfully matched for at least one input argument. If not, the function returns `false`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *group* | `dynamic` |  *True* | An array of string literals in which each literal represents a Microsoft Entra principal. See examples for Microsoft Entra principals.|\n\n> \n>\n> - To avoid throttling from Microsoft Entra ID, the `current_principal_is_member_of()` function only works with string literals. Using values that aren't string literals will result in an error in order to avoid a potentially large number of queries to Microsoft Entra ID.\n> - \n> - For more information on Group Membership cache behavior, see Access control overview.",
        "example": "print result=current_principal_is_member_of(\n    'aaduser=user1@fabrikam.com', \n    'aadgroup=group1@fabrikam.com',\n    'aadapp=66ad1332-3a94-4a69-9fa2-17732f093664;72f988bf-86f1-41af-91ab-2d7cd011db47'\n    )\n\nprint result=current_principal_is_member_of(\n    dynamic([\n    'aaduser=user1@fabrikam.com', \n    'aadgroup=group1@fabrikam.com',\n    'aadapp=66ad1332-3a94-4a69-9fa2-17732f093664;72f988bf-86f1-41af-91ab-2d7cd011db47'\n    ]))",
        "sourceLength": 3377,
        "url": "https://learn.microsoft.com/en-us/kusto/query/current-principal-is-member-of-function"
      }
    },
    {
      "name": "cursor_after",
      "category": "Function",
      "documentation": {
        "title": "cursor_after()",
        "description": "A predicate runs over the records of a table to compare their ingestion time against a database cursor.\n\n> \n> This function can only be invoked on records of a table that has the\nIngestionTime policy enabled.",
        "syntax": "`cursor_after(`*RHS*`)`",
        "returnInfo": "Returns a scalar value of type `bool` that indicates whether the record was ingested\nafter the database cursor *RHS* (`true`) or not (`false`).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *RHS* | `string` |  *True* | Either an empty string literal or a valid database cursor value.|",
        "example": "MyTable\n| where cursor_after('2024-08-01T00:00:00Z')",
        "sourceLength": 1730,
        "url": "https://learn.microsoft.com/en-us/kusto/query/cursor-after-function"
      }
    },
    {
      "name": "cursor_before_or_at",
      "category": "Function",
      "documentation": {
        "title": "cursor_before_or_at()",
        "description": "A predicate function runs over the records of a table to compare their ingestion time against the database cursor time.\n\n> \n> This function can only be invoked on records of a table that has the\nIngestionTime policy enabled.",
        "syntax": "`cursor_before_or_at(`*RHS*`)`",
        "returnInfo": "Returns a scalar value of type `bool` that indicates whether the record was ingested\nbefore or at the database cursor *RHS* (`true`) or not (`false`).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *RHS* | `string` |  *True* | Either an empty string literal or a valid database cursor value.|",
        "example": "MyTable\n| where cursor_before_or_at('2024-08-01T12:00:00Z')",
        "sourceLength": 1919,
        "url": "https://learn.microsoft.com/en-us/kusto/query/cursor-before-or-at-function"
      }
    },
    {
      "name": "datetime_add",
      "category": "Function",
      "documentation": {
        "title": "datetime_add()",
        "description": "Calculates a new datetime from a specified period multiplied by a specified amount, added to, or subtracted from a specified datetime.",
        "syntax": "`datetime_add(`*period*`,`*amount*`,`*datetime*`)`",
        "returnInfo": "Returns a datetime after a certain time/date interval has been added.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *period* | `string` |  *True* | The length of time by which to increment.|\n| *amount* | `int` |  *True* | The number of *periods* to add to or subtract from *datetime*. |\n| *datetime* | `datetime` |  *True* | The date to increment by the result of the *period* x *amount* calculation. |\n\nPossible values of *period*:\n\n* Year\n* Quarter\n* Month\n* Week\n* Day\n* Hour\n* Minute\n* Second\n* Millisecond\n* Microsecond\n* Nanosecond",
        "example": "print  year = datetime_add('year',1,make_datetime(2017,1,1)),\nquarter = datetime_add('quarter',1,make_datetime(2017,1,1)),\nmonth = datetime_add('month',1,make_datetime(2017,1,1)),\nweek = datetime_add('week',1,make_datetime(2017,1,1)),\nday = datetime_add('day',1,make_datetime(2017,1,1)),\nhour = datetime_add('hour',1,make_datetime(2017,1,1)),\nminute = datetime_add('minute',1,make_datetime(2017,1,1)),\nsecond = datetime_add('second',1,make_datetime(2017,1,1))\n\nprint  year = datetime_add('year',-5,make_datetime(2017,1,1)),\nquarter = datetime_add('quarter',12,make_datetime(2017,1,1)),\nmonth = datetime_add('month',-15,make_datetime(2017,1,1)),\nweek = datetime_add('week',100,make_datetime(2017,1,1))",
        "sourceLength": 3766,
        "url": "https://learn.microsoft.com/en-us/kusto/query/datetime-add-function"
      }
    },
    {
      "name": "datetime_diff",
      "category": "Function",
      "documentation": {
        "title": "datetime_diff()",
        "description": "Calculates the number of the specified periods between two datetime values.",
        "syntax": "`datetime_diff(`*period*`,`*datetime1*`,`*datetime2*`)`",
        "returnInfo": "Returns an integer that represents the amount of *periods* in the result of subtraction (*datetime1* - *datetime2*).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *period* | `string` |  *True* | The measurement of time used to calculate the return value. See possible values.|\n| *datetime1* | `datetime` |  *True* | The left-hand side of the subtraction equation.|\n| *datetime2* | `datetime` |  *True* | The right-hand side of the subtraction equation. |\n\n### Possible values of *period*\n\nThese values are case insensitive:\n\n* Year\n* Quarter\n* Month\n* Week\n* Day\n* Hour\n* Minute\n* Second\n* Millisecond\n* Microsecond\n* Nanosecond",
        "example": "print\nyear = datetime_diff('year',datetime(2017-01-01),datetime(2000-12-31)),\nquarter = datetime_diff('quarter',datetime(2017-07-01),datetime(2017-03-30)),\nmonth = datetime_diff('month',datetime(2017-01-01),datetime(2015-12-30)),\nweek = datetime_diff('week',datetime(2017-10-29 00:00),datetime(2017-09-30 23:59)),\nday = datetime_diff('day',datetime(2017-10-29 00:00),datetime(2017-09-30 23:59)),\nhour = datetime_diff('hour',datetime(2017-10-31 01:00),datetime(2017-10-30 23:59)),\nminute = datetime_diff('minute',datetime(2017-10-30 23:05:01),datetime(2017-10-30 23:00:59)),\nsecond = datetime_diff('second',datetime(2017-10-30 23:00:10.100),datetime(2017-10-30 23:00:00.900)),\nmillisecond = datetime_diff('millisecond',datetime(2017-10-30 23:00:00.200100),datetime(2017-10-30 23:00:00.100900)),\nmicrosecond = datetime_diff('microsecond',datetime(2017-10-30 23:00:00.1009001),datetime(2017-10-30 23:00:00.1008009)),\nnanosecond = datetime_diff('nanosecond',datetime(2017-10-30 23:00:00.0000000),datetime(2017-10-30 23:00:00.0000007))",
        "sourceLength": 3523,
        "url": "https://learn.microsoft.com/en-us/kusto/query/datetime-diff-function"
      }
    },
    {
      "name": "datetime_local_to_utc",
      "category": "Function",
      "documentation": {
        "title": "datetime_local_to_utc()",
        "description": "Converts local datetime to UTC datetime using a time-zone specification.",
        "syntax": "`datetime_local_to_utc(`*from*`,`*timezone*`)`",
        "returnInfo": "Returns a UTC datetime that corresponds the local datetime in the specified `timezone`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *from* | `datetime` |  *True* | The local datetime to convert.|\n| *timezone* | `string` |  *True* | The timezone of the desired datetime. The value must be one of the supported timezones.|",
        "example": "datatable(local_dt: datetime, tz: string)\n[ datetime(2020-02-02 20:02:20), 'US/Pacific', \n  datetime(2020-02-02 20:02:20), 'America/Chicago', \n  datetime(2020-02-02 20:02:20), 'Europe/Paris']\n| extend utc_dt = datetime_local_to_utc(local_dt, tz)\n\nrange Local from datetime(2022-03-27 01:00:00.0000000) to datetime(2022-03-27 04:00:00.0000000) step 1h\n| extend UTC=datetime_local_to_utc(Local, 'Europe/Brussels')\n| extend BackToLocal=datetime_utc_to_local(UTC, 'Europe/Brussels')\n| extend diff=Local-BackToLocal",
        "sourceLength": 3568,
        "url": "https://learn.microsoft.com/en-us/kusto/query/datetime-local-to-utc-function"
      }
    },
    {
      "name": "datetime_part",
      "category": "Function",
      "documentation": {
        "title": "datetime_part()",
        "description": "Extracts the requested date part as an integer value.\n\n> **Deprecated aliases:** datepart()",
        "syntax": "`datetime_part(`*part*`,`*datetime*`)`",
        "returnInfo": "Returns an integer representing the extracted part.\n\n> \n> `week_of_year` returns an integer which represents the week number. The week number is calculated from the first week of a year, which is the one that includes the first Thursday.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *part* | `string` |  *True* | Measurement of time to extract from *date*. See possible values.|\n| *date* | `datetime` |  *True* | The full date from which to extract *part*. |\n\n### Possible values of part\n\n* Year\n* Quarter\n* Month\n* week_of_year\n* Day\n* DayOfYear\n* Hour\n* Minute\n* Second\n* Millisecond\n* Microsecond\n* Nanosecond",
        "example": "let dt = datetime(2017-10-30 01:02:03.7654321); \nprint \nyear = datetime_part(\"year\", dt),\nquarter = datetime_part(\"quarter\", dt),\nmonth = datetime_part(\"month\", dt),\nweekOfYear = datetime_part(\"week_of_year\", dt),\nday = datetime_part(\"day\", dt),\ndayOfYear = datetime_part(\"dayOfYear\", dt),\nhour = datetime_part(\"hour\", dt),\nminute = datetime_part(\"minute\", dt),\nsecond = datetime_part(\"second\", dt),\nmillisecond = datetime_part(\"millisecond\", dt),\nmicrosecond = datetime_part(\"microsecond\", dt),\nnanosecond = datetime_part(\"nanosecond\", dt)",
        "sourceLength": 3315,
        "url": "https://learn.microsoft.com/en-us/kusto/query/datetime-part-function"
      }
    },
    {
      "name": "datetime_utc_to_local",
      "category": "Function",
      "documentation": {
        "title": "datetime_utc_to_local()",
        "description": "Converts UTC datetime to local datetime using a time-zone specification.",
        "syntax": "`datetime_utc_to_local(`*from*`,`*timezone*`)`",
        "returnInfo": "Returns a local datetime in the *timezone* that corresponds the UTC datetime.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *from* | `datetime` |  *True* | The UTC datetime to convert.|\n| *timezone* | `string` |  *True* | The timezone to convert to. This value must be one of the supported timezones.|",
        "example": "print dt=now()\n| extend pacific_dt = datetime_utc_to_local(dt, 'US/Pacific'), canberra_dt = datetime_utc_to_local(dt, 'Australia/Canberra')\n| extend diff = pacific_dt - canberra_dt",
        "sourceLength": 2318,
        "url": "https://learn.microsoft.com/en-us/kusto/query/datetime-utc-to-local-function"
      }
    },
    {
      "name": "dcount_hll",
      "category": "Function",
      "documentation": {
        "title": "dcount_hll()",
        "description": "Calculates the distinct count from results generated by hll or hll_merge.\n\nRead about the underlying algorithm (*H*yper*L*og*L*og) and estimation accuracy.",
        "syntax": "`dcount_hll(`*hll*`)`",
        "returnInfo": "Returns the distinct count of each value in *hll*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*hll*| `string` | *True*| An expression generated by hll or hll-merge to be used to find the distinct count.|",
        "example": "StormEvents\n| summarize hllRes = hll(DamageProperty) by bin(StartTime,10m)\n| summarize hllMerged = hll_merge(hllRes)\n| project dcount_hll(hllMerged)",
        "sourceLength": 2065,
        "url": "https://learn.microsoft.com/en-us/kusto/query/dcount-hll-function"
      }
    },
    {
      "name": "degrees",
      "category": "Function",
      "documentation": {
        "title": "degrees()",
        "description": "Converts angle value in radians into value in degrees, using the formula `degrees = (180 / PI ) * angle_in_radians`.",
        "syntax": "`degrees(`*radians*`)`",
        "returnInfo": "Returns the corresponding angle in degrees for an angle specified in radians.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *radians* | `real` |  *True* | The angle in radians to convert to degrees. |",
        "example": "print degrees0 = degrees(pi()/4), degrees1 = degrees(pi()*1.5), degrees2 = degrees(0)",
        "sourceLength": 1574,
        "url": "https://learn.microsoft.com/en-us/kusto/query/degrees-function"
      }
    },
    {
      "name": "dynamic_to_json",
      "category": "Function",
      "documentation": {
        "title": "dynamic_to_json()",
        "description": "Converts a scalar value of type `dynamic` to a canonical `string` representation.",
        "syntax": "`dynamic_to_json(`*expr*`)`",
        "returnInfo": "Returns a canonical representation of the input as a value of type `string`,\naccording to the following rules:\n\n* If the input is a scalar value of type other than `dynamic`,\n   the output is the application of `tostring()` to that value.\n\n* If the input is an array of values, the output is composed of the\n   characters `[`, `,`, and `]` interspersed with the canonical representation\n   described here of each array element.\n\n* If the input is a property bag, the output is composed of the characters\n   `{`, `,`, and `}` interspersed with the colon (`:`)-delimited name/value pairs\n   of the properties. The pairs are sorted by the names, and the values\n   are in the canonical representation described here of each array element.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *expr* | `dynamic` |  *True* | The expression to convert to string representation.|",
        "example": "let bag1 = dynamic_to_json(\n  dynamic({\n    'Y10':dynamic({}),\n    'X8': dynamic({\n      'c3':1,\n      'd8':5,\n      'a4':6\n    }),\n    'D1':114,\n    'A1':12,\n    'B1':2,\n    'C1':3,\n    'A14':[15, 13, 18]\n}));\nlet bag2 = dynamic_to_json(\n  dynamic({\n    'X8': dynamic({\n      'a4':6,\n      'c3':1,\n      'd8':5\n    }),\n    'A14':[15, 13, 18],\n    'C1':3,\n    'B1':2,\n    'Y10': dynamic({}),\n    'A1':12, 'D1':114\n  }));\nprint AreEqual=bag1 == bag2, Result=bag1",
        "sourceLength": 2919,
        "url": "https://learn.microsoft.com/en-us/kusto/query/dynamic-to-json-function"
      }
    },
    {
      "name": "endofday",
      "category": "Function",
      "documentation": {
        "title": "endofday()",
        "description": "Provides the end of the day containing the date, shifted by an offset, if provided.",
        "syntax": "`endofday(`*date* [, *offset*]`)`",
        "returnInfo": "Returns a datetime representing the end of the day for the given *date* value, with the *offset*, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True*| The date to find the end of. |\n| *offset* | `int` | | The number of offset days from *date*. Default is 0. |",
        "example": "range offset from -1 to 1 step 1\n | project dayEnd = endofday(datetime(2017-01-01 10:10:17), offset)",
        "sourceLength": 2027,
        "url": "https://learn.microsoft.com/en-us/kusto/query/endofday-function"
      }
    },
    {
      "name": "endofmonth",
      "category": "Function",
      "documentation": {
        "title": "endofmonth()",
        "description": "Provides the end of the month containing the date, shifted by an offset, if provided.",
        "syntax": "`endofmonth(`*date* [, *offset*]`)`",
        "returnInfo": "Returns a datetime representing the end of the month for the given *date* value, with the *offset*, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True*| The date used to find the end of the month. |\n| *offset* | `int` | | The number of offset months from *date*. Default is 0. |",
        "example": "range offset from -1 to 1 step 1\n | project monthEnd = endofmonth(datetime(2017-01-01 10:10:17), offset)",
        "sourceLength": 2066,
        "url": "https://learn.microsoft.com/en-us/kusto/query/endofmonth-function"
      }
    },
    {
      "name": "endofweek",
      "category": "Function",
      "documentation": {
        "title": "endofweek()",
        "description": "Provides the end of the week containing the date, shifted by an offset, if provided.\n\nLast day of the week is considered to be a Saturday.",
        "syntax": "`endofweek(`*date* [, *offset*]`)`",
        "returnInfo": "Returns datetime representing the end of the week for the given *date* value, with the *offset*, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True*| The date used to find the end of the week. |\n| *offset* | `int` | | The number of offset weeks from *date*. Default is 0. |",
        "example": "range offset from -1 to 1 step 1\n | project weekEnd = endofweek(datetime(2017-01-01 10:10:17), offset)  \n\nlet endofweekSunday = (dateArg: datetime) {\n    datetime_add('day', 8, endofweek(datetime_add('day', -8, dateArg)))\n};\nlet data=datatable(Date: datetime, day: string)\n[\ndatetime(2025, 6, 14), \"Saturday\",\ndatetime(2025, 6, 15), \"Sunday\",\ndatetime(2025, 6, 16), \"Monday\",\ndatetime(2025, 6, 17), \"Tuesday\"\n];\ndata \n| extend SundayEndOfWeek=endofweekSunday(Date)",
        "sourceLength": 3519,
        "url": "https://learn.microsoft.com/en-us/kusto/query/endofweek-function"
      }
    },
    {
      "name": "endofyear",
      "category": "Function",
      "documentation": {
        "title": "endofyear()",
        "description": "Provides the end of the year containing the date, shifted by an offset, if provided.",
        "syntax": "`endofyear(`*date* [, *offset*]`)`",
        "returnInfo": "Returns a datetime representing the end of the year for the given *date* value, with the &*offset*, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True*| The date used to find the end of the year. |\n| *offset* | `int` | | The number of offset years from *date*. Default is 0. |",
        "example": "range offset from -1 to 1 step 1\n | project yearEnd = endofyear(datetime(2017-01-01 10:10:17), offset)",
        "sourceLength": 2054,
        "url": "https://learn.microsoft.com/en-us/kusto/query/endofyear-function"
      }
    },
    {
      "name": "erf",
      "category": "Function",
      "documentation": {
        "title": "erf()",
        "description": "Returns the error function of the input.",
        "syntax": "`erf(`*x*`)`",
        "returnInfo": "Returns the error function of x.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True* | The value for which to calculate the function. |",
        "example": "range x from -3 to 3 step 1\n| extend erf_x = erf(x)",
        "sourceLength": 1604,
        "url": "https://learn.microsoft.com/en-us/kusto/query/erf-function"
      }
    },
    {
      "name": "erfc",
      "category": "Function",
      "documentation": {
        "title": "erfc()",
        "description": "Provides the complementary error function of the input.",
        "syntax": "`erfc(`*x*`)`",
        "returnInfo": "Returns the complementary error function of x.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True* | The value for which to calculate the function. |",
        "example": "range x from -3 to 3 step 1\n| extend erf_x = erfc(x)",
        "sourceLength": 1653,
        "url": "https://learn.microsoft.com/en-us/kusto/query/erfc-function"
      }
    },
    {
      "name": "estimate_data_size",
      "category": "Function",
      "documentation": {
        "title": "estimate_data_size()",
        "description": "Provides an estimated data size in bytes for the selected columns of a tabular expression.",
        "syntax": "`estimate_data_size(`*columns*`)`",
        "returnInfo": "Returns the estimated data size in bytes of the referenced columns. Estimation is based on data types and actual values.\nFor example, the data size for the string `'{\"a\":\"bcd\"}'` is smaller than the dynamic value `dynamic({\"a\":\"bcd\"})`\nbecause the latter's internal representation is more complex than that of a string.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*columns*| `string` | *True*|One or more comma-separated column references in the source tabular expression to use for data size estimation. To include all columns, use the wildcard (`*`) character.|",
        "example": "range x from 1 to 10 step 1                    // x (long) is 8 \n| extend Text = '1234567890'                   // Text length is 10  \n| summarize Total=sum(estimate_data_size(*))   // (8+10)x10 = 180",
        "sourceLength": 2290,
        "url": "https://learn.microsoft.com/en-us/kusto/query/estimate-data-size-function"
      }
    },
    {
      "name": "exp",
      "category": "Function",
      "documentation": {
        "title": "exp()",
        "description": "The base-e exponential function of x, which is e raised to the power x: e^x.",
        "syntax": "`exp(`*x*`)`",
        "returnInfo": "The exponential value of x.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True*| The value of the exponent. |",
        "example": "print result = exp(2)",
        "sourceLength": 1307,
        "url": "https://learn.microsoft.com/en-us/kusto/query/exp-function"
      }
    },
    {
      "name": "exp10",
      "category": "Function",
      "documentation": {
        "title": "exp10()",
        "description": "The base-10 exponential function of x, which is 10 raised to the power x: 10^x.",
        "syntax": "`exp10(`*x*`)`",
        "returnInfo": "Returns the exponential value of x.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True*| The value of the exponent. |",
        "example": "print result = exp10(2)",
        "sourceLength": 1324,
        "url": "https://learn.microsoft.com/en-us/kusto/query/exp10-function"
      }
    },
    {
      "name": "exp2",
      "category": "Function",
      "documentation": {
        "title": "exp2()",
        "description": "The base-2 exponential function of x, which is 2 raised to the power x: 2^x.",
        "syntax": "`exp2(`*x*`)`",
        "returnInfo": "Returns the exponential value of x.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True*| The value of the exponent. |",
        "example": "print result = exp2(3)",
        "sourceLength": 1315,
        "url": "https://learn.microsoft.com/en-us/kusto/query/exp2-function"
      }
    },
    {
      "name": "extent_id",
      "category": "Function",
      "documentation": {
        "title": "extent_id()",
        "description": "Provides a unique identifier for the data shard (\"extent\") containing the current record at the time the query was run.\n\nApplying this function to calculated data that isn't attached to a data shard returns an empty guid (all zeros).\n\n> **Deprecated aliases:** extentid()\n\n> \n>\n> The value returned by this function isn't guaranteed to remain stable over time. The system continuously performs data grooming operations in the background\n> and these can result with changes to existing extents and their IDs.",
        "syntax": "`extent_id()`",
        "returnInfo": "Returns a value of type `guid` that identifies the current record's data shard at the time the query was run,\nor an empty guid (all zeros).",
        "parametersTable": "",
        "example": "T\n| where Timestamp > ago(1h)\n| where ActivityId == 'dd0595d4-183e-494e-b88e-54c52fe90e5a'\n| extend eid=extent_id()\n| summarize by eid",
        "sourceLength": 1895,
        "url": "https://learn.microsoft.com/en-us/kusto/query/extent-id-function"
      }
    },
    {
      "name": "extent_tags",
      "category": "Function",
      "documentation": {
        "title": "extent_tags()",
        "description": "Provides a dynamic array with the extent tags of the extent that the current record is in.\n\nIf you apply this function to calculated data, which isn't attached to a data shard, returns an empty value.",
        "syntax": "`extent_tags()`",
        "returnInfo": "Returns a value of type `dynamic` that is an array holding the current record's extent tags,\nor an empty value.",
        "parametersTable": "",
        "example": "T\n| where Timestamp > ago(1h)\n| where ActivityId == 'dd0595d4-183e-494e-b88e-54c52fe90e5a'\n| extend tags = extent_tags()\n| summarize by tostring(tags)\n\nT\n| where Timestamp > ago(1h)\n| extend Tags = extent_tags()\n| where Tags has_cs 'MyTag' and Tags !has_cs 'drop-by:MyOtherTag'\n| count",
        "sourceLength": 2161,
        "url": "https://learn.microsoft.com/en-us/kusto/query/extent-tags-function"
      }
    },
    {
      "name": "extract",
      "category": "Function",
      "documentation": {
        "title": "extract()",
        "description": "Get a match for a regular expression from a source string.\n\nOptionally, convert the extracted substring to the indicated type.",
        "syntax": "`extract(`*regex*`,` *captureGroup*`,` *source* [`,` *typeLiteral*]`)`",
        "returnInfo": "If *regex* finds a match in *source*: the substring matched against the indicated capture group *captureGroup*, optionally converted to *typeLiteral*.\n\nIf there's no match, or the type conversion fails: `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *regex* | `string` |  *True* | A regular expression.|\n| *captureGroup* | `int` |  *True* | The capture group to extract. 0 stands for the entire match, 1 for the value matched by the first '('parenthesis')' in the regular expression, and 2 or more for subsequent parentheses.|\n| *source* | `string` |  *True*| The string to search.|\n| *typeLiteral* | `string` | | If provided, the extracted substring is converted to this type. For example, `typeof(long)`.",
        "example": "let Text = \"User: JohnDoe, Email: johndoe@example.com, Age: 29\";\nprint UserName = extract(\"User: ([^,]+)\", 1, Text),\nEmailId = extract(@\"Email: (\\S+),\", 1, Text),\nAge = extract(@\"\\d+\", 0, Text)\n\nlet Dates = datatable(DateString: string)\n[\n    \"15-12-2024\",\n    \"21-07-2023\",\n    \"10-03-2022\"\n];\nDates\n| extend Month = extract(@\"-(\\d{2})-\", 1, DateString, typeof(int))\n| project DateString, Month",
        "sourceLength": 3654,
        "url": "https://learn.microsoft.com/en-us/kusto/query/extract-function"
      }
    },
    {
      "name": "extract_all",
      "category": "Function",
      "documentation": {
        "title": "extract_all()",
        "description": "Get all matches for a regular expression from a source string.\nOptionally, retrieve a subset of matching groups.\n\n```kusto\nprint extract_all(@\"(\\d+)\", \"a set of numbers: 123, 567 and 789\") // results with the dynamic array [\"123\", \"567\", \"789\"]\n```\n\n> **Deprecated aliases:** extractall()",
        "syntax": "`extract_all(`*regex*`,` [*captureGroups*`,`] *source*`)`",
        "returnInfo": "* If *regex* finds a match in *source*: Returns dynamic array including all matches against the indicated capture groups *captureGroups*, or all of capturing groups in the *regex*.\n* If number of *captureGroups* is 1: The returned array has a single dimension of matched values.\n* If number of *captureGroups* is more than 1: The returned array is a two-dimensional collection of multi-value matches per *captureGroups* selection, or all capture groups present in the *regex* if *captureGroups* is omitted.\n* If there's no match: `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *regex* | `string` |  *True* | A regular expression containing between one and 16 capture groups.|\n| *captureGroups* | `dynamic` | | An array that indicates the capture groups to extract. Valid values are from 1 to the number of capturing groups in the regular expression. Named capture groups are allowed as well. See examples.|\n| *source* | `string` |  *True*| The string to search.|",
        "example": "print Id=\"82b8be2d-dfa7-4bd1-8f63-24ad26d31449\"\n| extend guid_bytes = extract_all(@\"([\\da-f]{2})\", Id) \n\nprint Id=\"82b8be2d-dfa7-4bd1-8f63-24ad26d31449\"\n| extend guid_bytes = extract_all(@\"(\\w)(\\w+)(\\w)\", Id)\n\nprint Id=\"82b8be2d-dfa7-4bd1-8f63-24ad26d31449\"\n| extend guid_bytes = extract_all(@\"(\\w)(\\w+)(\\w)\", dynamic([1,3]), Id) \n\nprint Id=\"82b8be2d-dfa7-4bd1-8f63-24ad26d31449\"\n| extend guid_bytes = extract_all(@\"(?P<first>\\w)(?P<middle>\\w+)(?P<last>\\w)\", dynamic(['first',2,'last']), Id)",
        "sourceLength": 5590,
        "url": "https://learn.microsoft.com/en-us/kusto/query/extract-all-function"
      }
    },
    {
      "name": "extract_json",
      "category": "Function",
      "documentation": {
        "title": "extract_json()",
        "description": "Get a specified element out of a JSON text using a path expression.\n\nOptionally convert the extracted string to a specific type.\n\n> The `extract_json()` and `extractjson()` functions are equivalent",
        "syntax": "`extract_json(`*jsonPath*`,` *dataSource*`,` *type*`)`",
        "returnInfo": "This function performs a JSONPath query into dataSource, which contains a valid JSON string, optionally converting that value to another type depending on the third argument.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *jsonPath* | `string` |  *True* | A JSONPath that defines an accessor into the JSON document.|\n| *dataSource* | `string` |  *True* | A JSON document.|\n| *type* | `string` | | An optional type literal. If provided, the extracted value is converted to this type. For example, `typeof(long)` will convert the extracted value to a `long`.|\n\n* Apply where-clauses before using `extract_json()`.\n* Consider using a regular expression match with extract instead. This can run very much faster, and is effective if the JSON is produced from a template.\n* Use `parse_json()` if you need to extract more than one value from the JSON.\n* Consider having the JSON parsed at ingestion by declaring the type of the column to be dynamic.",
        "example": "let json = '{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}';\nprint extract_json(\"$.name\", json, typeof(string));",
        "sourceLength": 2823,
        "url": "https://learn.microsoft.com/en-us/kusto/query/extract-json-function"
      }
    },
    {
      "name": "floor",
      "category": "Function",
      "documentation": {
        "title": "bin()",
        "description": "Rounds values down to an integer multiple of a given bin size.\n\nUsed frequently in combination with `summarize by ...`.\nIf you have a scattered set of values, they'll be grouped into a smaller set of specific values.\n\n> The `bin()` and `floor()` functions are equivalent",
        "syntax": "`bin(`*value*`,`*roundTo*`)`",
        "returnInfo": "The nearest multiple of *roundTo* below *value*. Null values, a null bin size, or a negative bin size will result in null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* |  int, long, real, timespan, or datetime |  *True* | The value to round down. |\n| *roundTo* |  int, long, real, or timespan |  *True* | The \"bin size\" that divides *value*. |",
        "example": "print bin(4.5, 1)\n\nprint bin(time(16d), 7d)\n\nprint bin(datetime(1970-05-11 13:45:07), 1d)\n\nlet Start = datetime('2007-04-07');\nlet End = Start + 7d;\nStormEvents\n| where StartTime between (Start .. End)\n| where State == \"CALIFORNIA\" and EventType == \"Strong Wind\"\n| summarize PropertyDamage=sum(DamageProperty) by bin(StartTime, 1d)\n\nlet Start = datetime('2007-04-07');\nlet End = Start + 7d;\nStormEvents\n| where StartTime between (Start .. End)\n| where State == \"CALIFORNIA\" and EventType == \"Strong Wind\"\n| union (\n    range x from 1 to 1 step 1\n    | mv-expand StartTime=range(Start, End, 1d) to typeof(datetime)\n    | extend PropertyDamage=0\n    )\n| summarize PropertyDamage=sum(DamageProperty) by bin(StartTime, 1d)",
        "sourceLength": 5803,
        "url": "https://learn.microsoft.com/en-us/kusto/query/bin-function"
      }
    },
    {
      "name": "format_bytes",
      "category": "Function",
      "documentation": {
        "title": "format_bytes()",
        "description": "Formats a number as a string representing data size in bytes.",
        "syntax": "`format_bytes(`*size* [`,` *precision* [`,` *units*]]`)`",
        "returnInfo": "A string of *size* formatted as data size in bytes.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *size* | `real` |  *True* | The value to be formatted as data size in bytes.|\n| *precision* | `int` | | The number of digits the value will be rounded to after the decimal point. The default is 0.|\n| *units* | `string` | | The units of the target data size: `Bytes`, `KB`, `MB`, `GB`, `TB`, `PB`, or `EB`. If this parameter is empty, the units will be auto-selected based on input value.|",
        "example": "print \nv1 = format_bytes(564),\nv2 = format_bytes(10332, 1),\nv3 = format_bytes(20010332),\nv4 = format_bytes(20010332, 2),\nv5 = format_bytes(20010332, 0, \"KB\")",
        "sourceLength": 2166,
        "url": "https://learn.microsoft.com/en-us/kusto/query/format-bytes-function"
      }
    },
    {
      "name": "format_datetime",
      "category": "Function",
      "documentation": {
        "title": "format_datetime()",
        "description": "Formats a datetime according to the provided format.",
        "syntax": "`format_datetime(`*date* `,` *format*`)`",
        "returnInfo": "A string with *date* formatted as specified by *format*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The value to format.|\n| *format* | `string` |  *True*| The output format comprised of one or more of the supported format elements.\n\n### Supported format elements\n\nThe *format* parameter should include one or more of the following elements:\n\n|Format specifier| Description| Examples|\n|:--|:--|:--|\n|`d`| The day of the month, from 1 through 31.| 2009-06-01T13:45:30 -> 1, 2009-06-15T13:45:30 -> 15\n|`dd`| The day of the month, from 01 through 31.| 2009-06-01T13:45:30 -> 01, 2009-06-15T13:45:30 -> 15\n|`f`| The tenths of a second in a date and time value.| 2009-06-15T13:45:30.6170000 -> 6, 2009-06-15T13:45:30.05 -> 0\n|`ff`| The hundredths of a second in a date and time value.| 2009-06-15T13:45:30.6170000 -> 61, 2009-06-15T13:45:30.0050000 -> 00\n|`fff`| The milliseconds in a date and time value.| 6/15/2009 13:45:30.617 -> 617, 6/15/2009 13:45:30.0005 -> 000\n|`ffff`| The ten thousandths of a second in a date and time value.| 2009-06-15T13:45:30.6175000 -> 6175, 2009-06-15T13:45:30.0000500 -> 0000\n|`fffff`| The hundred thousandths of a second in a date and time value. |2009-06-15T13:45:30.6175400 -> 61754, 2009-06-15T13:45:30.000005 -> 00000\n|`ffffff`| The millionths of a second in a date and time value.| 2009-06-15T13:45:30.6175420 -> 617542, 2009-06-15T13:45:30.0000005 -> 000000\n|`fffffff`| The ten millionths of a second in a date and time value.| 2009-06-15T13:45:30.6175425 -> 6175425, 2009-06-15T13:45:30.0001150 -> 0001150\n|`F`| If non-zero, the tenths of a second in a date and time value.| 2009-06-15T13:45:30.6170000 -> 6, 2009-06-15T13:45:30.0500000 -> (no output)\n|`FF`| If non-zero, the hundredths of a second in a date and time value.| 2009-06-15T13:45:30.6170000 -> 61, 2009-06-15T13:45:30.0050000 -> (no output)\n|`FFF`| If non-zero, the milliseconds in a date and time value.| 2009-06-15T13:45:30.6170000 -> 617, 2009-06-15T13:45:30.0005000 -> (no output)\n|`FFFF`| If non-zero, the ten thousandths of a second in a date and time value.|2009-06-15T13:45:30.5275000 -> 5275, 2009-06-15T13:45:30.0000500 -> (no output)\n|`FFFFF`| If non-zero, the hundred thousandths of a second in a date and time value.| 2009-06-15T13:45:30.6175400 -> 61754, 2009-06-15T13:45:30.0000050 -> (no output)\n|`FFFFFF`| If non-zero, the millionths of a second in a date and time value.| 2009-06-15T13:45:30.6175420 -> 617542, 2009-06-15T13:45:30.0000005 -> (no output)\n|`FFFFFFF`| If non-zero, the ten millionths of a second in a date and time value.| 2009-06-15T13:45:30.6175425 -> 6175425, 2009-06-15T13:45:30.0001150 -> 000115\n|`h`| The hour, using a 12-hour clock from 1 to 12.| 2009-06-15T01:45:30 -> 1, 2009-06-15T13:45:30 -> 1\n|`hh`| The hour, using a 12-hour clock from 01 to 12.| 2009-06-15T01:45:30 -> 01, 2009-06-15T13:45:30 -> 01\n|`H`| The hour, using a 24-hour clock from 0 to 23.| 2009-06-15T01:45:30 -> 1, 2009-06-15T13:45:30 -> 13\n|`HH`| The hour, using a 24-hour clock from 00 to 23.| 2009-06-15T01:45:30 -> 01, 2009-06-15T13:45:30 -> 13\n|`m`| The minute, from 0 through 59.| 2009-06-15T01:09:30 -> 9, 2009-06-15T13:29:30 -> 29\n|`mm`| The minute, from 00 through 59.| 2009-06-15T01:09:30 -> 09, 2009-06-15T01:45:30 -> 45\n|`M`| The month, from 1 through 12.| 2009-06-15T13:45:30 -> 6\n|`MM`| The month, from 01 through 12.| 2009-06-15T13:45:30 -> 06\n|`s`| The second, from 0 through 59.| 2009-06-15T13:45:09 -> 9\n|`ss`| The second, from 00 through 59.| 2009-06-15T13:45:09 -> 09\n|`y`| The year, from 0 to 99.| 0001-01-01T00:00:00 -> 1, 0900-01-01T00:00:00 -> 0, 1900-01-01T00:00:00 -> 0, 2009-06-15T13:45:30 -> 9, 2019-06-15T13:45:30 -> 19\n|`yy`| The year, from 00 to 99.| 0001-01-01T00:00:00 -> 01, 0900-01-01T00:00:00 -> 00, 1900-01-01T00:00:00 -> 00, 2019-06-15T13:45:30 -> 19\n|`yyyy`| The year as a four-digit number.| 0001-01-01T00:00:00 -> 0001, 0900-01-01T00:00:00 -> 0900, 1900-01-01T00:00:00 -> 1900, 2009-06-15T13:45:30 -> 2009\n|`tt`| AM / PM hours| 2009-06-15T13:45:09 -> PM\n\n### Supported delimiters\n\nThe format specifier can include the following delimiters:\n\n|Delimiter|Comment|\n|:---------|:-------|\n|`' '`| Space|\n|`'/'`||\n|`'-'`|Dash|\n|`':'`||\n|`','`||\n|`'.'`||\n|`'_'`||\n|`'['`||\n|`']'`||",
        "example": "let dt = datetime(2017-01-29 09:00:05);\nprint \nv1=format_datetime(dt,'yy-MM-dd [HH:mm:ss]')\n\nlet dt = datetime(2017-01-29 09:00:05);\nprint \nv2=format_datetime(dt, 'yyyy-M-dd [H:mm:ss]')\n\nlet dt = datetime(2017-01-29 09:00:05);\nprint \nv3=format_datetime(dt, 'yy-MM-dd [hh:mm:ss tt]')",
        "sourceLength": 7469,
        "url": "https://learn.microsoft.com/en-us/kusto/query/format-datetime-function"
      }
    },
    {
      "name": "format_ipv4",
      "category": "Function",
      "documentation": {
        "title": "format_ipv4()",
        "description": "Parses the input with a netmask and returns a string representing the IPv4 address.",
        "syntax": "`format_ipv4(`*ip* [`,` *prefix*`])`",
        "returnInfo": "If conversion is successful, the result will be a string representing IPv4 address.\nIf conversion isn't successful, the result will be an empty string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip* | `string` |  *True* | The IPv4 address. The format may be a string or number representation in big-endian order.|\n| *prefix* | `int` | | An integer from 0 to 32 representing the number of most-significant bits that are taken into account. If unspecified, all 32 bit-masks are used.|",
        "example": "datatable(address:string, mask:long)\n[\n '192.168.1.1', 24,          \n '192.168.1.1', 32,          \n '192.168.1.1/24', 32,       \n '192.168.1.1/24', long(-1), \n]\n| extend result = format_ipv4(address, mask), \n         result_mask = format_ipv4_mask(address, mask)",
        "sourceLength": 2684,
        "url": "https://learn.microsoft.com/en-us/kusto/query/format-ipv4-function"
      }
    },
    {
      "name": "format_ipv4_mask",
      "category": "Function",
      "documentation": {
        "title": "format_ipv4_mask()",
        "description": "Parses the input with a netmask and returns a string representing the IPv4 address in CIDR notation.",
        "syntax": "`format_ipv4_mask(`*ip* [`,` *prefix*`])`",
        "returnInfo": "If conversion is successful, the result will be a string representing IPv4 address as CIDR notation.\nIf conversion isn't successful, the result will be an empty string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip* | `string` |  *True* | The IPv4 address as CIDR notation. The format may be a string or number representation in big-endian order.|\n| *prefix* | `int` | | An integer from 0 to 32 representing the number of most-significant bits that are taken into account. If unspecified, all 32 bit-masks are used.|",
        "example": "datatable(address:string, mask:long)\n[\n '192.168.1.1', 24,          \n '192.168.1.1', 32,          \n '192.168.1.1/24', 32,       \n '192.168.1.1/24', long(-1), \n]\n| extend result = format_ipv4(address, mask), \n         result_mask = format_ipv4_mask(address, mask)",
        "sourceLength": 2597,
        "url": "https://learn.microsoft.com/en-us/kusto/query/format-ipv4-mask-function"
      }
    },
    {
      "name": "format_timespan",
      "category": "Function",
      "documentation": {
        "title": "format_timespan()",
        "description": "Formats a timespan according to the provided format.",
        "syntax": "`format_timespan(`*timespan* `,` *format*`)`",
        "returnInfo": "A string with *timespan* formatted as specified by *format*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *timespan* | `timespan` |  *True* | The value to format.|\n| *format* | `string` |  *True*| The output format comprised of one or more of the supported format elements.\n\n### Supported format elements\n\n|Format specifier| Description| Examples\n|:---|:---|:---\n|`d`-`dddddddd`| The number of whole days in the time interval. Padded with zeros if needed.| 15.13:45:30: d -> 15, dd -> 15, ddd -> 015\n|`f`| The tenths of a second in the time interval.| 15.13:45:30.6170000 -> 6, 15.13:45:30.05 -> 0\n|`ff`| The hundredths of a second in the time interval.| 15.13:45:30.6170000 -> 61, 15.13:45:30.0050000 -> 00\n|`fff`| The milliseconds in the time interval.| 6/15/2009 13:45:30.617 -> 617, 6/15/2009 13:45:30.0005 -> 000\n|`ffff`| The ten thousandths of a second in the time interval.| 15.13:45:30.6175000 -> 6175, 15.13:45:30.0000500 -> 0000\n|`fffff`| The hundred thousandths of a second in the time interval.| 15.13:45:30.6175400 -> 61754, 15.13:45:30.000005 -> 00000\n|`ffffff`| The millionths of a second in the time interval.| 15.13:45:30.6175420 -> 617542, 15.13:45:30.0000005 -> 000000\n|`fffffff`| The ten millionths of a second in the time interval.| 15.13:45:30.6175425 -> 6175425, 15.13:45:30.0001150 -> 0001150\n|`F`| If non-zero, the tenths of a second in the time interval.| 15.13:45:30.6170000 -> 6, 15.13:45:30.0500000 -> (no output)\n|`FF`| If non-zero, the hundredths of a second in the time interval.| 15.13:45:30.6170000 -> 61, 15.13:45:30.0050000 -> (no output)\n|`FFF`| If non-zero, the milliseconds in the time interval.| 15.13:45:30.6170000 -> 617, 15.13:45:30.0005000 -> (no output)\n|`FFFF`| If non-zero, the ten thousandths of a second in the time interval. |15.13:45:30.5275000 -> 5275, 15.13:45:30.0000500 -> (no output)\n|`FFFFF`| If non-zero, the hundred thousandths of a second in the time interval.| 15.13:45:30.6175400 -> 61754, 15.13:45:30.0000050 -> (no output)\n|`FFFFFF`| If non-zero, the millionths of a second in the time interval.| 15.13:45:30.6175420 -> 617542, 15.13:45:30.0000005 -> (no output)\n|`FFFFFFF`| If non-zero, the ten millionths of a second in the time interval.| 15.13:45:30.6175425 -> 6175425, 15.13:45:30.0001150 -> 000115\n|`H`| The hour, using a 24-hour clock from 0 to 23.| 15.01:45:30 -> 1, 15.13:45:30 -> 13\n|`HH`| The hour, using a 24-hour clock from 00 to 23.| 15.01:45:30 -> 01, 15.13:45:30 -> 13\n|`m`| The number of whole minutes in the time interval that aren't included as part of hours or days. Single-digit minutes don't have a leading zero.| 15.01:09:30 -> 9, 15.13:29:30 -> 29\n|`mm`| The number of whole minutes in the time interval that aren't included as part of hours or days. Single-digit minutes have a leading zero.| 15.01:09:30 -> 09, 15.01:45:30 -> 45\n|`s`| The number of whole seconds in the time interval that aren't included as part of hours, days, or minutes. Single-digit seconds don't have a leading zero.| 15.13:45:09 -> 9\n|`ss`|The number of whole seconds in the time interval that aren't included as part of hours, days, or minutes. Single-digit seconds have a leading zero.| 15.13:45:09 -> 09\n\n### Supported delimiters\n\nThe format specifier can include following delimiters:\n\n|Delimiter|Comment|\n|:---------|:-------|\n|`' '`| Space|\n|`'/'`||\n|`'-'`|Dash|\n|`':'`||\n|`','`||\n|`'.'`||\n|`'_'`||\n|`'['`||\n|`']'`||",
        "example": "let t = time(29.09:00:05.12345);\nprint \nv1=format_timespan(t, 'dd.hh:mm:ss:FF'),\nv2=format_timespan(t, 'ddd.h:mm:ss [fffffff]')",
        "sourceLength": 4824,
        "url": "https://learn.microsoft.com/en-us/kusto/query/format-timespan-function"
      }
    },
    {
      "name": "gamma",
      "category": "Function",
      "documentation": {
        "title": "gamma()",
        "description": "Computes the gamma function for the provided *number*.",
        "syntax": "`gamma(`*number*`)`",
        "returnInfo": "Gamma function of *number*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | `real` |  *True* | The number used to calculate the gamma function. |",
        "example": "",
        "sourceLength": 1006,
        "url": "https://learn.microsoft.com/en-us/kusto/query/gamma-function"
      }
    },
    {
      "name": "gettype",
      "category": "Function",
      "documentation": {
        "title": "gettype()",
        "description": "Returns the runtime type of its single argument.\n\nThe runtime type may be different than the nominal (static) type for expressions whose nominal type is `dynamic`; in such cases `gettype()` can be useful to reveal the type of the actual value (how the value is encoded in memory).",
        "syntax": "`gettype(`*value*`)`",
        "returnInfo": "A string representing the runtime type of *value*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value for which to find the type. |",
        "example": "",
        "sourceLength": 2018,
        "url": "https://learn.microsoft.com/en-us/kusto/query/gettype-function"
      }
    },
    {
      "name": "getyear",
      "category": "Function",
      "documentation": {
        "title": "getyear()",
        "description": "Returns the year part of the `datetime` argument.",
        "syntax": "`getyear(`*date*`)`",
        "returnInfo": "The year that contains the given *date*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to get the year. |",
        "example": "print year = getyear(datetime(2015-10-12))",
        "sourceLength": 1347,
        "url": "https://learn.microsoft.com/en-us/kusto/query/getyear-function"
      }
    },
    {
      "name": "graph",
      "category": "Preview",
      "documentation": {
        "title": "graph function",
        "description": "> \n> This feature is currently in public preview. Functionality and syntax are subject to change before General Availability.\n\nThe `graph` function is an intrinsic function that enables querying of a persisted graph entity, similar to the `cluster()`, `database()`, `external_table()`, and `table()` functions. It supports retrieving either the most recent snapshot of the graph, a specific snapshot, or creating a transient graph from the model.",
        "syntax": "`graph(` *GraphName* `)`\n\n`graph(` *GraphName* `,` *SnapshotName* `)`\n\n`graph(` *GraphName* `,` `snapshot=` *SnapshotName* `)`\n\n`graph(` *GraphName* `,` *Transient* `)`",
        "returnInfo": "The `graph` function returns a graph and must be followed by a graph operator. The function retrieves the specified graph model name, either as:\n\n- The latest snapshot (default or when `false` is specified)\n- A specific named snapshot\n- A transient graph from the model (when `true` is specified)",
        "parametersTable": "| Name           | Type     | Required           | Description                                                                 |\n|:----------------|:----------|:--------------------|:-----------------------------------------------------------------------------|\n| *GraphName*    | `string` | *True* | The name of the graph model to query. |\n| *SnapshotName* | `string` |                    | The name of a specific snapshot to retrieve. If not specified, the most recent snapshot is used. |\n| *Transient*    | `bool`   |                    | If `true`, creates a transient graph from the model (no snapshot is used). If `false`, uses the latest snapshot (same as omitting this parameter). |",
        "example": "",
        "sourceLength": 4534,
        "url": "https://learn.microsoft.com/en-us/kusto/query/graph-function"
      }
    },
    {
      "name": "has_any_index",
      "category": "Function",
      "documentation": {
        "title": "has_any_index()",
        "description": "Searches the string for items specified in the array and returns the position in the array of the first item found in the string.",
        "syntax": "`has_any_index` `(`*source*`,` *values*`)`",
        "returnInfo": "Zero-based index position of the first item in *values* that is found in *source*.\nReturns -1 if none of the array items were found in the string or if *values* is empty.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source*| `string` |  *True*| The value to search.|\n| *values*| `dynamic` |  *True*| An array of scalar or literal expressions to look up. |",
        "example": "print\n idx1 = has_any_index(\"this is an example\", dynamic(['this', 'example']))  // first lookup found in input string\n , idx2 = has_any_index(\"this is an example\", dynamic(['not', 'example'])) // last lookup found in input string\n , idx3 = has_any_index(\"this is an example\", dynamic(['not', 'found'])) // no lookup found in input string\n , idx4 = has_any_index(\"Example number 2\", range(1, 3, 1)) // Lookup array of integers\n , idx5 = has_any_index(\"this is an example\", dynamic([]))  // Empty lookup array",
        "sourceLength": 2484,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-any-index-function"
      }
    },
    {
      "name": "has_any_ipv4",
      "category": "Function",
      "documentation": {
        "title": "has_any_ipv4()",
        "description": "Returns a value indicating whether one of specified IPv4 addresses appears in a text.\n\nIP address entrances in a text must be properly delimited with non-alphanumeric characters. For example, properly delimited IP addresses are:\n\n* \"These requests came from: 192.168.1.1, 10.1.1.115 and 10.1.1.201\"\n* \"05:04:54 127.0.0.1 GET /favicon.ico 404\"",
        "syntax": "`has_any_ipv4(`*source* `,` *ip_address* [`,` *ip_address_2*`,` ...] `)`",
        "returnInfo": "`true` if one of specified IP addresses is a valid IPv4 address, and it was found in *source*. Otherwise, the function returns `false`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source*| `string` |  *True* | The value to search.|\n| *ip_address*| string or dynamic |  *True* | An IP address, or an array of IP addresses, for which to search.|",
        "example": "print result=has_any_ipv4('05:04:54 127.0.0.1 GET /favicon.ico 404', '127.0.0.1', '127.0.0.2')\n\nprint result=has_any_ipv4('05:04:54 127.0.0.1 GET /favicon.ico 404', dynamic(['127.0.0.1', '127.0.0.2']))\n\nprint result=has_any_ipv4('05:04:54 127.0.0.256 GET /favicon.ico 404', dynamic([\"127.0.0.256\", \"192.168.1.1\"]))\n\nprint result=has_any_ipv4('05:04:54127.0.0.1 GET /favicon.ico 404', '127.0.0.1', '192.168.1.1') // false, improperly delimited IP address",
        "sourceLength": 4411,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-any-ipv4-function"
      }
    },
    {
      "name": "has_any_ipv4_prefix",
      "category": "Function",
      "documentation": {
        "title": "has_any_ipv4_prefix()",
        "description": "Returns a boolean value indicating whether one of specified IPv4 address prefixes appears in a text.\n\nIP address entrances in a text must be properly delimited with non-alphanumeric characters. For example, properly delimited IP addresses are:\n\n* \"These requests came from: 192.168.1.1, 10.1.1.115 and 10.1.1.201\"\n* \"05:04:54 127.0.0.1 GET /favicon.ico 404\"",
        "syntax": "`has_any_ipv4_prefix(`*source* `,` *ip_address_prefix* [`,` *ip_address_prefix_2*`,` ...] `)`",
        "returnInfo": "`true` if the one of specified IP address prefixes is a valid IPv4 address prefix, and it was found in *source*. Otherwise, the function returns `false`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source*| `string` |  *True* | The value to search.|\n| *ip_address_prefix*| string or dynamic |  *True* | An IP address prefix, or an array of IP address prefixes, for which to search. A valid IP address prefix is either a complete IPv4 address, such as `192.168.1.11`, or its prefix ending with a dot, such as `192.`, `192.168.` or `192.168.1.`.|",
        "example": "print result=has_any_ipv4_prefix('05:04:54 127.0.0.1 GET /favicon.ico 404', '127.0.', '192.168.') // true\n\nprint result=has_any_ipv4_prefix('05:04:54 127.0.0.1 GET /favicon.ico 404', dynamic([\"127.0.\", \"192.168.\"]))\n\nprint result=has_any_ipv4_prefix('05:04:54 127.0.0.1 GET /favicon.ico 404', '127.0')\n\nprint result=has_any_ipv4_prefix('05:04:54127.0.0.1 GET /favicon.ico 404', '127.0.', '192.')",
        "sourceLength": 4617,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-any-ipv4-prefix-function"
      }
    },
    {
      "name": "has_ipv4",
      "category": "Function",
      "documentation": {
        "title": "has_ipv4()",
        "description": "Returns a value indicating whether a specified IPv4 address appears in a text.\n\nIP address entrances in a text must be properly delimited with non-alphanumeric characters. For example, properly delimited IP addresses are:\n\n* \"These requests came from: 192.168.1.1, 10.1.1.115 and 10.1.1.201\"\n* \"05:04:54 127.0.0.1 GET /favicon.ico 404\"",
        "syntax": "`has_ipv4(`*source* `,` *ip_address* `)`",
        "returnInfo": "`true` if the *ip_address* is a valid IPv4 address, and it was found in *source*. Otherwise, the function returns `false`.\n\n> \n>\n> * To search for many IPv4 addresses at once, use has_any_ipv4() function.\n> * To search for IPv4 addresses prefix, use has_ipv4_prefix() function.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | `string` |  *True* | The text to search.|\n| *ip_address* | `string` |  *True* | The value containing the IP address for which to search.|",
        "example": "print result=has_ipv4('05:04:54 127.0.0.1 GET /favicon.ico 404', '127.0.0.1')\n\nprint result=has_ipv4('05:04:54 127.0.0.256 GET /favicon.ico 404', '127.0.0.256')\n\nprint result=has_ipv4('05:04:54127.0.0.1 GET /favicon.ico 404', '127.0.0.1')",
        "sourceLength": 3560,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-ipv4-function"
      }
    },
    {
      "name": "has_ipv4_prefix",
      "category": "Function",
      "documentation": {
        "title": "has_ipv4_prefix()",
        "description": "Returns a value indicating whether a specified IPv4 address prefix appears in a text.\n\nA valid IP address prefix is either a complete IPv4 address (`192.168.1.11`) or its prefix ending with a dot (`192.`, `192.168.` or `192.168.1.`).\n\nIP address entrances in a text must be properly delimited with nonalphanumeric characters. For example, properly delimited IP addresses are:\n\n* \"These requests came from: 192.168.1.1, 10.1.1.115 and 10.1.1.201\"\n* \"05:04:54 127.0.0.1 GET /favicon.ico 404\"",
        "syntax": "`has_ipv4_prefix(`*source* `,` *ip_address_prefix* `)`",
        "returnInfo": "`true` if the *ip_address_prefix* is a valid IPv4 address prefix, and it was found in *source*. Otherwise, the function returns `false`.\n\n> \n> To search for many IPv4 prefixes at once, use the has_any_ipv4_prefix() function.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source*| `string` |  *True*| The text to search.|\n| *ip_address_prefix*| `string` |  *True*| The IP address prefix for which to search.|",
        "example": "print result=has_ipv4_prefix('05:04:54 127.0.0.1 GET /favicon.ico 404', '127.0.')\n\nprint result=has_ipv4_prefix('05:04:54 127.0.0.1 GET /favicon.ico 404', '127.0')\n\nprint result=has_ipv4_prefix('05:04:54 127.0.0.256 GET /favicon.ico 404', '127.0.')\n\nprint result=has_ipv4_prefix('05:04:54127.0.0.1 GET /favicon.ico 404', '127.0.')",
        "sourceLength": 4205,
        "url": "https://learn.microsoft.com/en-us/kusto/query/has-ipv4-prefix-function"
      }
    },
    {
      "name": "hash",
      "category": "Function",
      "documentation": {
        "title": "hash()",
        "description": "Returns a hash value for the input value.\n\n> \n>\n> * The function calculates hashes using the xxhash64 algorithm, but this may change. It's recommended to only use this function within a single query.\n> * If you need to persist a combined hash, it's recommended to use hash_sha256(), hash_sha1(), or hash_md5() and combine the hashes with a bitwise operator. These functions are more complex to calculate than `hash()`.",
        "syntax": "`hash(`*source* [`,` *mod*]`)`",
        "returnInfo": "The hash value of *source*. If *mod* is specified, the function returns the hash value modulo the value of *mod*, meaning that the output of the function will be the remainder of the hash value divided by *mod*. The output will be a value between `0` and `mod - 1`, inclusive.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | scalar |  *True* | The value to be hashed.|\n| *mod* | `int` | | A modulo value to be applied to the hash result, so that the output value is between `0` and `mod - 1`. This parameter is useful for limiting the range of possible output values or for compressing the output of the hash function into a smaller range.|",
        "example": "",
        "sourceLength": 3841,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-function"
      }
    },
    {
      "name": "hash_combine",
      "category": "Function",
      "documentation": {
        "title": "hash_combine()",
        "description": "Combines hash values of two or more hashes.",
        "syntax": "`hash_combine(`*h1* `,` *h2* [`,` *h3* ...]`)`",
        "returnInfo": "The combined hash value of the given scalars.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *h1*, *h2*, ... *hN* | `long` |  *True* | The hash values to combine.|",
        "example": "print value1 = \"Hello\", value2 = \"World\"\n| extend h1 = hash(value1), h2=hash(value2)\n| extend combined = hash_combine(h1, h2)",
        "sourceLength": 1594,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-combine-function"
      }
    },
    {
      "name": "hash_many",
      "category": "Function",
      "documentation": {
        "title": "hash_many()",
        "description": "Returns a combined hash value of multiple values.",
        "syntax": "`hash_many(`*s1* `,` *s2* [`,` *s3* ...]`)`",
        "returnInfo": "The hash() function is applied to each of the specified scalars. The resulting hashes are combined into a single hash and returned.\n\n> \n> The function uses the *xxhash64* algorithm to calculate the hash for each scalar, but this may change. We therefore only recommend using this function within a single query where all invocations of the function will use the same algorithm.\n>\n> If you need to persist a combined hash, we recommend using hash_sha256(), hash_sha1(), or hash_md5() and combining the hashes into a single hash with a bitwise operator. Note that these functions are more complex to calculate than `hash()`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *s1*, *s2*, ..., *sN* | scalar |  *True* | The values to hash together.|",
        "example": "print value1 = \"Hello\", value2 = \"World\"\n| extend combined = hash_many(value1, value2)",
        "sourceLength": 2187,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-many-function"
      }
    },
    {
      "name": "hash_md5",
      "category": "Function",
      "documentation": {
        "title": "hash_md5()",
        "description": "Returns an MD5 hash value of the input.",
        "syntax": "`hash_md5(`*source*`)`",
        "returnInfo": "The MD5 hash value of the given scalar, encoded as a hex string (a string\nof characters, each two of which represent a single Hex number between 0\nand 255).\n\n> \n> The algorithm used by this function (MD5) is guaranteed\n> to not be modified in the future, but is very complex to calculate. Users that\n> need a \"lightweight\" hash function for the duration of a single query are advised\n> to use the function hash() instead.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | scalar |  *True* | The value to be hashed.|",
        "example": "print \nh1=hash_md5(\"World\"),\nh2=hash_md5(datetime(2020-01-01))\n\nStormEvents\n| summarize StormCount = count() by State, StateHash=hash_md5(State)\n| top 5 by StormCount",
        "sourceLength": 2646,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-md5-function"
      }
    },
    {
      "name": "hash_sha1",
      "category": "Function",
      "documentation": {
        "title": "hash_sha1()",
        "description": "Returns a sha1 hash value of the source input.",
        "syntax": "`hash_sha1(`*source*`)`",
        "returnInfo": "The sha1 hash value of the given scalar, encoded as a hex string (a string\nof characters, each two of which represent a single Hex number between 0\nand 255).\n\n> \n> The algorithm used by this function (SHA1) is guaranteed\n> to not be modified in the future, but is very complex to calculate. If you\n> need a \"lightweight\" hash function for the duration of a single query, consider using hash().",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | scalar |  *True* | The value to be hashed.|",
        "example": "print \n    h1=hash_sha1(\"World\"),\n    h2=hash_sha1(datetime(2020-01-01))\n\nStormEvents \n| summarize StormCount = count() by State, StateHash=hash_sha1(State)\n| top 5 by StormCount desc",
        "sourceLength": 2730,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-sha1-function"
      }
    },
    {
      "name": "hash_sha256",
      "category": "Function",
      "documentation": {
        "title": "hash_sha256()",
        "description": "Returns a sha256 hash value of the source input.",
        "syntax": "`hash_sha256(`*source*`)`",
        "returnInfo": "The sha256 hash value of the given scalar, encoded as a hex string (a string\nof characters, each two of which represent a single Hex number between 0\nand 255).\n\n> \n> The algorithm used by this function (SHA256) is guaranteed\n> to not be modified in the future, but is very complex to calculate. Users that\n> need a \"lightweight\" hash function for the duration of a single query are advised\n> to use the function hash() instead.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | scalar |  *True* | The value to be hashed.|",
        "example": "print \n    h1=hash_sha256(\"World\"),\n    h2=hash_sha256(datetime(2020-01-01))\n\nStormEvents \n| summarize StormCount = count() by State, StateHash=hash_sha256(State)\n| top 5 by StormCount desc",
        "sourceLength": 2954,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-sha256-function"
      }
    },
    {
      "name": "hash_xxhash64",
      "category": "Function",
      "documentation": {
        "title": "hash_xxhash64()",
        "description": "Returns an xxhash64 value for the input value.",
        "syntax": "`hash_xxhash64(`*source* [`,` *mod*]`)`",
        "returnInfo": "The hash value of *source*. If *mod* is specified, the function returns the hash value modulo the value of *mod*, meaning that the output of the function will be the remainder of the hash value divided by *mod*. The output will be a value between `0` and `mod - 1`, inclusive.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | scalar |  *True* | The value to be hashed.|\n| *mod* | `int` | | A modulo value to be applied to the hash result, so that the output value is between `0` and `mod - 1`. This parameter is useful for limiting the range of possible output values or for compressing the output of the hash function into a smaller range.|",
        "example": "",
        "sourceLength": 2631,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hash-xxhash64-function"
      }
    },
    {
      "name": "iff",
      "category": "Function",
      "documentation": {
        "title": "iff()",
        "description": "Returns the *:::no-loc text=\"then\":::* value when the *:::no-loc text=\"if\":::* condition evaluates to `true`, otherwise it returns the *:::no-loc text=\"else\":::* value.\n\n> The `iff()` and `iif()` functions are equivalent.",
        "syntax": "`iff(`*:::no-loc text=\"if\":::*`,` *:::no-loc text=\"then\":::*`,` *:::no-loc text=\"else\":::*`)`",
        "returnInfo": "This function returns the  *:::no-loc text=\"then\":::* value when the *:::no-loc text=\"if\":::* condition evaluates to `true`, otherwise it returns the *:::no-loc text=\"else\":::* value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*:::no-loc text=\"if\":::*| `string` |  *True* | An expression that evaluates to a boolean value.|\n|*:::no-loc text=\"then\":::*| scalar |  *True* | An expression that returns its value when the *:::no-loc text=\"if\":::* condition evaluates to `true`.|\n|*:::no-loc text=\"else\":::*| scalar |  *True* | An expression that returns its value when the *:::no-loc text=\"if\":::* condition evaluates to `false`.|",
        "example": "",
        "sourceLength": 4241,
        "url": "https://learn.microsoft.com/en-us/kusto/query/iff-function"
      }
    },
    {
      "name": "iif",
      "category": "Function",
      "documentation": {
        "title": "iff()",
        "description": "Returns the *:::no-loc text=\"then\":::* value when the *:::no-loc text=\"if\":::* condition evaluates to `true`, otherwise it returns the *:::no-loc text=\"else\":::* value.\n\n> The `iff()` and `iif()` functions are equivalent.",
        "syntax": "`iff(`*:::no-loc text=\"if\":::*`,` *:::no-loc text=\"then\":::*`,` *:::no-loc text=\"else\":::*`)`",
        "returnInfo": "This function returns the  *:::no-loc text=\"then\":::* value when the *:::no-loc text=\"if\":::* condition evaluates to `true`, otherwise it returns the *:::no-loc text=\"else\":::* value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*:::no-loc text=\"if\":::*| `string` |  *True* | An expression that evaluates to a boolean value.|\n|*:::no-loc text=\"then\":::*| scalar |  *True* | An expression that returns its value when the *:::no-loc text=\"if\":::* condition evaluates to `true`.|\n|*:::no-loc text=\"else\":::*| scalar |  *True* | An expression that returns its value when the *:::no-loc text=\"if\":::* condition evaluates to `false`.|",
        "example": "",
        "sourceLength": 4241,
        "url": "https://learn.microsoft.com/en-us/kusto/query/iff-function"
      }
    },
    {
      "name": "indexof",
      "category": "Function",
      "documentation": {
        "title": "indexof()",
        "description": "Reports the zero-based index of the first occurrence of a specified string within the input string. The `indexof()` function is case-sensitive. To perform a case-insensitive search, consider using `tolower()` or `toupper()` on both inputs.\n\nFor more information, see `indexof_regex()`.",
        "syntax": "`indexof(`*string*`,`*match*`[,`*start*`[,`*length*`[,`*occurrence*`]]])`",
        "returnInfo": "The zero-based index position of *match*.\n\n* Returns -1 if *match* isn't found in *string*.\n* Returns `null` if:\n  * *start* is less than 0.\n  * *occurrence* is less than 0.\n  * *length* is less than -1.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*string*| `string` |  *True* | The source string to search.|  \n|*match*| `string` |  *True* | The string for which to search.|\n|*start*| `int` | | The search start position. A negative value will offset the starting search position from the end of the *string* by this many steps: `abs(`*start*`)`. |\n|*length*| `int` | | The number of character positions to examine. A value of -1 means unlimited length.|\n|*occurrence*| `int` | | The number of the occurrence. The default is 1.|\n\n> \n> If *string* or *match* isn't of type `string`, the function forcibly casts their value to `string`.",
        "example": "print\n idx1 = indexof(\"abcdefg\",\"cde\")    // lookup found in input string\n , idx2 = indexof(\"abcdefg\",\"cde\",1,4) // lookup found in researched range \n , idx3 = indexof(\"abcdefg\",\"cde\",1,2) // search starts from index 1, but stops after 2 chars, so full lookup can't be found\n , idx4 = indexof(\"abcdefg\",\"cde\",3,4) // search starts after occurrence of lookup\n , idx5 = indexof(\"abcdefg\",\"cde\",-5)  // negative start index\n , idx6 = indexof(1234567,5,1,4)       // two first parameters were forcibly casted to strings \"12345\" and \"5\"\n , idx7 = indexof(\"abcdefg\",\"cde\",2,-1)  // lookup found in input string\n , idx8 = indexof(\"abcdefgabcdefg\", \"cde\", 1, 10, 2)   // lookup found in input range\n , idx9 = indexof(\"abcdefgabcdefg\", \"cde\", 1, -1, 3)   // the third occurrence of lookup is not in researched range",
        "sourceLength": 3572,
        "url": "https://learn.microsoft.com/en-us/kusto/query/indexof-function"
      }
    },
    {
      "name": "indexof_regex",
      "category": "Function",
      "documentation": {
        "title": "indexof_regex()",
        "description": "Returns the zero-based index of the first occurrence of a specified lookup regular expression within the input string.\n\nSee `indexof()`.",
        "syntax": "`indexof_regex(`*string*`,`*match*`[,`*start*`[,`*length*`[,`*occurrence*`]]])`",
        "returnInfo": "The zero-based index position of *match*.\n\n* Returns -1 if *match* isn't found in *string*.\n* Returns `null` if:\n  * *start* is less than 0.\n  * *occurrence* is less than 0.\n  * *length* is less than -1.\n\n> \n>\n> * Overlapping matches lookup aren't supported.\n> * Regular expression strings may contain characters that require either escaping or using @'' string-literals.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*string*| `string` |  *True* | The source string to search.|  \n|*match*| `string` |  *True* | The regular expression lookup string.|\n|*start*| `int` | | The search start position. A negative value will offset the starting search position from the end of the *string* by this many steps: `abs(`*start*`)`. |\n|*length*| `int` | | The number of character positions to examine. A value of -1 means unlimited length.|\n|*occurrence*| `int` | | The number of the occurrence. The default is 1.|",
        "example": "print\n    idx1 = indexof_regex(\"abcabc\", @\"a.c\"), // lookup found in input string\n    idx2 = indexof_regex(\"abcabcdefg\", @\"a.c\", 0, 9, 2),  // lookup found in input string\n    idx3 = indexof_regex(\"abcabc\", @\"a.c\", 1, -1, 2),  // there's no second occurrence in the search range\n    idx4 = indexof_regex(\"ababaa\", @\"a.a\", 0, -1, 2), // Matches don't overlap so full lookup can't be found \n    idx5 = indexof_regex(\"abcabc\", @\"a|ab\", -1)  // invalid start argument",
        "sourceLength": 3016,
        "url": "https://learn.microsoft.com/en-us/kusto/query/indexof-regex-function"
      }
    },
    {
      "name": "ingestion_time",
      "category": "Function",
      "documentation": {
        "title": "ingestion_time()",
        "description": "> \n> The value returned by this function is only approximate, as the ingestion process may take several minutes to complete and multiple ingestion activities may take place concurrently. To process all records of a table with exactly-once guarantees, use database cursors.\n\n> \n> The ingestion_time() function returns values according to the service clock as measured when ingestion was completed. As a result, this value cannot be used to \"order\" ingestion operations, as two operations that overlap in time might have any ordering of these values. If ordering records is important for application semantics, one should ensure that the table has a timestamp column as measured by the source of the data instead of relying on the ingestion_time() value.",
        "syntax": "`ingestion_time()`",
        "returnInfo": "A `datetime` value specifying the approximate time of ingestion into a table.",
        "parametersTable": "",
        "example": "T\n| extend ingestionTime = ingestion_time() | top 10 by ingestionTime",
        "sourceLength": 2537,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ingestion-time-function"
      }
    },
    {
      "name": "ipv4_compare",
      "category": "Function",
      "documentation": {
        "title": "ipv4_compare()",
        "description": "Compares two IPv4 strings. The two IPv4 strings are parsed and compared while accounting for the combined IP-prefix mask calculated from argument prefixes, and the optional `PrefixMask` argument.",
        "syntax": "`ipv4_compare(`*Expr1*`,`*Expr2*`[ ,`*PrefixMask*`])`",
        "returnInfo": "* `0`: If the long representation of the first IPv4 string argument is equal to the second IPv4 string argument\n* `1`: If the long representation of the first IPv4 string argument is greater than the second IPv4 string argument\n* `-1`: If the long representation of the first IPv4 string argument is less than the second IPv4 string argument\n* `null`: If conversion for one of the two IPv4 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*Expr1*, *Expr2*| `string` |  *True* | A string expression representing an IPv4 address. IPv4 strings can be masked using IP-prefix notation.\n|*PrefixMask*| `int` | | An integer from 0 to 32 representing the number of most-significant bits that are taken into account.",
        "example": "",
        "sourceLength": 4210,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-compare-function"
      }
    },
    {
      "name": "ipv4_is_in_any_range",
      "category": "Function",
      "documentation": {
        "title": "ipv4_is_in_any_range()",
        "description": "Checks whether IPv4 string address is in any of the specified IPv4 address ranges.",
        "syntax": "`ipv4_is_in_any_range(`*Ipv4Address* `,` *Ipv4Range* [ `,` *Ipv4Range* ...] `)`\n\n`ipv4_is_in_any_range(`*Ipv4Address* `,` *Ipv4Ranges* `)`",
        "returnInfo": "* `true`: If the IPv4 address is in the range of any of the specified IPv4 networks.\n* `false`: Otherwise.\n* `null`: If conversion for one of the two IPv4 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Ipv4Address*| `string` |  *True* | An expression representing an IPv4 address.|\n| *Ipv4Range*| `string` |  *True* | An IPv4 range or list of IPv4 ranges written with IP-prefix notation.|\n| *Ipv4Ranges*| `dynamic` |  *True* | A dynamic array containing IPv4 ranges written with IP-prefix notation.|\n\n> \n> Either one or more *IPv4Range* strings or an *IPv4Ranges* dynamic array is required.",
        "example": "",
        "sourceLength": 3917,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-is-in-any-range-function"
      }
    },
    {
      "name": "ipv4_is_in_range",
      "category": "Function",
      "documentation": {
        "title": "ipv4_is_in_range()",
        "description": "Checks if IPv4 string address is in IPv4-prefix notation range.",
        "syntax": "`ipv4_is_in_range(`*Ipv4Address*`,`*Ipv4Range*`)`",
        "returnInfo": "* `true`: If the long representation of the first IPv4 string argument is in range of the second IPv4 string argument.\n* `false`: Otherwise.\n* `null`: If conversion for one of the two IPv4 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Ipv4Address*| `string` |  *True* | An expression representing an IPv4 address.|\n| *Ipv4Range*| `string` |  *True* | An IPv4 range or list of IPv4 ranges written with IP-prefix notation.|",
        "example": "datatable(ip_address:string, ip_range:string)\n[\n '192.168.1.1',    '192.168.1.1',       // Equal IPs\n '192.168.1.1',    '192.168.1.255/24',  // 24 bit IP-prefix is used for comparison\n]\n| extend result = ipv4_is_in_range(ip_address, ip_range)",
        "sourceLength": 2424,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-is-in-range-function"
      }
    },
    {
      "name": "ipv4_is_match",
      "category": "Function",
      "documentation": {
        "title": "ipv4_is_match()",
        "description": "Matches two IPv4 strings. The two IPv4 strings are parsed and compared while accounting for the combined IP-prefix mask calculated from argument prefixes, and the optional `prefix` argument.",
        "syntax": "`ipv4_is_match(`*ip1*`,`*ip2*`[ ,`*prefix*`])`",
        "returnInfo": "* `true`: If the long representation of the first IPv4 string argument is equal to the second IPv4 string argument.\n* `false`: Otherwise.\n* `null`: If conversion for one of the two IPv4 strings wasn't successful.\n\n>\n> When matching against an IPv4 address that's not a range, we recommend using the equals operator (`==`), for better performance.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip1*, *ip2*| `string` |  *True* | An expression representing an IPv4 address. IPv4 strings can be masked using IP-prefix notation.|\n| *prefix*| `int` | | An integer from 0 to 32 representing the number of most-significant bits that are taken into account.|",
        "example": "",
        "sourceLength": 4839,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-is-match-function"
      }
    },
    {
      "name": "ipv4_is_private",
      "category": "Function",
      "documentation": {
        "title": "ipv4_is_private()",
        "description": "Checks if the IPv4 string address belongs to a set of private network IPs.\n\nPrivate network addresses were originally defined to help delay IPv4 address exhaustion. IP packets originating from or addressed to a private IP address can't be routed through the public internet.",
        "syntax": "`ipv4_is_private(`*ip*`)`",
        "returnInfo": "* `true`: If the IPv4 address belongs to any of the private network ranges.\n* `false`: Otherwise.\n* `null`: If parsing of the input as IPv4 address string wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*ip*| `string` |  *True* | An expression representing an IPv4 address. IPv4 strings can be masked using IP-prefix notation.|",
        "example": "datatable(ip_string:string)\n[\n '10.1.2.3',\n '192.168.1.1/24',\n '127.0.0.1',\n]\n| extend result = ipv4_is_private(ip_string)",
        "sourceLength": 3074,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-is-private-function"
      }
    },
    {
      "name": "ipv4_netmask_suffix",
      "category": "Function",
      "documentation": {
        "title": "ipv4_netmask_suffix()",
        "description": "Returns the value of the IPv4 netmask suffix from an IPv4 string address.",
        "syntax": "`ipv4_netmask_suffix(`*ip*`)`",
        "returnInfo": "* The value of the netmask suffix the IPv4 address. If the suffix isn't present in the input, a value of `32` (full netmask suffix) is returned.\n* `null`: If parsing the input as an IPv4 address string wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*ip*| `string` |  *True*| An expression representing an IPv4 address. IPv4 strings can be masked using IP-prefix notation.|",
        "example": "datatable(ip_string:string)\n[\n '10.1.2.3',\n '192.168.1.1/24',\n '127.0.0.1/16',\n]\n| extend cidr_suffix = ipv4_netmask_suffix(ip_string)",
        "sourceLength": 2183,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-netmask-suffix-function"
      }
    },
    {
      "name": "ipv4_range_to_cidr_list",
      "category": "Function",
      "documentation": {
        "title": "ipv4_range_to_cidr_list()",
        "description": "Converts a IPv4 address range denoted by starting and ending IPv4 addresses to a list of IPv4 ranges in CIDR notation.",
        "syntax": "`ipv4_range_to_cidr_list(`*StartAddress* `,` *EndAddress* `)`",
        "returnInfo": "A dynamic array object containing the list of ranges in CIDR notation.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *StartAddress*| `string` |  *True* | An expression representing a starting IPv4 address of the range.|\n| *EndAddress*| `string` |  *True* | An expression representing an ending IPv4 address of the range.|",
        "example": "print start_IP=\"1.1.128.0\", end_IP=\"1.1.140.255\"\n | project ipv4_range_list = ipv4_range_to_cidr_list(start_IP, end_IP)",
        "sourceLength": 1746,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv4-range-to-cidr-list-function"
      }
    },
    {
      "name": "ipv6_compare",
      "category": "Function",
      "documentation": {
        "title": "ipv6_compare()",
        "description": "Compares two IPv6 or IPv4 network address strings. The two IPv6 strings are parsed and compared while accounting for the combined IP-prefix mask calculated from argument prefixes, and the optional `prefix` argument.\n\n>\n> The function can accept and compare arguments representing both IPv6 and IPv4 network addresses. However, if the caller knows that arguments are in IPv4 format, use ipv4_is_compare() function. This function will result in better runtime performance.",
        "syntax": "`ipv6_compare(`*ip1*`,`*ip2*`[ ,`*prefix*`])`",
        "returnInfo": "* `0`: If the long representation of the first IPv6 string argument is equal to the second IPv6 string argument.\n* `1`: If the long representation of the first IPv6 string argument is greater than the second IPv6 string argument.\n* `-1`: If the long representation of the first IPv6 string argument is less than the second IPv6 string argument.\n* `null`: If conversion for one of the two IPv6 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip1*, *ip2*| `string` |  *True* | An expression representing an IPv6 or IPv4 address. IPv6 and IPv4 strings can be masked using IP-prefix notation.|\n| *prefix*| `int` | | An integer from 0 to 128 representing the number of most significant bits that are taken into account.|",
        "example": "",
        "sourceLength": 7135,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv6-compare-function"
      }
    },
    {
      "name": "ipv6_is_in_any_range",
      "category": "Function",
      "documentation": {
        "title": "ipv6_is_in_any_range()",
        "description": "Checks whether an IPv6 string address is in any of the specified IPv6 address ranges.",
        "syntax": "`ipv6_is_in_any_range(`*Ipv6Address* `,` *Ipv6Range* [ `,` *Ipv6Range* ...] `)`\n\n`ipv6_is_in_any_range(`*Ipv6Address* `,` *Ipv6Ranges* `)`",
        "returnInfo": "* `true`: If the IPv6 address is in the range of any of the specified IPv6 networks.\n* `false`: Otherwise.\n* `null`: If conversion for one of the two IPv6 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Ipv6Address* | `string` |  *True* | An expression representing an IPv6 address.|\n| *Ipv6Range* | `string` |  *True* | An expression representing an IPv6 range using IP-prefix notation.|\n| *Ipv6Ranges* | `dynamic` |  *True* | An array containing IPv6 ranges using IP-prefix notation.|\n\n> \n> Either one or more *IPv6Range* strings or an *IPv6Ranges* dynamic array is required.",
        "example": "let LocalNetworks=dynamic([\n    \"a5e:f127:8a9d:146d:e102:b5d3:c755:f6cd/112\",\n    \"0:0:0:0:0:ffff:c0a8:ac/60\"\n]);\nlet IPs=datatable(IP:string) [\n    \"a5e:f127:8a9d:146d:e102:b5d3:c755:abcd\",\n    \"a5e:f127:8a9d:146d:e102:b5d3:c755:abce\",\n    \"a5e:f127:8a9d:146d:e102:b5d3:c755:abcf\",\n    \"a5e:f127:8a9d:146d:e102:b5d3:c756:abd1\",\n];\nIPs\n| extend IsLocal=ipv6_is_in_any_range(IP, LocalNetworks)",
        "sourceLength": 3054,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv6-is-in-any-range-function"
      }
    },
    {
      "name": "ipv6_is_in_range",
      "category": "Function",
      "documentation": {
        "title": "ipv6_is_in_range()",
        "description": "Checks if an IPv6 string address is in the IPv6-prefix notation range.",
        "syntax": "`ipv6_is_in_range(`*Ipv6Address*`,`*Ipv6Range*`)`",
        "returnInfo": "* `true`: If the long representation of the first IPv6 string argument is in range of the second IPv6 string argument.\n* `false`: Otherwise.\n* `null`: If conversion for one of the two IPv6 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Ipv6Address* | `string` |  *True* | An expression representing an IPv6 address.|\n| *Ipv6Range*| `string` |  *True* | An expression representing an IPv6 range using IP-prefix notation.|",
        "example": "datatable(ip_address:string, ip_range:string)\n[\n 'a5e:f127:8a9d:146d:e102:b5d3:c755:abcd',    'a5e:f127:8a9d:146d:e102:b5d3:c755:0000/112',\n 'a5e:f127:8a9d:146d:e102:b5d3:c755:abcd',    'a5e:f127:8a9d:146d:e102:b5d3:c755:abcd',\n 'a5e:f127:8a9d:146d:e102:b5d3:c755:abcd',    '0:0:0:0:0:ffff:c0a8:ac/60',\n]\n| extend result = ipv6_is_in_range(ip_address, ip_range)",
        "sourceLength": 2634,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv6-is-in-range-function"
      }
    },
    {
      "name": "ipv6_is_match",
      "category": "Function",
      "documentation": {
        "title": "ipv6_is_match()",
        "description": "Matches two IPv6 or IPv4 network address strings. The two IPv6/IPv4 strings are parsed and compared while accounting for the combined IP-prefix mask calculated from argument prefixes, and the optional `prefix` argument.\n\n> \n> The function can accept and compare arguments representing both IPv6 and IPv4 network addresses. If the caller knows that arguments are in IPv4 format, use the ipv4_is_match() function. This function will result in better runtime performance.",
        "syntax": "`ipv6_is_match(`*ip1*`,`*ip2*`[ ,`*prefix*`])`",
        "returnInfo": "* `true`: If the long representation of the first IPv6/IPv4 string argument is equal to the second IPv6/IPv4 string argument.\n* `false`: Otherwise.\n* `null`: If conversion for one of the two IPv6/IPv4 strings wasn't successful.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip1*, *ip2*| `string` |  *True* | An expression representing an IPv6 or IPv4 address. IPv6 and IPv4 strings can be masked using IP-prefix notation.|\n| *prefix*| `int` | | An integer from 0 to 128 representing the number of most-significant bits that are taken into account.|",
        "example": "",
        "sourceLength": 6959,
        "url": "https://learn.microsoft.com/en-us/kusto/query/ipv6-is-match-function"
      }
    },
    {
      "name": "isempty",
      "category": "Function",
      "documentation": {
        "title": "isempty()",
        "description": "Returns `true` if the argument is an empty string or is null.",
        "syntax": "`isempty(`*value*`)`",
        "returnInfo": "A boolean value indicating whether *value* is an empty string or is null.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n|*value*| `string` | *True*| The value to check if empty or null.|",
        "example": "",
        "sourceLength": 1097,
        "url": "https://learn.microsoft.com/en-us/kusto/query/isempty-function"
      }
    },
    {
      "name": "isfinite",
      "category": "Function",
      "documentation": {
        "title": "isfinite()",
        "description": "Returns whether the input is a finite value, meaning it's not infinite or NaN.",
        "syntax": "`isfinite(`*number*`)`",
        "returnInfo": "`true` if x is finite and `false` otherwise.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*number*| `real` | *True*| The value to check if finite.|",
        "example": "range x from -1 to 1 step 1\n| extend y = 0.0\n| extend div = 1.0*x/y\n| extend isfinite=isfinite(div)",
        "sourceLength": 1714,
        "url": "https://learn.microsoft.com/en-us/kusto/query/isfinite-function"
      }
    },
    {
      "name": "isinf",
      "category": "Function",
      "documentation": {
        "title": "isinf()",
        "description": "Returns whether the input is an infinite (positive or negative) value.",
        "syntax": "`isinf(`*number*`)`",
        "returnInfo": "`true` if x is a positive or negative infinite and `false` otherwise.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n|*number*| `real` | *True*| The value to check if infinite.|",
        "example": "range x from -1 to 1 step 1\n| extend y = 0.0\n| extend div = 1.0*x/y\n| extend isinf=isinf(div)",
        "sourceLength": 1735,
        "url": "https://learn.microsoft.com/en-us/kusto/query/isinf-function"
      }
    },
    {
      "name": "isnan",
      "category": "Function",
      "documentation": {
        "title": "isnan()",
        "description": "Returns whether the input is a Not-a-Number (NaN) value.",
        "syntax": "`isnan(`*number*`)`",
        "returnInfo": "`true` if x is NaN and `false` otherwise.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n|*number*|scalar| *True*| The value to check if NaN.|",
        "example": "range x from -1 to 1 step 1\n| extend y = (-1*x) \n| extend div = 1.0*x/y\n| extend isnan=isnan(div)",
        "sourceLength": 1696,
        "url": "https://learn.microsoft.com/en-us/kusto/query/isnan-function"
      }
    },
    {
      "name": "isnotempty",
      "category": "Function",
      "documentation": {
        "title": "isnotempty()",
        "description": "Returns `true` if the argument isn't an empty string, and it isn't null.\n\n> **Deprecated aliases:** notempty()",
        "syntax": "`isnotempty(`*value*`)`",
        "returnInfo": "`true` if *value* isn't null and `false` otherwise.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*value*|scalar| *True*| The value to check if not empty or null.|",
        "example": "StormEvents\n| where isnotempty(BeginLat) and isnotempty(BeginLon)",
        "sourceLength": 1448,
        "url": "https://learn.microsoft.com/en-us/kusto/query/isnotempty-function"
      }
    },
    {
      "name": "isutf8",
      "category": "Function",
      "documentation": {
        "title": "isutf8()",
        "description": "Returns `true` if the argument is a valid UTF8 string.",
        "syntax": "`isutf8(`*value*`)`",
        "returnInfo": "A boolean value indicating whether *value* is a valid UTF8 string.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n|*value*| `string` | *True*| The value to check if a valid UTF8 string.|",
        "example": "print result=isutf8(\"some string\")",
        "sourceLength": 1292,
        "url": "https://learn.microsoft.com/en-us/kusto/query/isutf8-function"
      }
    },
    {
      "name": "jaccard_index",
      "category": "Function",
      "documentation": {
        "title": "jaccard_index()",
        "description": "Calculates the Jaccard index of two input sets.",
        "syntax": "`jaccard_index`(*set1*, *set2*)",
        "returnInfo": "The Jaccard index of the two input sets. The Jaccard index formula is |*set1* ∩ *set2*| / |*set1* ∪ *set2*|.",
        "parametersTable": "| Name | Type | Required | Description |\n| -- | -- | -- | -- |\n| *set1*| `dynamic` |  *True* | The array representing the first set for the calculation.|\n| *set2*| `dynamic` |  *True* | The array representing the second set for the calculation.|\n\n> \n> Duplicate values in the input arrays are ignored.",
        "example": "print set1=dynamic([1,2,3]), set2=dynamic([1,2,3,4])\n| extend jaccard=jaccard_index(set1, set2)",
        "sourceLength": 1828,
        "url": "https://learn.microsoft.com/en-us/kusto/query/jaccard-index-function"
      }
    },
    {
      "name": "make_datetime",
      "category": "Function",
      "documentation": {
        "title": "make_datetime()",
        "description": "Creates a datetime scalar value between the specified date and time.",
        "syntax": "`make_datetime(`*year*, *month*, *day*`)`\n\n`make_datetime(`*year*, *month*, *day*, *hour*, *minute*`)`\n\n`make_datetime(`*year*, *month*, *day*, *hour*, *minute*, *second*`)`",
        "returnInfo": "If successful, the result will be a datetime value, otherwise, the result will be null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*year*| `int` |  *True* | The year value between 0 to 9999.|\n|*month*| `int` |  *True* | The month value between 1 to 12. |\n|*day*| `int` |  *True* | The day value between 1 to 28-31, depending on the month.|\n|*hour*| `int` | | The hour value between 0 to 23.|\n|*minute*| `int` | | The minute value between 0 to 59.|\n|*second*| double | | The second value between 0 to 59.9999999.|",
        "example": "print year_month_day = make_datetime(2017,10,01)\n\nprint year_month_day_hour_minute = make_datetime(2017,10,01,12,10)\n\nprint year_month_day_hour_minute_second = make_datetime(2017,10,01,12,11,0.1234567)",
        "sourceLength": 3074,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-datetime-function"
      }
    },
    {
      "name": "make_timespan",
      "category": "Function",
      "documentation": {
        "title": "make_timespan()",
        "description": "Creates a timespan scalar value from the specified time period.",
        "syntax": "`make_timespan(`*hour*, *minute*`)`\n\n`make_timespan(`*hour*, *minute*, *second*`)`\n\n`make_timespan(`*day*, *hour*, *minute*, *second*`)`",
        "returnInfo": "If the creation is successful, the result will be a timespan value. Otherwise, the result will be null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*day*| `int` |  *True*| The day.|\n|*hour*| `int` |  *True*| The hour. A value from 0-23.|\n|*minute*| `int` || The minute. A value from 0-59.|\n|*second*| `real` || The second. A value from 0 to 59.9999999.|",
        "example": "print ['timespan'] = make_timespan(1,12,30,55.123)",
        "sourceLength": 1905,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-timespan-function"
      }
    },
    {
      "name": "max_of",
      "category": "Function",
      "documentation": {
        "title": "max_of()",
        "description": "Returns the maximum value of all argument expressions.",
        "syntax": "`max_of(`*arg*`,` *arg_2*`,` [ *arg_3*`,` ... ]`)`",
        "returnInfo": "The maximum value of all argument expressions.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*arg_i* | scalar |  *True* | The values to compare.|\n\n* All arguments must be of the same type.\n* Maximum of 64 arguments is supported.\n* Non-null values take precedence to null values.",
        "example": "",
        "sourceLength": 3163,
        "url": "https://learn.microsoft.com/en-us/kusto/query/max-of-function"
      }
    },
    {
      "name": "merge_tdigest",
      "category": "Function",
      "documentation": {
        "title": "merge_tdigest()",
        "description": "Merges `tdigest` results (scalar version of the aggregate version `tdigest_merge()`).\n\nRead more about the underlying algorithm (T-Digest) and the estimated error here.\n\n> The `merge_tdigest()` and `tdigest_merge()` functions are equivalent\n\n> \n>The results of tdigest() and tdigest_merge() can be stored and later retrieved. For example, you may want to create daily percentiles summary, which can then be used to calculate weekly percentiles.\n> However, the precise binary representation of these results may change over time. There's no guarantee that these functions will produce identical results for identical inputs, and therefore we don't advise relying on them.",
        "syntax": "`merge_tdigest(`*exprs*`)`",
        "returnInfo": "The result for merging the columns `*Expr1*`, `*Expr2*`, ... `*ExprN*` to one `tdigest`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *exprs* | `dynamic` |  *True* | One or more comma-separated column references that have the `tdigest` values to be merged. |",
        "example": "range x from 1 to 10 step 1 \n| extend y = x + 10\n| summarize tdigestX = tdigest(x), tdigestY = tdigest(y)\n| project merged = merge_tdigest(tdigestX, tdigestY)\n| project percentile_tdigest(merged, 100, typeof(long))",
        "sourceLength": 2457,
        "url": "https://learn.microsoft.com/en-us/kusto/query/merge-tdigest-function"
      }
    },
    {
      "name": "min_of",
      "category": "Function",
      "documentation": {
        "title": "min_of()",
        "description": "Returns the minimum value of several evaluated scalar expressions.",
        "syntax": "`min_of` `(`*arg*`,` *arg_2*`,` [ *arg_3*, ... ]`)`",
        "returnInfo": "The minimum value of all argument expressions.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *arg*, *arg_2*, ... | scalar |  *True* | A comma separated list of 2-64 scalar expressions to compare. The function returns the minimum value among these expressions.|\n\n* All arguments must be of the same type.\n* Maximum of 64 arguments is supported.\n* Non-null values take precedence to null values.",
        "example": "print result=min_of(10, 1, -3, 17) \n\ndatatable (A: int, B: int)\n[\n    5, 2,\n    10, 1,\n    int(null), 3,\n    1, int(null),\n    int(null), int(null)\n]\n| project min_of(A, B)",
        "sourceLength": 2256,
        "url": "https://learn.microsoft.com/en-us/kusto/query/min-of-function"
      }
    },
    {
      "name": "monthofyear",
      "category": "Function",
      "documentation": {
        "title": "monthofyear()",
        "description": "Returns the integer number from 1-12 representing the month number of the given year.\n\n> The `monthofyear()` and `getmonth()` functions are equivalent",
        "syntax": "`monthofyear(`*date*`)`",
        "returnInfo": "An integer from 1-12 representing the month number of the given year.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to find the month number. |",
        "example": "print result=monthofyear(datetime(\"2015-12-14\"))",
        "sourceLength": 1475,
        "url": "https://learn.microsoft.com/en-us/kusto/query/monthofyear-function"
      }
    },
    {
      "name": "new_guid",
      "category": "Function",
      "documentation": {
        "title": "new_guid()",
        "description": "Returns a random GUID (Globally Unique Identifier).",
        "syntax": "`new_guid()`",
        "returnInfo": "A new value of type `guid`.",
        "parametersTable": "",
        "example": "print guid=new_guid()",
        "sourceLength": 1150,
        "url": "https://learn.microsoft.com/en-us/kusto/query/new-guid-function"
      }
    },
    {
      "name": "next",
      "category": "Function",
      "documentation": {
        "title": "next()",
        "description": "Returns the value of a column in a row that is at some offset following the\ncurrent row in a serialized row set.",
        "syntax": "`next(`*column*`,` [ *offset*`,` *default_value* ]`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *column*| `string` |   *True* | The column from which to get the values.|\n| *offset*| `int` | | The amount of rows to move from the current row. Default is 1. |\n| *default_value*| scalar | | The default value when there's no value in the next row. When no default value is specified, `null` is used.|",
        "example": "",
        "sourceLength": 5098,
        "url": "https://learn.microsoft.com/en-us/kusto/query/next-function"
      }
    },
    {
      "name": "not",
      "category": "Function",
      "documentation": {
        "title": "not()",
        "description": "Reverses the value of its `bool` argument.",
        "syntax": "`not(`*expr*`)`",
        "returnInfo": "Returns the reversed logical value of its `bool` argument.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr*|scalar| *True*|An expression that evaluates to a boolean value. The result of this expression is reversed.|",
        "example": "StormEvents \n| where not(EventType == \"Tornado\") \n| summarize count() by State\n\nStormEvents\n| where not(EventType == \"Hail\" or State == \"Alaska\")\n\nStormEvents\n| where not(EventType == \"Hail\" and State == \"Alaska\")",
        "sourceLength": 3242,
        "url": "https://learn.microsoft.com/en-us/kusto/query/not-function"
      }
    },
    {
      "name": "now",
      "category": "Function",
      "documentation": {
        "title": "now()",
        "description": "Returns the current UTC time, optionally offset by a given timespan.\n\nThe current UTC time will stay the same across all uses of `now()` in a single query statement, even if there's technically a small time difference between when each `now()` runs.",
        "syntax": "`now(`[ *offset* ]`)`",
        "returnInfo": "The current UTC clock time, plus the *offset* time if provided, as a `datetime`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *offset* | `timespan` | | A timespan to add to the current UTC clock time. The default value is 0.|",
        "example": "",
        "sourceLength": 3432,
        "url": "https://learn.microsoft.com/en-us/kusto/query/now-function"
      }
    },
    {
      "name": "parse_command_line",
      "category": "Function",
      "documentation": {
        "title": "parse_command_line()",
        "description": "Parses a Unicode command-line string and returns a dynamic array of the command-line arguments.",
        "syntax": "`parse_command_line(`*command_line*, *parser_type*`)`",
        "returnInfo": "A dynamic array of the command-line arguments.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *command_line*| `string` |  *True* | The command line value to parse.|\n| *parser_type*| `string` |  *True* | The only value that is currently supported is `\"windows\"`, which parses the command line the same way as CommandLineToArgvW.|",
        "example": "print parse_command_line(\"echo \\\"hello world!\\\"\", \"windows\")",
        "sourceLength": 1749,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-command-line-function"
      }
    },
    {
      "name": "parse_csv",
      "category": "Function",
      "documentation": {
        "title": "parse_csv()",
        "description": "Splits a given string representing a single record of comma-separated values and returns a string array with these values.",
        "syntax": "`parse_csv(`*csv_text*`)`",
        "returnInfo": "A string array that contains the split values.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *csv_text* | `string` |  *True* | A single record of comma-separated values. |\n\n> \n>\n> * Embedded line feeds, commas, and quotes may be escaped using the double quotation mark ('\"').\n> * This function doesn't support multiple records per row (only the first record is taken).",
        "example": "",
        "sourceLength": 3187,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-csv-function"
      }
    },
    {
      "name": "parse_ipv4",
      "category": "Function",
      "documentation": {
        "title": "parse_ipv4()",
        "description": "Converts IPv4 string to a signed 64-bit wide long number representation in big-endian order.",
        "syntax": "`parse_ipv4(`*ip*`)`",
        "returnInfo": "If conversion is successful, the result is a long number.\nIf conversion isn't successful, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip* | `string` |  *True* | The IPv4 that is converted to long. The value may include net-mask using IP-prefix notation.|",
        "example": "datatable(ip_string: string)\n[\n    '192.168.1.1', '192.168.1.1/24', '255.255.255.255/31'\n]\n| extend ip_long = parse_ipv4(ip_string)",
        "sourceLength": 1842,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-ipv4-function"
      }
    },
    {
      "name": "parse_ipv4_mask",
      "category": "Function",
      "documentation": {
        "title": "parse_ipv4_mask()",
        "description": "Converts the input string of IPv4 and netmask to a signed, 64-bit wide, long number representation in big-endian order.",
        "syntax": "`parse_ipv4_mask(`*ip* `,` *prefix*`)`",
        "returnInfo": "If conversion is successful, the result is a long number.\nIf conversion isn't successful, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip*| `string` |  *True* | The IPv4 address to convert to a long number.|\n| *prefix*| `int` |  *True* | An integer from 0 to 32 representing the number of most-significant bits that are taken into account.|",
        "example": "print parse_ipv4_mask(\"127.0.0.1\", 24)",
        "sourceLength": 1670,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-ipv4-mask-function"
      }
    },
    {
      "name": "parse_ipv6",
      "category": "Function",
      "documentation": {
        "title": "parse_ipv6()",
        "description": "Converts IPv6 or IPv4 string to a canonical IPv6 string representation.",
        "syntax": "`parse_ipv6(`*ip*`)`",
        "returnInfo": "If conversion is successful, the result is a string representing a canonical IPv6 network address.\nIf conversion isn't successful, the result is an empty string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip* | `string` |  *True* | The IPv6/IPv4 network address that is converted to canonical IPv6 representation. The value may include net-mask using IP-prefix notation.|",
        "example": "datatable(ipv4: string)\n[\n    '192.168.255.255', '192.168.255.255/24', '255.255.255.255'\n]\n| extend ipv6 = parse_ipv6(ipv4)",
        "sourceLength": 2115,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-ipv6-function"
      }
    },
    {
      "name": "parse_ipv6_mask",
      "category": "Function",
      "documentation": {
        "title": "parse_ipv6_mask()",
        "description": "Converts IPv6/IPv4 string and netmask to a canonical IPv6 string representation.",
        "syntax": "`parse_ipv6_mask(`*ip*`,` *prefix*`)`",
        "returnInfo": "If conversion is successful, the result is a string representing a canonical IPv6 network address.\nIf conversion isn't successful, the result is an empty string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ip*| `string` | | The IPv6/IPv4 network address to convert to canonical IPv6 representation. The value may include net-mask using IP-prefix notation.|\n| *prefix*| `int` | | An integer from 0 to 128 representing the number of most-significant bits that are taken into account.|",
        "example": "datatable(ip_string: string, netmask: long)\n[\n    // IPv4 addresses\n    '192.168.255.255', 120,  // 120-bit netmask is used\n    '192.168.255.255/24', 124,  // 120-bit netmask is used, as IPv4 address doesn't use upper 8 bits\n    '255.255.255.255', 128,  // 128-bit netmask is used\n    // IPv6 addresses\n    'fe80::85d:e82c:9446:7994', 128,     // 128-bit netmask is used\n    'fe80::85d:e82c:9446:7994/120', 124, // 120-bit netmask is used\n    // IPv6 with IPv4 notation\n    '::192.168.255.255', 128,  // 128-bit netmask is used\n    '::192.168.255.255/24', 128,  // 120-bit netmask is used, as IPv4 address doesn't use upper 8 bits\n]\n| extend ip6_canonical = parse_ipv6_mask(ip_string, netmask)",
        "sourceLength": 3256,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-ipv6-mask-function"
      }
    },
    {
      "name": "parse_json",
      "category": "Function",
      "documentation": {
        "title": "parse_json()",
        "description": "Interprets a `string` as a JSON value and returns the value as `dynamic`. If possible, the value is converted into relevant data types.  For strict parsing with no data type conversion, use extract() or extract_json() functions.\n\nIt's better to use the parse_json() function over the extract_json() function when you need to extract more than one element of a JSON compound object. Use dynamic() when possible.\n\n> **Deprecated aliases:** parsejson(), toobject(), todynamic()",
        "syntax": "`parse_json(`*json*`)`",
        "returnInfo": "An object of type `dynamic` that is determined by the value of *json*:\n\n* If *json* is of type `dynamic`, its value is used as-is.\n* If *json* is of type `string`, and is a properly formatted JSON string, then the string is parsed, and the value produced is returned.\n* If *json* is of type `string`, but it isn't a properly formatted JSON string, then the returned value is an object of type `dynamic` that holds the original `string` value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *json* | `string` |  *True* | The string in the form of a JSON-formatted value or a dynamic property bag to parse as JSON.|",
        "example": "",
        "sourceLength": 5243,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-json-function"
      }
    },
    {
      "name": "parse_path",
      "category": "Function",
      "documentation": {
        "title": "parse_path()",
        "description": "Parses a file path `string` and returns a `dynamic` object that contains the following parts of the path:\n\n* Scheme\n* RootPath\n* DirectoryPath\n* DirectoryName\n* Filename\n* Extension\n* AlternateDataStreamName\n\nIn addition to the simple paths with both types of slashes, the function supports paths with:\n\n* Schemas. For example, \"file://...\"\n* Shared paths. For example, \"\\\\shareddrive\\users...\"\n* Long paths. For example, \"\\\\?\\C:...\"\"\n* Alternate data streams. For example, \"file1.exe:file2.exe\"",
        "syntax": "`parse_path(`*path*`)`",
        "returnInfo": "An object of type `dynamic` that included the path components as listed above.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *path* | `string` |  *True* | The file path.|",
        "example": "datatable(p:string) \n[\n    @\"C:\\temp\\file.txt\",\n    @\"temp\\file.txt\",\n    \"file://C:/temp/file.txt:some.exe\",\n    @\"\\\\shared\\users\\temp\\file.txt.gz\",\n    \"/usr/lib/temp/file.txt\"\n]\n| extend path_parts = parse_path(p)",
        "sourceLength": 2982,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-path-function"
      }
    },
    {
      "name": "parse_url",
      "category": "Function",
      "documentation": {
        "title": "parse_url()",
        "description": "Parses an absolute URL `string` and returns a `dynamic` object contains URL parts.\n\n> **Deprecated aliases:** parseurl()",
        "syntax": "`parse_url(`*url*`)`",
        "returnInfo": "An object of type dynamic that included the URL components: Scheme, Host, Port, Path, Username, Password, Query Parameters, Fragment.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *url* | `string` |  *True* | An absolute URL, including its scheme, or the query part of the URL. For example, use the absolute `https://bing.com` instead of `bing.com`.|",
        "example": "print Result=parse_url(\"scheme://username:password@host:1234/this/is/a/path?k1=v1&k2=v2#fragment\")",
        "sourceLength": 1891,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-url-function"
      }
    },
    {
      "name": "parse_user_agent",
      "category": "Function",
      "documentation": {
        "title": "parse_user_agent()",
        "description": "Interprets a user-agent string, which identifies the user's browser and provides certain system details to servers hosting the websites the user visits. The result is returned as `dynamic`.",
        "syntax": "`parse_user_agent(`*user-agent-string*, *look-for*`)`",
        "returnInfo": "An object of type `dynamic` that contains the information about the requested parsing targets.\n\n**Browser**: **Family**, **MajorVersion**, **MinorVersion**, **Patch**\n\n**OperatingSystem**: **Family**, **MajorVersion**, **MinorVersion**, **Patch**, **PatchMinor**\n\n**Device**: **Family**, **Brand**, **Model**\n\n> \n> The function implementation is built on regex checks of the input string against a huge number of predefined patterns. Therefore the expected time and CPU consumption is high.\nWhen the function is used in a query, make sure it runs in a distributed manner on multiple machines.\nIf queries with this function are frequently used, you may want to pre-create the results via update policy, but you need to take into account that using this function inside the update policy will increase the ingestion latency.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *user-agent-string*| `string` |  *True* | The user-agent string to parse.|\n| *look-for*| string or dynamic |  *True* | The value to search for in *user-agent-string*. The possible options are \"browser\", \"os\", or \"device\". If only a single parsing target is required, it can be passed a `string` parameter. If two or three targets are required, they can be passed as a `dynamic` array.|",
        "example": "",
        "sourceLength": 4353,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-user-agent-function"
      }
    },
    {
      "name": "parse_version",
      "category": "Function",
      "documentation": {
        "title": "parse_version()",
        "description": "Converts the input string representation of a version number into a decimal number that can be compared.",
        "syntax": "`parse_version` `(`*version*`)`",
        "returnInfo": "If conversion is successful, the result is a decimal; otherwise, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *version* | `string` |  *True* | The version to be parsed.|\n\n> \n>\n> * *version* must contain from one to four version parts, represented as numbers and separated with dots ('.').\n> * Each part of *version* may contain up to eight digits, with the max value at 99999999.\n> * If the number of parts is less than four, all the missing parts are considered as trailing. For example, `1.0` == `1.0.0.0`.",
        "example": "",
        "sourceLength": 3711,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-version-function"
      }
    },
    {
      "name": "parse_xml",
      "category": "Function",
      "documentation": {
        "title": "parse_xml()",
        "description": "Interprets a `string` as an XML value, converts the value to a JSON, and returns the value as `dynamic`.",
        "syntax": "`parse_xml(`*xml*`)`",
        "returnInfo": "An object of type dynamic that is determined by the value of *xml*, or null, if the XML format is invalid.\n\nThe conversion is done as follows:\n\nXML                                |JSON                                            |Access\n-----------------------------------|:------------------------------------------------|:--------------\n`<e/>`                             | { \"e\": null }                                  | o.e\n`<e>text</e>`\t                   | { \"e\": \"text\" }\t                            | o.e\n`<e name=\"value\" />`               | { \"e\":{\"@name\": \"value\"} }\t                    | o.e[\"@name\"]\n`<e name=\"value\">text</e>`         | { \"e\": { \"@name\": \"value\", \"#text\": \"text\" } } | o.e[\"@name\"] o.e[\"#text\"]\n`<e> <a>text</a> <b>text</b> </e>` | { \"e\": { \"a\": \"text\", \"b\": \"text\" } }\t        | o.e.a o.e.b\n`<e> <a>text</a> <a>text</a> </e>` | { \"e\": { \"a\": [\"text\", \"text\"] } }\t            | o.e.a[0] o.e.a[1]\n`<e> text <a>text</a> </e>`        | { \"e\": { \"#text\": \"text\", \"a\": \"text\" } }\t    | 1`o.e[\"#text\"] o.e.a\n\n> \n>\n> * Maximal input `string` length for `parse_xml` is 1 MB (1,048,576 bytes). Longer strings interpretation will result in a null object.\n> * Only element nodes, attributes and text nodes will be translated. Everything else will be skipped.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *xml*| `string` |  *True* | The XML-formatted string value to parse.|",
        "example": "T\n| extend d=parse_xml(context_custom_metrics) \n| extend duration_value=d.duration.value, duration_min=d[\"duration\"][\"min\"]",
        "sourceLength": 3219,
        "url": "https://learn.microsoft.com/en-us/kusto/query/parse-xml-function"
      }
    },
    {
      "name": "percentile_tdigest",
      "category": "Function",
      "documentation": {
        "title": "percentile_tdigest()",
        "description": "Calculates the percentile result from the `tdigest` results (which was generated by tdigest() or tdigest_merge())",
        "syntax": "`percentile_tdigest(`*expr*`,` *percentile1* `,` *typeLiteral*`)`",
        "returnInfo": "The percentile value of each value in *expr*.\n\n>\n>\n>* If the type was provided, the result will be a column of the same type provided with the results of the percentile. In this case, all `tdigest` functions must be of that type.\n>* If *expr* includes `tdigest` functions of different types, don't provide the type. The result will be of type dynamic. See below examples.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*expr*| `string` | *True*|An expression that was generated by `tdigest` or tdigest_merge().|\n|*percentile*| `real` | *True*|The value that specifies the percentile.|\n|*typeLiteral*| `string` ||A type literal. If provided, the result set will be of this type. For example, `typeof(long)` will cast all results to type `long`.",
        "example": "",
        "sourceLength": 3558,
        "url": "https://learn.microsoft.com/en-us/kusto/query/percentile-tdigest-function"
      }
    },
    {
      "name": "percentrank_tdigest",
      "category": "Function",
      "documentation": {
        "title": "percentrank_tdigest()",
        "description": "Calculates the approximate rank of the value in a set, where rank is expressed as a percentage of the set's size.\nThis function can be viewed as the inverse of the percentile.",
        "syntax": "`percentrank_tdigest(`*digest*`,` *value*`)`",
        "returnInfo": "The percentage rank of value in a dataset.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*digest*| `string` | *True*| An expression that was generated by tdigest() or tdigest_merge().|\n|*value*|scalar| *True*|An expression representing a value to be used for percentage ranking calculation.|\n\n> \n> The type of *value* and the type of the elements in *digest* should be the same.",
        "example": "StormEvents\n| summarize tdigestRes = tdigest(DamageProperty)\n| project percentrank_tdigest(tdigestRes, 4490)\n\nStormEvents\n| summarize tdigestRes = tdigest(DamageProperty)\n| project percentile_tdigest(tdigestRes, 85, typeof(long))",
        "sourceLength": 2651,
        "url": "https://learn.microsoft.com/en-us/kusto/query/percentrank-tdigest-function"
      }
    },
    {
      "name": "pi",
      "category": "Function",
      "documentation": {
        "title": "pi()",
        "description": "Returns the constant value of Pi.",
        "syntax": "`pi()`",
        "returnInfo": "The double value of Pi (3.1415926...)",
        "parametersTable": "",
        "example": "",
        "sourceLength": 703,
        "url": "https://learn.microsoft.com/en-us/kusto/query/pi-function"
      }
    },
    {
      "name": "pow",
      "category": "Function",
      "documentation": {
        "title": "pow()",
        "description": "Returns a result of raising to power",
        "syntax": "`pow(`*base*`,` *exponent* `)`",
        "returnInfo": "Returns base raised to the power exponent: base ^ exponent.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *base*| int, real, or long |  *True* | The base value.|\n| *exponent*| int, real, or long |  *True* | The exponent value.|",
        "example": "print result=pow(2, 3)",
        "sourceLength": 1337,
        "url": "https://learn.microsoft.com/en-us/kusto/query/pow-function"
      }
    },
    {
      "name": "prev",
      "category": "Function",
      "documentation": {
        "title": "prev()",
        "description": "Returns the value of a specific column in a specified row.\nThe specified row is at a specified offset from the current row in a serialized row set.",
        "syntax": "`prev(`*column*`,` [ *offset* ]`,` [ *default_value* ] `)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *column*| `string` |  *True* | The column from which to get the values.|\n| *offset*| `int` | | The offset to go back in rows. The default is 1.|\n| *default_value*| scalar | | The default value to be used when there are no previous rows from which to take the value. The default is `null`.|",
        "example": "",
        "sourceLength": 5245,
        "url": "https://learn.microsoft.com/en-us/kusto/query/prev-function"
      }
    },
    {
      "name": "radians",
      "category": "Function",
      "documentation": {
        "title": "radians()",
        "description": "Converts angle value in degrees into value in radians, using formula `radians = (PI / 180 ) * angle_in_degrees`",
        "syntax": "`radians(`*degrees*`)`",
        "returnInfo": "The corresponding angle in radians for an angle specified in degrees.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *degrees* | `real` |  *True* | The angle in degrees.|",
        "example": "print radians0 = radians(90), radians1 = radians(180), radians2 = radians(360)",
        "sourceLength": 1494,
        "url": "https://learn.microsoft.com/en-us/kusto/query/radians-function"
      }
    },
    {
      "name": "rand",
      "category": "Function",
      "documentation": {
        "title": "rand()",
        "description": "Returns a random number.\n\n```kusto\nrand()\nrand(1000)\n```",
        "syntax": "* `rand()` - returns a value of type `real`\n  with a uniform distribution in the range 0.0, 1.0).\n* `rand(` *N* `)` - returns a value of type `real`\n  chosen with a uniform distribution from the set {0.0, 1.0, ..., *N* - 1}.\n\n[",
        "returnInfo": "",
        "parametersTable": "",
        "example": "",
        "sourceLength": 891,
        "url": "https://learn.microsoft.com/en-us/kusto/query/rand-function"
      }
    },
    {
      "name": "range",
      "category": "Function",
      "documentation": {
        "title": "range()",
        "description": "Generates a dynamic array holding a series of equally spaced values.",
        "syntax": "`range(`*start*`,` *stop* [`,` *step*]`)`",
        "returnInfo": "A dynamic array whose values are: *start*, *start* + *step*, ... up to and including *stop*. The array is truncated if the maximum number of results allowed is reached.  \n\n> \n> The range function supports a maximum of 1,048,576 (2^20) results.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*start*|scalar| *True*| The value of the first element in the resulting array. |\n|*stop*|scalar| *True*| The maximum value of the last element in the resulting array, such that the last value in the series is less than or equal to the stop value. |\n|*step*|scalar||The difference between two consecutive elements of the array. The default value for *step* is `1` for numeric and `1h` for `timespan` or `datetime`.|",
        "example": "print r = range(1, 8, 3)\n\nprint r = range(datetime(2007-01-01), datetime(2007-12-31), 1d)\n\nprint range(1, 3)\n\nprint range(1h, 5h)\n\nprint r = range(1,1000000000) \n| mv-expand r \n| count",
        "sourceLength": 4169,
        "url": "https://learn.microsoft.com/en-us/kusto/query/range-function"
      }
    },
    {
      "name": "regex_quote",
      "category": "Function",
      "documentation": {
        "title": "regex_quote()",
        "description": "Returns a string that escapes all regular expression characters.",
        "syntax": "`regex_quote(`*string*`)`",
        "returnInfo": "Returns *string* where all regex expression characters are escaped.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *string* | `string` |  *True* | The string to escape.|",
        "example": "print result = regex_quote('(so$me.Te^xt)')",
        "sourceLength": 1411,
        "url": "https://learn.microsoft.com/en-us/kusto/query/regex-quote-function"
      }
    },
    {
      "name": "repeat",
      "category": "Function",
      "documentation": {
        "title": "repeat()",
        "description": "Generates a dynamic array containing a series comprised of repeated numbers.",
        "syntax": "`repeat(`*value*`,` *count*`)`",
        "returnInfo": "If *count* is equal to zero, an empty array is returned.\nIf *count* is less than zero, a null value is returned.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `bool`, `int`, `long`, `real`, `datetime`, `string` or `timespan` |  *True* | The value of the element in the resulting array.|  \n| *count* | `int` |  *True* | The count of the elements in the resulting array.|",
        "example": "T | extend r = repeat(1, 3)",
        "sourceLength": 1317,
        "url": "https://learn.microsoft.com/en-us/kusto/query/repeat-function"
      }
    },
    {
      "name": "replace_regex",
      "category": "Function",
      "documentation": {
        "title": "replace_regex()",
        "description": "Replaces all regular expression matches with a specified pattern.\n\n> **Deprecated aliases:** replace()",
        "syntax": "`replace_regex(`*source*`,`*lookup_regex*`,` *rewrite_pattern*`)`",
        "returnInfo": "Returns the *source* after replacing all matches of *lookup_regex* with evaluations of *rewrite_pattern*. Matches do not overlap.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source*| `string` |  *True* | The text to search and replace.|\n| *lookup_regex*| `string` |  *True* | The regular expression to search for in *text*. The expression can contain capture groups in parentheses. To match over multiple lines, use the `m` or `s` flags. For more information on flags, see Grouping and flags. |\n| *rewrite_pattern*| `string` |  *True* | The replacement regex for any match made by *matchingRegex*. Use `\\0` to refer to the whole match, `\\1` for the first capture group, `\\2` and so on for subsequent capture groups.|",
        "example": "range x from 1 to 5 step 1\n| extend str=strcat('Number is ', tostring(x))\n| extend replaced=replace_regex(str, @'is (\\d+)', @'was: \\1')",
        "sourceLength": 2798,
        "url": "https://learn.microsoft.com/en-us/kusto/query/replace-regex-function"
      }
    },
    {
      "name": "replace_string",
      "category": "Function",
      "documentation": {
        "title": "replace_string()",
        "description": "Replaces all string matches with a specified string.\n\n> **Deprecated aliases:** replace()\n\nTo replace multiple strings, see replace_strings().",
        "syntax": "`replace_string(`*text*`,` *lookup*`,` *rewrite*`)`",
        "returnInfo": "Returns the *text* after replacing all matches of *lookup* with evaluations of *rewrite*. Matches don't overlap.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*text*| `string` | *True*|The source string.|\n|*lookup*| `string` | *True*|The string to be replaced.|\n|*rewrite*| `string` | *True*|The replacement string.|",
        "example": "",
        "sourceLength": 3635,
        "url": "https://learn.microsoft.com/en-us/kusto/query/replace-string-function"
      }
    },
    {
      "name": "replace_strings",
      "category": "Function",
      "documentation": {
        "title": "replace_strings()",
        "description": "Replaces all strings matches with specified strings.\n\nTo replace an individual string, see replace_string().",
        "syntax": "`replace_strings(`*text*`,` *lookups*`,` *rewrites*`)`",
        "returnInfo": "Returns *text* after replacing all matches of *lookups* with evaluations of *rewrites*. Matches don't overlap.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*text*| `string` | *True*|The source string.|\n|*lookups*| `dynamic` | *True*|The array that includes lookup strings. Array element that isn't a string is ignored.|\n|*rewrites*| `dynamic` | *True*|The array that includes rewrites. Array element that isn't a string is ignored (no replacement made).|",
        "example": "",
        "sourceLength": 5667,
        "url": "https://learn.microsoft.com/en-us/kusto/query/replace-strings-function"
      }
    },
    {
      "name": "reverse",
      "category": "Function",
      "documentation": {
        "title": "reverse()",
        "description": "Function reverses the order of the input string.\nIf the input value isn't of type `string`, then the function forcibly casts the value to type `string`.",
        "syntax": "`reverse(`*value*`)`",
        "returnInfo": "The reverse order of a string value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | input value.|",
        "example": "print str = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n| extend rstr = reverse(str)\n\nprint ['int'] = 12345, ['double'] = 123.45, \n['datetime'] = datetime(2017-10-15 12:00), ['timespan'] = 3h\n| project rint = reverse(['int']), rdouble = reverse(['double']), \nrdatetime = reverse(['datetime']), rtimespan = reverse(['timespan'])",
        "sourceLength": 2270,
        "url": "https://learn.microsoft.com/en-us/kusto/query/reverse-function"
      }
    },
    {
      "name": "round",
      "category": "Function",
      "documentation": {
        "title": "round()",
        "description": "Returns the rounded number to the specified precision.",
        "syntax": "`round(`*number* [`,` *precision*]`)`",
        "returnInfo": "The rounded number to the specified precision.\n\nRound is different from the `bin()` function in\nthat the `round()` function rounds a number to a specific number of digits while the `bin()` function rounds the value to an integer multiple of a given bin size. For example, `round(2.15, 1)` returns 2.2 while `bin(2.15, 1)` returns 2.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number*| long or real |  *True* | The number to calculate the round on.|\n| *precision*| `int` | | The number of digits to round to. The default is 0.|",
        "example": "round(2.98765, 3)   // 2.988\nround(2.15, 1)      // 2.2\nround(2.15)         // 2 // equivalent to round(2.15, 0)\nround(-50.55, -2)   // -100\nround(21.5, -1)     // 20",
        "sourceLength": 1521,
        "url": "https://learn.microsoft.com/en-us/kusto/query/round-function"
      }
    },
    {
      "name": "row_cumsum",
      "category": "Function",
      "documentation": {
        "title": "row_cumsum()",
        "description": "Calculates the cumulative sum of a column in a serialized row set.",
        "syntax": "`row_cumsum(` *term* [`,` *restart*] `)`",
        "returnInfo": "The function returns the cumulative sum of its argument.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *term*| int, long, or real |  *True* | The expression indicating the value to be summed.|\n| *restart*| `bool` | | Indicates when the accumulation operation should be restarted, or set back to 0. It can be used to indicate partitions in the data.|",
        "example": "datatable (a:long) [\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n]\n| where a%2==0\n| serialize cs=row_cumsum(a)\n\ndatatable (name:string, month:int, salary:long)\n[\n    \"Alice\", 1, 1000,\n    \"Bob\",   1, 1000,\n    \"Alice\", 2, 2000,\n    \"Bob\",   2, 1950,\n    \"Alice\", 3, 1400,\n    \"Bob\",   3, 1450,\n]\n| order by name asc, month asc\n| extend total=row_cumsum(salary, name != prev(name))",
        "sourceLength": 2994,
        "url": "https://learn.microsoft.com/en-us/kusto/query/row-cumsum-function"
      }
    },
    {
      "name": "row_number",
      "category": "Function",
      "documentation": {
        "title": "row_number()",
        "description": "Returns the current row's index in a serialized row set.\n\nThe row index starts by default at `1` for the first row, and is incremented by `1` for each additional row.\nOptionally, the row index can start at a different value than `1`.\nAdditionally, the row index may be reset according to some provided predicate.",
        "syntax": "`row_number(` [*StartingIndex* [`,` *Restart*]] `)`",
        "returnInfo": "The function returns the row index of the current row as a value of type `long`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *StartingIndex*| `long` | | The value of the row index to start at or restart to. The default value is 1.|\n| *restart*| `bool` | | Indicates when the numbering is to be restarted to the *StartingIndex* value. The default is `false`.|",
        "example": "range a from 1 to 10 step 1\n| sort by a desc\n| extend rn=row_number()\n\nrange a from 1 to 10 step 1\n| sort by a desc\n| extend rn=row_number(7)\n\ndatatable (Airport:string, Airline:string, Departures:long)\n[\n  \"TLV\", \"LH\", 1,\n  \"TLV\", \"LY\", 100,\n  \"SEA\", \"LH\", 1,\n  \"SEA\", \"BA\", 2,\n  \"SEA\", \"LY\", 0\n]\n| sort by Airport asc, Departures desc\n| extend Rank=row_number(1, prev(Airport) != Airport)",
        "sourceLength": 3719,
        "url": "https://learn.microsoft.com/en-us/kusto/query/row-number-function"
      }
    },
    {
      "name": "row_rank_dense",
      "category": "Function",
      "documentation": {
        "title": "row_rank_dense()",
        "description": "Returns the current row's dense rank in a serialized row set.\n\nThe row rank starts by default at `1` for the first row, and is incremented by `1` whenever the provided *Term* is different than the previous row's *Term*.",
        "syntax": "`row_rank_dense` `(` *Term* `)`",
        "returnInfo": "Returns the row rank of the current row as a value of type `long`.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*Term*| `string` | *True*|An expression indicating the value to consider for the rank. The rank is increased whenever the *Term* changes.|\n| *restart*| `bool` | | Indicates when the numbering is to be restarted to the *StartingIndex* value. The default is `false`.|",
        "example": "datatable (Airport:string, Airline:string, Departures:long)\n[\n  \"SEA\", \"LH\", 3,\n  \"SEA\", \"LY\", 100,\n  \"SEA\", \"UA\", 3,\n  \"SEA\", \"BA\", 2,\n  \"SEA\", \"EL\", 3\n]\n| sort by Departures asc\n| extend Rank=row_rank_dense(Departures)\n\ndatatable (Airport:string, Airline:string, Departures:long)\n[\n  \"SEA\", \"LH\", 3,\n  \"SEA\", \"LY\", 100,\n  \"SEA\", \"UA\", 3,\n  \"SEA\", \"BA\", 2,\n  \"SEA\", \"EL\", 3,\n  \"AMS\", \"EL\", 1,\n  \"AMS\", \"BA\", 1\n]\n| sort by Airport desc, Departures asc\n| extend Rank=row_rank_dense(Departures, prev(Airport) != Airport)",
        "sourceLength": 3752,
        "url": "https://learn.microsoft.com/en-us/kusto/query/row-rank-dense-function"
      }
    },
    {
      "name": "row_rank_min",
      "category": "Function",
      "documentation": {
        "title": "row_rank_min()",
        "description": "Returns the current row's minimal rank in a serialized row set.\n\nThe rank is the minimal row number that the current row's *Term* appears in.",
        "syntax": "`row_rank_min` `(` *Term* `)`",
        "returnInfo": "Returns the row rank of the current row as a value of type `long`.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*Term*| `string` | *True*|An expression indicating the value to consider for the rank. The rank is the minimal row number for *Term*.|\n| *restart*| `bool` | | Indicates when the numbering is to be restarted to the *StartingIndex* value. The default is `false`.|",
        "example": "datatable (Airport:string, Airline:string, Departures:long)\n[\n  \"SEA\", \"LH\", 3,\n  \"SEA\", \"LY\", 100,\n  \"SEA\", \"UA\", 3,\n  \"SEA\", \"BA\", 2,\n  \"SEA\", \"EL\", 3\n]\n| sort by Departures asc\n| extend Rank=row_rank_min(Departures)",
        "sourceLength": 2358,
        "url": "https://learn.microsoft.com/en-us/kusto/query/row-rank-min-function"
      }
    },
    {
      "name": "row_window_session",
      "category": "Function",
      "documentation": {
        "title": "row_window_session()",
        "description": "Calculates session start values of a column in a serialized row set.",
        "syntax": "`row_window_session` `(` *Expr* `,` *MaxDistanceFromFirst* `,` *MaxDistanceBetweenNeighbors* [`,` *Restart*] `)`",
        "returnInfo": "The function returns the values at the beginning of each session. It uses the following conceptual calculation model:\n\n1. Iterates over the input sequence of *Expr* values in order.\n\n1. For each value, it decides whether to create a new session.\n\n1. If a new session is created, the function returns the current value of *Expr*. Otherwise, it returns the previous value of *Expr*.\n\n>\n>The value represents a new session if it meets the following conditions using the logical OR operation:\n>\n>* If there was no previous session value, or the previous session value was null.\n>* If the value of *Expr* equals or exceeds the previous session value plus\n  *MaxDistanceFromFirst*.\n>* If the value of *Expr* equals or exceeds the previous value of *Expr*\n  plus *MaxDistanceBetweenNeighbors*.\n>* If *`Restart`* condition is specified and evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*Expr* | `datetime` | *True* | An expression whose values are grouped together in sessions. When *Expr* results in a null value, the next value starts a new session. |\n|*MaxDistanceFromFirst* | `timespan` | *True* | Determines when a new session starts using the maximum distance between the current *Expr* value and its value at the beginning of the session. |\n|*MaxDistanceBetweenNeighbors*| `timespan` | *True* | Another criterion for starting a new session using the maximum distance from one value of *Expr* to the next. |\n| *Restart* |`boolean` | | If specified, every value that evaluates to `true` immediately restarts the session. |",
        "example": "datatable (ID:string, Timestamp:datetime) [\n    \"1\", datetime(2024-04-11 10:00:00),\n    \"2\", datetime(2024-04-11 10:18:00),\n    \"1\", datetime(2024-04-11 11:00:00),\n    \"3\", datetime(2024-04-11 11:30:00),\n    \"2\", datetime(2024-04-11 13:30:00),\n    \"2\", datetime(2024-04-11 10:16:00)\n]\n| sort by ID asc, Timestamp asc\n| extend SessionStarted = row_window_session(Timestamp, 1h, 5m, ID != prev(ID))",
        "sourceLength": 4443,
        "url": "https://learn.microsoft.com/en-us/kusto/query/row-window-session-function"
      }
    },
    {
      "name": "series_abs",
      "category": "Function",
      "documentation": {
        "title": "series_abs()",
        "description": "Calculates the element-wise absolute value of the numeric series input.",
        "syntax": "`series_abs(`*series*`)`",
        "returnInfo": "Dynamic array of calculated absolute value. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the absolute value function is applied. |",
        "example": "print arr = dynamic([-6.5,0,8.2])\n| extend arr_abs = series_abs(arr)",
        "sourceLength": 1551,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-abs-function"
      }
    },
    {
      "name": "series_acos",
      "category": "Function",
      "documentation": {
        "title": "series_acos()",
        "description": "Calculates the element-wise arccosine function of the numeric series input.",
        "syntax": "`series_acos(`*series*`)`",
        "returnInfo": "Dynamic array of calculated arccosine function values. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the arccosine function is applied. |",
        "example": "print arr = dynamic([-1,0,1])\n| extend arr_acos = series_acos(arr)",
        "sourceLength": 1596,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-acos-function"
      }
    },
    {
      "name": "series_add",
      "category": "Function",
      "documentation": {
        "title": "series_add()",
        "description": "Calculates the element-wise addition of two numeric series inputs.",
        "syntax": "`series_add(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of calculated element-wise add operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1, series2* | `dynamic` |  *True* | The numeric arrays to be element-wise added into a dynamic array result. |",
        "example": "range x from 1 to 3 step 1\n| extend y = x * 2\n| extend z = y * 2\n| project s1 = pack_array(x,y,z), s2 = pack_array(z, y, x)\n| extend s1_add_s2 = series_add(s1, s2)",
        "sourceLength": 1876,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-add-function"
      }
    },
    {
      "name": "series_asin",
      "category": "Function",
      "documentation": {
        "title": "series_asin()",
        "description": "Calculates the element-wise arcsine function of the numeric series input.",
        "syntax": "`series_asin(`*series*`)`",
        "returnInfo": "Dynamic array of calculated arcsine function values. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the arcsine function is applied. |",
        "example": "print arr = dynamic([-1,0,1])\n| extend arr_asin = series_asin(arr)",
        "sourceLength": 1805,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-asin-function"
      }
    },
    {
      "name": "series_atan",
      "category": "Function",
      "documentation": {
        "title": "series_atan()",
        "description": "Calculates the element-wise arctangent function of the numeric series input.",
        "syntax": "`series_atan(`*series*`)`",
        "returnInfo": "Dynamic array of calculated arctangent function values. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the arctangent function is applied. |",
        "example": "print arr = dynamic([-1,0,1])\n| extend arr_atan = series_atan(arr)",
        "sourceLength": 1594,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-atan-function"
      }
    },
    {
      "name": "series_ceiling",
      "category": "Function",
      "documentation": {
        "title": "series_ceiling()",
        "description": "Calculates the element-wise ceiling function of the numeric series input.",
        "syntax": "`series_ceiling(`*series*`)`",
        "returnInfo": "Dynamic array of the calculated ceiling function. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the ceiling function is applied. |",
        "example": "print s = dynamic([-1.5,1,2.5])\n| extend s_ceiling = series_ceiling(s)",
        "sourceLength": 1579,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-ceiling-function"
      }
    },
    {
      "name": "series_cos",
      "category": "Function",
      "documentation": {
        "title": "series_cos()",
        "description": "Calculates the element-wise cosine function of the numeric series input.",
        "syntax": "`series_cos(`*series*`)`",
        "returnInfo": "Dynamic array of calculated cosine function values. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the cosine function is applied. |",
        "example": "print arr = dynamic([-1,0,1])\n| extend arr_cos = series_cos(arr)",
        "sourceLength": 1579,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-cos-function"
      }
    },
    {
      "name": "series_cosine_similarity",
      "category": "Function",
      "documentation": {
        "title": "series_cosine_similarity()",
        "description": "Calculate the cosine similarity of two numerical vectors.\n\nThe function `series_cosine_similarity()` takes two numeric series as input, and calculates their cosine similarity.",
        "syntax": "`series_cosine_similarity(`*series1*`, `*series2*`, [`*magnitude1`, [`*magnitude2`]])`",
        "returnInfo": "Returns a value of type `real` whose value is the cosine similarity of *series1* with *series2*.\nIn case both series length isn't equal, the longer series will be truncated to the length of the shorter one.\nAny non-numeric element of the input series will be ignored.\n\n> \n> If one or both input arrays are empty, the result will be `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1, series2* | `dynamic` |   *True* | Input arrays with numeric data. |\n| *magnitude1, magnitude2* | `real` |  | Optional magnitude of the first and the second vectors respectively. The magnitude is the square root of the dot product of the vector with itself. If the magnitude isn't provided, it will be calculated. |",
        "example": "datatable(s1:dynamic, s2:dynamic)\n[\n    dynamic([0.1,0.2,0.1,0.2]), dynamic([0.11,0.2,0.11,0.21]),\n    dynamic([0.1,0.2,0.1,0.2]), dynamic([1,2,3,4]),\n]\n| extend cosine_similarity=series_cosine_similarity(s1, s2)",
        "sourceLength": 2595,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-cosine-similarity-function"
      }
    },
    {
      "name": "series_decompose",
      "category": "Function",
      "documentation": {
        "title": "series_decompose()",
        "description": "Applies a decomposition transformation on a series.  \n\nTakes an expression containing a series (dynamic numerical array) as input and decomposes it to seasonal, trend, and residual components.",
        "syntax": "`series_decompose(`*Series* `,` [ *Seasonality*`,` *Trend*`,` *Test_points*`,` *Seasonality_threshold* ]`)`",
        "returnInfo": "The function returns the following respective series:\n\n* `baseline`: the predicted value of the series (sum of seasonal and trend components, see below).\n* `seasonal`: the series of the seasonal component:\n  * if the period isn't detected or is explicitly set to 0: constant 0.\n  * if detected or set to positive integer: median of the series points in the same phase\n* `trend`: the series of the trend component.\n* `residual`: the series of the residual component (that is, x - baseline).\n  \n>\n> * Component execution order:\n>\n> 1. Extract the seasonal series\n> 1. Subtract it from x, generating the deseasonal series\n> 1. Extract the trend component from the deseasonal series\n> 1. Create the baseline = seasonal + trend\n> 1. Create the residual = x - baseline\n>\n> * Either seasonality and, or trend should be enabled. Otherwise, the function is redundant, and just returns baseline = 0 and residual = x.\n\n**More about series decomposition**\n\nThis method is usually applied to time series of metrics expected to manifest periodic and/or trend behavior. You can use the method to  forecast future metric values and/or detect anomalous values. The implicit assumption of this regression process is that apart from seasonal and trend behavior, the time series is stochastic and randomly distributed. Forecast future metric values from the seasonal and trend components while ignoring the residual part. Detect anomalous values based on outlier detection only on the residual part only. Further details can be found in the Time Series Decomposition chapter.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*Series*| `dynamic` |  *True* | An array of numeric values, typically the resulting output of make-series or make_list operators.|\n|*Seasonality*| `int` || Controls the seasonal analysis. The possible values are:<br/><br/>- `-1`: Autodetect seasonality using series_periods_detect. This is the default value.<br/>- Period: A positive integer specifying the expected period in number of bins. For example, if the series is in `1 - h` bins, a weekly period is 168 bins.<br/>- `0`: No seasonality, so skip extracting this component.|\n|*Trend*| `string` || Controls the trend analysis. The possible values are:<br/><br/>- `avg`: Define trend component as `average(x)`. This is the default.<br/>- `linefit`: Extract trend component using linear regression.<br/>- `none`: No trend, so skip extracting this component.<br/>\n|*Test_points*| `int` || A positive integer specifying the number of points at the end of the series to exclude from the learning, or regression, process. This parameter should be set for forecasting purposes. The default value is 0.|\n|*Seasonality_threshold*| `real` || The threshold for seasonality score when *Seasonality* is set to autodetect. The default score threshold is 0.6.<br/><br/>For more information, see series_periods_detect.|",
        "example": "",
        "sourceLength": 9164,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-decompose-function"
      }
    },
    {
      "name": "series_decompose_anomalies",
      "category": "Function",
      "documentation": {
        "title": "series_decompose_anomalies()",
        "description": "Anomaly Detection is based on series decomposition.\nFor more information, see series_decompose().\n\nThe function takes an expression containing a series (dynamic numerical array) as input, and extracts anomalous points with scores.",
        "syntax": "`series_decompose_anomalies (`*Series*`,` [ *Threshold*`,` *Seasonality*`,` *Trend*`,` *Test_points*`,` *AD_method*`,` *Seasonality_threshold* ]`)`",
        "returnInfo": "The function returns the following respective series:\n\n* `ad_flag`: A ternary series containing (+1, -1, 0) marking up/down/no anomaly respectively\n* `ad_score`: Anomaly score\n* `baseline`: The predicted value of the series, according to the decomposition\n\nThis function follows these steps:\n\n1. Calls series_decompose() with the respective parameters, to create the baseline and residuals series.\n1. Calculates ad_score series by applying series_outliers() with the chosen anomaly detection method on the residuals series.\n1. Calculates the ad_flag series by applying the threshold on the ad_score to mark up/down/no anomaly respectively.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*Series*| `dynamic` |  *True* | An array of numeric values, typically the resulting output of make-series or make_list operators.|\n|*Threshold*| `real` ||The anomaly threshold. The default is 1.5, k value, for detecting mild or stronger anomalies.|\n|*Seasonality*| `int` || Controls the seasonal analysis. The possible values are:<br/><br/>- `-1`: Autodetect seasonality using series_periods_detect. This is the default value.<br/>- Integer time period: A positive integer specifying the expected period in number of bins. For example, if the series is in `1h` bins, a weekly period is 168 bins.<br/>- `0`: No seasonality, so skip extracting this component.|\n|*Trend*| `string` || Controls the trend analysis. The possible values are:<br/><br/>- `avg`: Define trend component as `average(x)`. This is the default.<br/>- `linefit`: Extract trend component using linear regression.<br/>- `none`: No trend, so skip extracting this component.<br/>\n|*Test_points*| `int` || A positive integer specifying the number of points at the end of the series to exclude from the learning, or regression, process. This parameter should be set for forecasting purposes. The default value is 0.|\n|*AD_method*| `string` ||Controls the anomaly detection method on the residual time series, containing one of the following values:<br/><br/>- `ctukey`: Tukey’s fence test with custom 10th-90th percentile range. This is the default.<br/>- `tukey`: Tukey’s fence test with standard 25th-75th percentile range.<br/><br/>For more information on residual time series, see series_outliers.\n|*Seasonality_threshold*| `real` || The threshold for seasonality score when *Seasonality* is set to autodetect. The default score threshold is 0.6.<br/><br/>For more information, see series_periods_detect.|",
        "example": "",
        "sourceLength": 11753,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-decompose-anomalies-function"
      }
    },
    {
      "name": "series_decompose_forecast",
      "category": "Function",
      "documentation": {
        "title": "series_decompose_forecast()",
        "description": "Forecast based on series decomposition.\n\nTakes an expression containing a series (dynamic numerical array) as input, and predicts the values of the last trailing points. For more information, see series_decompose.",
        "syntax": "`series_decompose_forecast(`*Series*`,` *Points*`,` [ *Seasonality*`,` *Trend*`,` *Seasonality_threshold* ]`)`",
        "returnInfo": "A dynamic array with the forecasted series.\n\n> \n>\n> * The dynamic array of the original input series should include a number of *points* slots to be forecasted. The forecast is typically done by using make-series and specifying the end time in the range that includes the timeframe to forecast.\n> * Either seasonality or trend should be enabled, otherwise the function is redundant, and just returns a series filled with zeroes.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*Series*| `dynamic` |  *True* | An array of numeric values, typically the resulting output of make-series or make_list operators.|\n|*Points*| `int` | *True*| Specifies the number of points at the end of the series to predict, or forecast. These points are excluded from the learning, or regression, process.|\n|*Seasonality*| `int` || Controls the seasonal analysis. The possible values are:<br/><br/>- `-1`: Autodetect seasonality using series_periods_detect. This is the default value.<br/>- Period: A positive integer specifying the expected period in number of bins. For example, if the series is in `1 - h` bins, a weekly period is 168 bins.<br/>- `0`: No seasonality, so skip extracting this component.|\n|*Trend*| `string` || Controls the trend analysis. The possible values are:<br/><br/>- `avg`: Define trend component as `average(x)`. This is the default.<br/>- `linefit`: Extract trend component using linear regression.<br/>- `none`: No trend, so skip extracting this component.<br/>\n|*Seasonality_threshold*| `real` || The threshold for seasonality score when *Seasonality* is set to autodetect. The default score threshold is 0.6.<br/><br/>For more information, see series_periods_detect.|",
        "example": "let ts=range t from 1 to 24*7*4 step 1 // generate 4 weeks of hourly data\n| extend Timestamp = datetime(2018-03-01 05:00) + 1h * t \n| extend y = 2*rand() + iff((t/24)%7>=5, 5.0, 15.0) - (((t%24)/10)*((t%24)/10)) + t/72.0 // generate a series with weekly seasonality and ongoing trend\n| extend y=iff(t==150 or t==200 or t==780, y-8.0, y) // add some dip outliers\n| extend y=iff(t==300 or t==400 or t==600, y+8.0, y) // add some spike outliers\n| make-series y=max(y) on Timestamp from datetime(2018-03-01 05:00) to datetime(2018-03-01 05:00)+24*7*5h step 1h; // create a time series of 5 weeks (last week is empty)\nts \n| extend y_forcasted = series_decompose_forecast(y, 24*7)  // forecast a week forward\n| render timechart",
        "sourceLength": 4968,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-decompose-forecast-function"
      }
    },
    {
      "name": "series_divide",
      "category": "Function",
      "documentation": {
        "title": "series_divide()",
        "description": "Calculates the element-wise division of two numeric series inputs.",
        "syntax": "`series_divide(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of calculated element-wise divide operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.\n\nNote: the result series is of double type, even if the inputs are integers. Division by zero follows the double division by zero (e.g. 2/0 yields double(+inf)).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1, series2* | `dynamic` |  *True* | The numeric arrays over which to calculate the element-wise division. The first array is to be divided by the second. |",
        "example": "range x from 1 to 3 step 1\n| extend y = x * 2\n| extend z = y * 2\n| project s1 = pack_array(x,y,z), s2 = pack_array(z, y, x)\n| extend s1_divide_s2 = series_divide(s1, s2)",
        "sourceLength": 2143,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-divide-function"
      }
    },
    {
      "name": "series_dot_product",
      "category": "Function",
      "documentation": {
        "title": "series_dot_product()",
        "description": "Calculates the dot product of two numeric series.\n\nThe function `series_dot_product()` takes two numeric series as input, and calculates their dot product.",
        "syntax": "`series_dot_product(`*series*`, `*numeric*`)`\n\n`series_dot_product(`*numeric*`, `*series*`)`\n\n> \n> The alternate syntax shows that one of the two function arguments can be a numerical scalar.\n>\n> This numerical scalar will be broadcasted to a vector whose length equals the length of the corresponding numeric series.\n>\n> For example, `series_dot_product([1, 2, 3], 10)` will be treated as `series_dot_product([1, 2, 3], [10, 10, 10])`.",
        "returnInfo": "Returns a value of type `real` whose value is the sum over the product of each element of *series1* with the corresponding element of *series2*.\nIn case both series length isn't equal, the longer series will be truncated to the length of the shorter one.\nAny non-numeric element of the input series will be ignored.\n\n> \n> If one or both input arrays are empty, the result will be `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1, series2* | `dynamic` |   *True* | Input arrays with numeric data, to be element-wise multiplied and then summed into a value of type `real`.",
        "example": "range x from 1 to 3 step 1 \n| extend y = x * 2\n| extend z = y * 2\n| project s1 = pack_array(x,y,z), s2 = pack_array(z, y, x)\n| extend s1_dot_product_s2 = series_dot_product(s1, s2)\n\nrange x from 1 to 3 step 1 \n| extend y = x * 2\n| extend z = y * 2\n| project s1 = pack_array(x,y,z), s2 = x\n| extend s1_dot_product_s2 = series_dot_product(s1, s2)",
        "sourceLength": 3395,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-dot-product-function"
      }
    },
    {
      "name": "series_equals",
      "category": "Function",
      "documentation": {
        "title": "series_equals()",
        "description": "Calculates the element-wise equals (`==`) logic operation of two numeric series inputs.",
        "syntax": "`series_equals (`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of booleans containing the calculated element-wise equal logic operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1, series2* | `dynamic` |  *True* | The numeric arrays to be element-wise compared. |",
        "example": "print s1 = dynamic([1,2,4]), s2 = dynamic([4,2,1])\n| extend s1_equals_s2 = series_equals(s1, s2)",
        "sourceLength": 1949,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-equals-function"
      }
    },
    {
      "name": "series_exp",
      "category": "Function",
      "documentation": {
        "title": "series_exp()",
        "description": "Calculates the element-wise base-e exponential function (e^x) of the numeric series input.",
        "syntax": "`series_exp(`*series*`)`",
        "returnInfo": "Dynamic array of calculated exponential function. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values whose elements are applied as the exponent in the exponential function. |",
        "example": "print s = dynamic([1,2,3])\n| extend s_exp = series_exp(s)",
        "sourceLength": 1629,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-exp-function"
      }
    },
    {
      "name": "series_fft",
      "category": "Function",
      "documentation": {
        "title": "series_fft()",
        "description": "Applies the Fast Fourier Transform (FFT) on a series.  \n\nThe series_fft() function takes a series of complex numbers in the time/spatial domain and transforms it to the frequency domain using the Fast Fourier Transform. The transformed complex series represents the magnitude and phase of the frequencies appearing in the original series. Use the complementary function series_ifft to transform from the frequency domain back to the time/spatial domain.",
        "syntax": "`series_fft(`*x_real* [`,` *x_imaginary*]`)`",
        "returnInfo": "The function returns the complex inverse fft in two series. The first series for the real component and the second one for the imaginary component.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x_real* | `dynamic` |  *True* | A numeric array representing the real component of the series to transform.|\n| *x_imaginary* | `dynamic` | | A similar array representing the imaginary component of the series. This parameter should only be specified if the input series contains complex numbers.|",
        "example": "let sinewave=(x:double, period:double, gain:double=1.0, phase:double=0.0)\n    {\n        gain*sin(2*pi()/period*(x+phase))\n    }\n    ;\n    let n=128;      //  signal length\n    range x from 0 to n-1 step 1 | extend yr=sinewave(x, 8), yi=sinewave(x, 32)\n    | summarize x=make_list(x), y_real=make_list(yr), y_imag=make_list(yi)\n    | extend (fft_y_real, fft_y_imag) = series_fft(y_real, y_imag)\n    | render linechart with(ysplit=panels)\n\n    let sinewave=(x:double, period:double, gain:double=1.0, phase:double=0.0)\n    {\n        gain*sin(2*pi()/period*(x+phase))\n    }\n    ;\n    let n=128;      //  signal length\n    range x from 0 to n-1 step 1 | extend yr=sinewave(x, 8), yi=sinewave(x, 32)\n    | summarize x=make_list(x), y_real=make_list(yr), y_imag=make_list(yi)\n    | extend (fft_y_real, fft_y_imag) = series_fft(y_real, y_imag)\n    | extend (y_real2, y_image2) = series_ifft(fft_y_real, fft_y_imag)\n    | project-away fft_y_real, fft_y_imag   //  too many series for linechart with panels\n    | render linechart with(ysplit=panels)",
        "sourceLength": 4633,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fft-function"
      }
    },
    {
      "name": "series_fill_backward",
      "category": "Function",
      "documentation": {
        "title": "series_fill_backward()",
        "description": "Performs a backward fill interpolation of missing values in a series.\n\nAn expression containing dynamic numerical array is the input. The function replaces all instances of missing_value_placeholder with the nearest value from its right side (other than missing_value_placeholder), and returns the resulting array. The rightmost instances of missing_value_placeholder are preserved.",
        "syntax": "`series_fill_backward(`*series*`[,`*missing_value_placeholder*`])`",
        "returnInfo": "*series* with all instances of *missing_value_placeholder* filled backwards.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *missing_value_placeholder* | scalar | | Specifies a placeholder for missing values. The default value is `double(`*null*`)`. The value can be of any type that converts to actual element types. `double`(*null*), `long`(*null*), and `int`(*null*) have the same meaning.|\n\n> \n>\n> * If you create *series* using the make-series operator, specify *null* as the default value to use interpolation functions like `series_fill_backward()` afterwards. See explanation.\n> * If *missing_value_placeholder* is `double`(*null*), or omitted, then a result can contain *null* values. To fill these *null* values, use other interpolation functions. Only series_outliers() supports *null* values in input arrays.\n> * `series_fill_backward()` preserves the original type of the array elements.",
        "example": "let data = datatable(arr: dynamic)\n    [\n    dynamic([111, null, 36, 41, null, null, 16, 61, 33, null, null])   \n];\ndata \n| project\n    arr, \n    fill_backward = series_fill_backward(arr)",
        "sourceLength": 3595,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fill-backward-function"
      }
    },
    {
      "name": "series_fill_const",
      "category": "Function",
      "documentation": {
        "title": "series_fill_const()",
        "description": "Replaces missing values in a series with a specified constant value.\n\nTakes an expression containing dynamic numerical array as input, replaces all instances of missing_value_placeholder with the specified constant_value and returns the resulting array.",
        "syntax": "`series_fill_const(`*series*`,` *constant_value*`,` [ *missing_value_placeholder* ]`)`",
        "returnInfo": "*series* with all instances of *missing_value_placeholder* replaced with *constant_value*.\n\n> \n>\n> * If you create *series* using the make-series operator, specify *null* as the default value to use interpolation functions like `series_fill_const()` afterwards. See explanation.\n> * If *missing_value_placeholder* is `double`(*null*), or omitted, then a result contains *null* values. To fill these *null* values, use other interpolation functions. Only series_outliers() supports *null* values in input arrays.\n> * `series_fill_const()` preserves the original type of the array elements.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *constant_value* | scalar |  *True* | The value used to replace the missing values.|\n| *missing_value_placeholder* | scalar | | Specifies a placeholder for missing values. The default value is `double(`*null*`)`. The value can be of any type that is converted to actual element types. `double`(*null*), `long`(*null*), and `int`(*null*) have the same meaning.|",
        "example": "let data = datatable(arr: dynamic)\n    [\n    dynamic([111, null, 36, 41, 23, null, 16, 61, 33, null, null])   \n];\ndata \n| project\n    arr, \n    fill_const1 = series_fill_const(arr, 0.0),\n    fill_const2 = series_fill_const(arr, -1)",
        "sourceLength": 3650,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fill-const-function"
      }
    },
    {
      "name": "series_fill_forward",
      "category": "Function",
      "documentation": {
        "title": "series_fill_forward()",
        "description": "Performs a forward fill interpolation of missing values in a series.\n\nAn expression containing dynamic numerical array is the input. The function replaces all instances of missing_value_placeholder with the nearest value from its left side other than missing_value_placeholder, and returns the resulting array. The leftmost instances of missing_value_placeholder are preserved.",
        "syntax": "`series_fill_forward(`*series*`,` [ *missing_value_placeholder* ]`)`",
        "returnInfo": "*series* with all instances of *missing_value_placeholder* filled forwards.\n\n> \n>\n> * If you create *series* using the make-series operator, specify *null* as the default value to use interpolation functions like `series_fill_forward()` afterwards. See explanation.\n> * If *missing_value_placeholder* is `double`(*null*), or omitted, then a result can contain *null* values. To fill these *null* values, use other interpolation functions. Only series_outliers() supports *null* values in input arrays.\n> * `series_fill_forward()` preserves the original type of the array elements.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *missing_value_placeholder* | scalar | | Specifies a placeholder for missing values. The default value is `double(`*null*`)`. The value can be of any type that can convert to actual element types. `double`(*null*), `long`(*null*), and `int`(*null*) have the same meaning.|",
        "example": "let data = datatable(arr: dynamic)\n    [\n    dynamic([null, null, 36, 41, null, null, 16, 61, 33, null, null])   \n];\ndata \n| project\n    arr, \n    fill_forward = series_fill_forward(arr)",
        "sourceLength": 3612,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fill-forward-function"
      }
    },
    {
      "name": "series_fill_linear",
      "category": "Function",
      "documentation": {
        "title": "series_fill_linear()",
        "description": "Linearly interpolates missing values in a series.\n\nTakes an expression containing dynamic numerical array as input, does linear interpolation for all instances of missing_value_placeholder, and returns the resulting array. If the beginning and end of the array contain missing_value_placeholder, then it's replaced with the nearest value other than missing_value_placeholder. This feature can be turned off. If the whole array consists of the missing_value_placeholder, the array is filled with constant_value, or 0 if not specified.",
        "syntax": "`series_fill_linear(`*series*`,` [ *missing_value_placeholder* [`,`*fill_edges* [`,` *constant_value* ]]]`)`",
        "returnInfo": "A series linear interpolation of *series* using the specified parameters. If *series* contains only `int` or `long` elements, then the linear interpolation returns rounded interpolated values rather than exact ones.\n\n> \n>\n> * If you create *series* using the make-series operator, specify *null* as the default value to use interpolation functions like `series_fill_linear()` afterwards. See explanation.\n> * If *missing_value_placeholder* is `double`(*null*), or omitted, then a result can contain *null* values. To fill these *null* values, use other interpolation functions. Only series_outliers() supports *null* values in input arrays.\n> * `series_fill_linear()` preserves the original type of the array elements.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *missing_value_placeholder* | scalar | | Specifies a placeholder for missing values. The default value is `double(`*null*`)`. The value can be of any type that can convert to actual element types. `double`(*null*), `long`(*null*), and `int`(*null*) have the same meaning.|\n| *fill_edges* | `bool` | | Indicates whether *missing_value_placeholder* at the start and end of the array should be replaced with nearest value. `true` by default. If set to `false`, then *missing_value_placeholder* at the start and end of the array is preserved.|\n| *constant_value* | scalar | | Relevant only for arrays that entirely consist of *null* values. This parameter specifies a constant value with which to fill the series. Default value is 0. Setting this parameter it to `double(`*null*`)` preserves the *null* values.|",
        "example": "let data = datatable(arr: dynamic)\n    [\n    dynamic([null, 111.0, null, 36.0, 41.0, null, null, 16.0, 61.0, 33.0, null, null]), // Array of double    \n    dynamic([null, 111, null, 36, 41, null, null, 16, 61, 33, null, null]), // Similar array of int\n    dynamic([null, null, null, null])                                                   // Array with missing values only\n];\ndata\n| project\n    arr, \n    without_args = series_fill_linear(arr),\n    with_edges = series_fill_linear(arr, double(null), true),\n    wo_edges = series_fill_linear(arr, double(null), false),\n    with_const = series_fill_linear(arr, double(null), true, 3.14159)",
        "sourceLength": 5667,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fill-linear-function"
      }
    },
    {
      "name": "series_fir",
      "category": "Function",
      "documentation": {
        "title": "series_fir()",
        "description": "Applies a Finite Impulse Response (FIR) filter on a series.  \n\nThe function takes an expression containing a dynamic numerical array as input and applies a Finite Impulse Response filter. By specifying the `filter` coefficients, it can be used for calculating a moving average, smoothing, change-detection, and many more use cases. The function takes the column containing the dynamic array and a static dynamic array of the filter's coefficients as input, and applies the filter on the column. It outputs a new dynamic array column, containing the filtered output.",
        "syntax": "`series_fir(`*series*`,` *filter* [`,` *normalize*[`,` *center*]]`)`",
        "returnInfo": "A new dynamic array column containing the filtered output.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *filter* | `dynamic` |  *True* | An array of numeric values containing the coefficients of the filter.|\n| *normalize* | `bool` | | Indicates whether the filter should be normalized. That is, divided by the sum of the coefficients. If filter contains negative values, then *normalize* must be specified as `false`, otherwise result will be `null`. If not specified, then a default value of `true` is assumed, depending on the presence of negative values in the *filter*. If *filter* contains at least one negative value, then *normalize* is assumed to be `false`.|\n| *center* | `bool` | | Indicates whether the filter is applied symmetrically on a time window before and after the current point, or on a time window from the current point backwards. By default, center is `false`, which fits the scenario of streaming data so that we can only apply the filter on the current and older points. However, for ad-hoc processing you can set it to `true`, keeping it synchronized with the time series. See examples below. This parameter controls the filter’s group delay.|\n\n> \n> Normalization is a convenient way to make sure that the sum of the coefficients is 1. When *normalized* is `true`, the filter doesn't amplify or attenuate the series. For example, the moving average of four bins could be specified by *filter*=[1,1,1,1] and *normalized*=`true`, which is simpler than typing [0.25,0.25.0.25,0.25].",
        "example": "range t from bin(now(), 1h) - 23h to bin(now(), 1h) step 1h\n| summarize t=make_list(t)\n| project\n    id='TS',\n    val=dynamic([0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 20, 40, 100, 40, 20, 10, 0, 0, 0, 0, 0, 0, 0, 0]),\n    t\n| extend\n    5h_MovingAvg=series_fir(val, dynamic([1, 1, 1, 1, 1])),\n    5h_MovingAvg_centered=series_fir(val, dynamic([1, 1, 1, 1, 1]), true, true)\n| render timechart\n\nrange t from bin(now(), 1h) - 11h to bin(now(), 1h) step 1h\n| summarize t=make_list(t)\n| project id='TS', t, value=dynamic([0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3])\n| extend diff=series_fir(value, dynamic([1, -1]), false, false)\n| render timechart",
        "sourceLength": 5475,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fir-function"
      }
    },
    {
      "name": "series_fit_2lines",
      "category": "Function",
      "documentation": {
        "title": "series_fit_2lines()",
        "description": "Applies a two segmented linear regression on a series, returning multiple columns.  \n\nTakes an expression containing dynamic numerical array as input and applies a two segmented linear regression in order to identify and quantify a trend change in a series. The function iterates on the series indexes. In each iteration, the function splits the series to two parts, fits a separate line (using series_fit_line()) to each part, and calculates the total r-square. The best split is the one that maximized r-square; the function returns its parameters:\n\n|Parameter  |Description  |\n|:---------|:---------|\n|`rsquare`     | R-square is standard measure of the fit quality. It's a number in the range [0-1], where 1 - is the best possible fit, and 0 means the data is unordered and don't fit any line.        |\n|`split_idx`     |   The index of breaking point to two segments (zero-based).      |\n|`variance`     | Variance of the input data.        |\n|`rvariance`     | Residual variance, which is the variance between the input data values the approximated ones (by the two line segments).        |\n|`line_fit`     | Numerical array holding a series of values of the best fitted line. The series length is equal to the length of the input array. It's mainly used for charting.        |\n|`right_rsquare`     | R-square of the line on the right side of the split, see series_fit_line().        |\n|`right_slope`     | Slope of the right approximated line (of the form y=ax+b).         |\n|`right_interception`     |  Interception of the approximated left line (b from y=ax+b).       |\n|`right_variance`    | Variance of the input data on the right side of the split.        |\n|`right_rvariance`     | Residual variance of the input data on the right side of the split.        |\n|`left_rsquare`     | R-square of the line on the left side of the split, see series_fit_line().        |\n|`left_slope`    | Slope of the left approximated line (of the form y=ax+b).        |\n|`left_interception`     |   Interception of the approximated left line (of the form y=ax+b).      |\n|`left_variance`     | Variance of the input data on the left side of the split.        |\n|`left_rvariance`     | Residual variance of the input data on the left side of the split.        |\n\n> \n> This function returns multiple columns an so cannot be used as an argument for another function.",
        "syntax": "project `series_fit_2lines(`*series*`)`\n\n* Will return all mentioned above columns with the following names: series_fit_2lines_x_rsquare, series_fit_2lines_x_split_idx etc.\n\nproject (rs, si, v)=`series_fit_2lines(`*series*`)`\n\n* Will return the following columns: rs (r-square), si (split index), v (variance) and the rest will look like series_fit_2lines_x_rvariance, series_fit_2lines_x_line_fit and etc.\n\nextend (rs, si, v)=`series_fit_2lines(`*series*`)`\n\n* Will return only: rs (r-square), si (split index) and v (variance).",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n\n> \n> The most convenient way of using this function is applying it to the results of make-series operator.",
        "example": "print\n    id=' ',\n    x=range(bin(now(), 1h) - 11h, bin(now(), 1h), 1h),\n    y=dynamic([1, 2.2, 2.5, 4.7, 5.0, 12, 10.3, 10.3, 9, 8.3, 6.2])\n| extend\n    (Slope, Interception, RSquare, Variance, RVariance, LineFit)=series_fit_line(y),\n    (RSquare2, SplitIdx, Variance2, RVariance2, LineFit2)=series_fit_2lines(y)\n| project id, x, y, LineFit, LineFit2\n| render timechart",
        "sourceLength": 5151,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fit-2lines-function"
      }
    },
    {
      "name": "series_fit_2lines_dynamic",
      "category": "Function",
      "documentation": {
        "title": "series_fit_2lines_dynamic()",
        "description": "Applies two segments linear regression on a series, returning a dynamic object.  \n\nTakes an expression containing dynamic numerical array as input and applies two segments linear regression in order to identify and quantify trend changes in a series. The function iterates on the series indexes. In each iteration, it splits the series to two parts, and fits a separate line using series_fit_line() or series_fit_line_dynamic(). The function fits the lines to each of the two parts, and calculates the total R-squared value. The best split is the one that maximizes R-squared. The function returns its parameters in dynamic value with the following content:\n\n* `rsquare`: R-squared is a standard measure of the fit quality. It's a number in the range of [0-1], where 1 is the best possible fit, and 0 means the data is unordered and don't fit any line.\n* `split_idx`: the index of breaking point to two segments (zero-based).\n* `variance`: variance of the input data.\n* `rvariance`: residual variance that is the variance between the input data values the approximated ones (by the two line segments).\n* `line_fit`: numerical array holding a series of values of the best fitted line. The series length is equal to the length of the input array. It's used for charting.\n* `right.rsquare`: r-square of the line on the right side of the split, see series_fit_line() or series_fit_line_dynamic().\n* `right.slope`: slope of the right approximated line (of the form y=ax+b).\n* `right.interception`: interception of the approximated left line (b from y=ax+b).\n* `right.variance`: variance of the input data on the right side of the split.\n* `right.rvariance`: residual variance of the input data on the right side of the split.\n* `left.rsquare`: r-square of the line on the left side of the split, see [series_fit_line()].(series-fit-line-function.md) or series_fit_line_dynamic().\n* `left.slope`: slope of the left approximated line (of the form y=ax+b).\n* `left.interception`: interception of the approximated left line (of the form y=ax+b).\n* `left.variance`: variance of the input data on the left side of the split.\n* `left.rvariance`: residual variance of the input data on the left side of the split.\n\nThis operator is similar to series_fit_2lines. Unlike `series-fit-2lines`, it returns a dynamic bag.",
        "syntax": "`series_fit_2lines_dynamic(`*series*`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n\n> \n> The most convenient way of using this function is applying it to the results of the make-series operator.",
        "example": "print\n    id=' ',\n    x=range(bin(now(), 1h) - 11h, bin(now(), 1h), 1h),\n    y=dynamic([1, 2.2, 2.5, 4.7, 5.0, 12, 10.3, 10.3, 9, 8.3, 6.2])\n| extend\n    LineFit=series_fit_line_dynamic(y).line_fit,\n    LineFit2=series_fit_2lines_dynamic(y).line_fit\n| project id, x, y, LineFit, LineFit2\n| render timechart",
        "sourceLength": 4637,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fit-2lines-dynamic-function"
      }
    },
    {
      "name": "series_fit_line",
      "category": "Function",
      "documentation": {
        "title": "series_fit_line()",
        "description": "Applies linear regression on a series, returning multiple columns.  \n\nTakes an expression containing dynamic numerical array as input and does linear regression to find the line that best fits it. This function should be used on time series arrays, fitting the output of make-series operator. The function generates the following columns:\n\n* `rsquare`: r-square is a standard measure of the fit quality. The value's a number in the range [0-1], where 1 - is the best possible fit, and 0 means the data is unordered and doesn't fit any line.\n* `slope`: Slope of the approximated line (\"a\" from y=ax+b).\n* `variance`: Variance of the input data.\n* `rvariance`: Residual variance that is the variance between the input data values the approximated ones.\n* `interception`: Interception of the approximated line (\"b\" from y=ax+b).\n* `line_fit`: Numerical array holding a series of values of the best fitted line. The series length is equal to the length of the input array. The value's used for charting.",
        "syntax": "`series_fit_line(`*series*`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n\n> \n> The most convenient way of using this function is to apply it to the results of make-series operator.",
        "example": "print\n    id=' ',\n    x=range(bin(now(), 1h) - 11h, bin(now(), 1h), 1h),\n    y=dynamic([2, 5, 6, 8, 11, 15, 17, 18, 25, 26, 30, 30])\n| extend (RSquare, Slope, Variance, RVariance, Interception, LineFit)=series_fit_line(y)\n| render timechart",
        "sourceLength": 3438,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fit-line-function"
      }
    },
    {
      "name": "series_fit_line_dynamic",
      "category": "Function",
      "documentation": {
        "title": "series_fit_line_dynamic()",
        "description": "Applies linear regression on a series, returning dynamic object.  \n\nTakes an expression containing dynamic numerical array as input, and does linear regression to find the line that best fits it. This function should be used on time series arrays, fitting the output of make-series operator. It generates a dynamic value with the following content:\n\n* `rsquare`: r-square is a standard measure of the fit quality. It's a number in the range [0-1], where 1 is the best possible fit, and 0 means the data is unordered and doesn't fit any line\n* `slope`: Slope of the approximated line (the *a*-value from *y=ax+b*)\n* `variance`: Variance of the input data\n* `rvariance`: Residual variance that is the variance between the input data values and the approximated ones.\n* `interception`: Interception of the approximated line (the *b*-value from *y=ax+b*)\n* `line_fit`: Numerical array containing a series of values of the best fit line. The series length is equal to the length of the input array. It's used mainly for charting.\n\nThis operator is similar to series_fit_line, but unlike `series-fit-line` it returns a dynamic bag.",
        "syntax": "`series_fit_line_dynamic(`*series*`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n\n> \n> The most convenient way of using this function is by applying it to the results of make-series operator.",
        "example": "print\n    id=' ',\n    x=range(bin(now(), 1h) - 11h, bin(now(), 1h), 1h),\n    y=dynamic([2, 5, 6, 8, 11, 15, 17, 18, 25, 26, 30, 30])\n| extend fit=series_fit_line_dynamic(y)\n| extend\n    RSquare=fit.rsquare,\n    Slope=fit.slope,\n    Variance=fit.variance,\n    RVariance=fit.rvariance,\n    Interception=fit.interception,\n    LineFit=fit.line_fit\n| render timechart",
        "sourceLength": 3804,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fit-line-dynamic-function"
      }
    },
    {
      "name": "series_fit_poly",
      "category": "Function",
      "documentation": {
        "title": "series_fit_poly()",
        "description": "Applies a polynomial regression from an independent variable (x_series) to a dependent variable (y_series). This function takes a table containing multiple series (dynamic numerical arrays) and generates the best fit high-order polynomial for each series using polynomial regression.\n\n> \n>\n> * For linear regression of an evenly spaced series, as created by make-series operator, use the simpler function series_fit_line(). See Example 2.\n> * If *x_series* is supplied, and the regression is done for a high degree, consider normalizing to the [0-1] range. See Example 3.\n> * If *x_series* is of datetime type, it must be converted to double and normalized. See Example 3.\n> * For reference implementation of polynomial regression using inline Python, see series_fit_poly_fl().",
        "syntax": "`T | extend  series_fit_poly(`*y_series* [`,` *x_series*`,` *degree* ]`)`",
        "returnInfo": "The `series_fit_poly()` function returns the following columns:\n\n* `rsquare`: r-square is a standard measure of the fit quality. The value's a number in the range [0-1], where 1 - is the best possible fit, and 0 means the data is unordered and doesn't fit any line.\n* `coefficients`:  Numerical array holding the coefficients of the best fitted polynomial with the given degree, ordered from the highest power coefficient to the lowest.\n* `variance`: Variance of the dependent variable (y_series).\n* `rvariance`: Residual variance that is the variance between the input data values the approximated ones.\n* `poly_fit`: Numerical array holding a series of values of the best fitted polynomial. The series length is equal to the length of the dependent variable (y_series). The value's used for charting.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *y_series* | `dynamic` |  *True* | An array of numeric values containing the dependent variable. |\n| *x_series* | `dynamic` | | An array of numeric values containing the independent variable. Required only for unevenly spaced series. If not specified, it's set to a default value of [1, 2, ..., length(*y_series*)].|\n| *degree* | | | The required order of the polynomial to fit. For example, 1 for linear regression, 2 for quadratic regression, and so on. Defaults to 1, which indicates linear regression.|",
        "example": "",
        "sourceLength": 7262,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-fit-poly-function"
      }
    },
    {
      "name": "series_floor",
      "category": "Function",
      "documentation": {
        "title": "series_floor()",
        "description": "Calculates the element-wise floor function of the numeric series input.",
        "syntax": "`series_floor(`*series*`)`",
        "returnInfo": "Dynamic array of the calculated floor function. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values on which the floor function is applied.|",
        "example": "print s = dynamic([-1.5,1,2.5])\n| extend s_floor = series_floor(s)",
        "sourceLength": 1551,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-floor-function"
      }
    },
    {
      "name": "series_greater",
      "category": "Function",
      "documentation": {
        "title": "series_greater()",
        "description": "Calculates the element-wise greater (`>`) logic operation of two numeric series inputs.",
        "syntax": "`series_greater(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of booleans containing the calculated element-wise greater logic operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values to be element-wise compared.|",
        "example": "print s1 = dynamic([1,2,4]), s2 = dynamic([4,2,1])\n| extend s1_greater_s2 = series_greater(s1, s2)",
        "sourceLength": 1972,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-greater-function"
      }
    },
    {
      "name": "series_greater_equals",
      "category": "Function",
      "documentation": {
        "title": "series_greater_equals()",
        "description": "Calculates the element-wise greater or equals (`>=`) logic operation of two numeric series inputs.",
        "syntax": "`series_greater_equals(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of booleans containing the calculated element-wise greater or equal logic operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values to be element-wise compared.|",
        "example": "print s1 = dynamic([1,2,4]), s2 = dynamic([4,2,1])\n| extend s1_greater_equals_s2 = series_greater_equals(s1, s2)",
        "sourceLength": 2059,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-greater-equals-function"
      }
    },
    {
      "name": "series_ifft",
      "category": "Function",
      "documentation": {
        "title": "series_ifft()",
        "description": "Applies the Inverse Fast Fourier Transform (IFFT) on a series.  \n\nThe series_ifft() function takes a series of complex numbers in the frequency domain and transforms it back to the time/spatial domain using the Fast Fourier Transform. This function is the complementary function of series_fft. Commonly the original series is transformed to the frequency domain for spectral processing and then back to the time/spatial domain.",
        "syntax": "`series_ifft(`*fft_real* [`,` *fft_imaginary*]`)`",
        "returnInfo": "The function returns the complex inverse fft in two series. The first series for the real component and the second one for the imaginary component.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *fft_real* | `dynamic` |  *True* | An array of numeric values representing the real component of the series to transform.|\n| *fft_imaginary* | `dynamic` | | An array of numeric values representing the imaginary component of the series. This parameter should be specified only if the input series contains complex numbers.|",
        "example": "",
        "sourceLength": 1858,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-ifft-function"
      }
    },
    {
      "name": "series_iir",
      "category": "Function",
      "documentation": {
        "title": "series_iir()",
        "description": "Applies an Infinite Impulse Response filter on a series.  \n\nThe function takes an expression containing dynamic numerical array as input, and applies an Infinite Impulse Response filter. By specifying the filter coefficients, you can use the function to:\n\n* calculate the cumulative sum of the series\n* apply smoothing operations\n* apply various high-pass, band-pass, and low-pass filters\n\nThe function takes as input the column containing the dynamic array and two static dynamic arrays of the filter's *denominators* and *numerators* coefficients, and applies the filter on the column. It outputs a new dynamic array column, containing the filtered output.",
        "syntax": "`series_iir(`*series*`,` *numerators* `,` *denominators*`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values, typically the resulting output of make-series or make_list operators.|\n| *numerators* | `dynamic` |  *True* | An array of numeric values, containing the numerator coefficients of the filter.|\n| *denominators* | `dynamic` |  *True* | An array of numeric values, containing the denominator coefficients of the filter.|\n\n> \n> The first element of `a` (that is, `a[0]`) mustn't be zero, to avoid division by 0. See the following formula.\n\n* Consider an input array X, and coefficients arrays a and b of lengths n_a and n_b respectively. The transfer function of the filter that will generate the output array Y, is defined by:\n\n<div align=\"center\">\nY<sub>i</sub> = a<sub>0</sub><sup>-1</sup>(b<sub>0</sub>X<sub>i</sub>\n + b<sub>1</sub>X<sub>i-1</sub> + ... + b<sub>n<sub>b</sub>-1</sub>X<sub>i-n<sub>b</sub>-1</sub>\n - a<sub>1</sub>Y<sub>i-1</sub>-a<sub>2</sub>Y<sub>i-2</sub> - ... - a<sub>n<sub>a</sub>-1</sub>Y<sub>i-n<sub>a</sub>-1</sub>)\n</div>",
        "example": "let x = range(1.0, 10, 1);\nprint x=x, y = series_iir(x, dynamic([1]), dynamic([1,-1]))\n| mv-expand x, y\n\nlet vector_sum=(x: dynamic) {\n    let y=array_length(x) - 1;\n    todouble(series_iir(x, dynamic([1]), dynamic([1, -1]))[y])\n};\nprint d=dynamic([0, 1, 2, 3, 4])\n| extend dd=vector_sum(d)",
        "sourceLength": 4230,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-iir-function"
      }
    },
    {
      "name": "series_less",
      "category": "Function",
      "documentation": {
        "title": "series_less()",
        "description": "Calculates the element-wise less (`<`) logic operation of two numeric series inputs.",
        "syntax": "`series_less(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of booleans containing the calculated element-wise less logic operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values to be element-wise compared.|",
        "example": "print s1 = dynamic([1,2,4]), s2 = dynamic([4,2,1])\n| extend s1_less_s2 = series_less(s1, s2)",
        "sourceLength": 1938,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-less-function"
      }
    },
    {
      "name": "series_less_equals",
      "category": "Function",
      "documentation": {
        "title": "series_less_equals()",
        "description": "Calculates the element-wise less or equal (`<=`) logic operation of two numeric series inputs.",
        "syntax": "`series_less_equals(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of booleans containing the calculated element-wise less or equal logic operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values to be element-wise compared.|",
        "example": "print s1 = dynamic([1,2,4]), s2 = dynamic([4,2,1])\n| extend s1_less_equals_s2 = series_less_equals(s1, s2)",
        "sourceLength": 2023,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-less-equals-function"
      }
    },
    {
      "name": "series_magnitude",
      "category": "Function",
      "documentation": {
        "title": "series_magnitude()",
        "description": "Calculates the magnitude#Euclidean_vector_space) of series elements. This is equivalent to the square root of the dot product of the series with itself.",
        "syntax": "`series_magnitude(`*series*`)`",
        "returnInfo": "Returns a double type value representing the magnitude of the series.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | Array of numeric values. |",
        "example": "print arr=dynamic([1,2,3,4]) \n| extend series_magnitude=series_magnitude(arr)",
        "sourceLength": 1756,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-magnitude-function"
      }
    },
    {
      "name": "series_multiply",
      "category": "Function",
      "documentation": {
        "title": "series_multiply()",
        "description": "Calculates the element-wise multiplication of two numeric series inputs.",
        "syntax": "`series_multiply(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of calculated element-wise multiplication operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values to be element-wise multiplied.|",
        "example": "range x from 1 to 3 step 1\n| extend y = x * 2\n| extend z = y * 2\n| project s1 = pack_array(x,y,z), s2 = pack_array(z, y, x)\n| extend s1_multiply_s2 = series_multiply(s1, s2)",
        "sourceLength": 1932,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-multiply-function"
      }
    },
    {
      "name": "series_not_equals",
      "category": "Function",
      "documentation": {
        "title": "series_not_equals()",
        "description": "Calculates the element-wise not equals (`!=`) logic operation of two numeric series inputs.",
        "syntax": "`series_not_equals(`*series1*`,` *series2*`)`",
        "returnInfo": "Dynamic array of booleans containing the calculated element-wise not equal logic operation between the two inputs. Any non-numeric element or non-existing element (arrays of different sizes) yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values to be element-wise compared.|",
        "example": "print s1 = dynamic([1,2,4]), s2 = dynamic([4,2,1])\n| extend s1_not_equals_s2 = series_not_equals(s1, s2)",
        "sourceLength": 2006,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-not-equals-function"
      }
    },
    {
      "name": "series_outliers",
      "category": "Function",
      "documentation": {
        "title": "series_outliers()",
        "description": "Scores anomaly points in a series.\n\nThe function takes an expression with a dynamic numerical array as input, and generates a dynamic numeric array of the same length. Each value of the array indicates a score of a possible anomaly, using \"Tukey's test\". A value greater than 1.5 in the same element of the input indicates a rise anomaly. A value less than -1.5 indicates a decline anomaly.",
        "syntax": "`series_outliers(`*series* [`,` *kind* ] [`,` *ignore_val* ] [`,` *min_percentile* ] [`,` *max_percentile* ]`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *kind* | `string` | | The algorithm to use for outlier detection. The supported options are `\"tukey\"`, which is traditional \"Tukey\", and  `\"ctukey\"`, which is custom \"Tukey\". The default is `\"ctukey\"`.|\n| *ignore_val* | int, long, or real | | A numeric value indicating the missing values in the series. The default is `double(`*null*`)`. The score of nulls and ignore values is set to `0`.|\n| *min_percentile* | int, long, or real | | The minimum percentile to use to calculate the normal inter-quantile range. The default is 10. The value must be in the range `[2.0, 98.0]`. This parameter is only relevant for the `\"ctukey\"` *kind*.|\n| *max_percentile* | int, long, or real | | The maximum percentile to use to calculate the normal inter-quantile range. The default is 90. The value must be in the range `[2.0, 98.0]`. This parameter is only relevant for the `\"ctukey\"` *kind*.|\n\nThe following table describes differences between `\"tukey\"` and `\"ctukey\"`:\n\n| Algorithm | Default quantile range | Supports custom quantile range |\n|:-----------|:----------------------- |:--------------------------------|\n| `\"tukey\"` | 25% / 75%              | No                             |\n| `\"ctukey\"`| 10% / 90%              | Yes                            |\n\n> \n> The best way to use this function is to apply it to the results of the make-series operator.",
        "example": "range x from 0 to 364 step 1 \n| extend t = datetime(2023-01-01) + 1d*x\n| extend y = rand() * 10\n| extend y = iff(monthofyear(t) != monthofyear(prev(t)), y+20, y) // generate a sample series with outliers at first day of each month\n| summarize t = make_list(t), series = make_list(y)\n| extend outliers=series_outliers(series)\n| extend pos_anomalies = array_iff(series_greater_equals(outliers, 1.5), 1, 0)\n| render anomalychart with(xcolumn=t, ycolumns=series, anomalycolumns=pos_anomalies)",
        "sourceLength": 4065,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-outliers-function"
      }
    },
    {
      "name": "series_pearson_correlation",
      "category": "Function",
      "documentation": {
        "title": "series_pearson_correlation()",
        "description": "Calculates the pearson correlation coefficient of two numeric series inputs.\n\nSee: Pearson correlation coefficient.",
        "syntax": "`series_pearson_correlation(`*series1*`,` *series2*`)`",
        "returnInfo": "The calculated Pearson correlation coefficient between the two inputs. Any non-numeric element or nonexisting element (arrays of different sizes) yields a `null` result.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | The arrays of numeric values for calculating the correlation coefficient.|",
        "example": "range s1 from 1 to 5 step 1\n| extend s2 = 2 * s1 // Perfect correlation\n| summarize s1 = make_list(s1), s2 = make_list(s2)\n| extend correlation_coefficient = series_pearson_correlation(s1, s2)",
        "sourceLength": 2057,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-pearson-correlation-function"
      }
    },
    {
      "name": "series_periods_detect",
      "category": "Function",
      "documentation": {
        "title": "series_periods_detect()",
        "description": "Finds the most significant periods within a time series.\n\nThe series_periods_detect() function is useful for detecting periodic patterns in data, such as daily, weekly, or monthly cycles.",
        "syntax": "`series_periods_detect(`*series*`,` *min_period*`,` *max_period*`,` *num_periods*`)`",
        "returnInfo": "The function returns a table with two columns:\n\n* *periods*: A dynamic array containing the periods found, in units of the bin size, ordered by their scores.\n* *scores*: A dynamic array containing values between 0 and 1. Each array measures the significance of a period in its respective position in the *periods* array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values, typically the resulting output of the make-series or make_list operators.|\n| *min_period* | `real` |  *True* | The minimal period length for which to search.|\n| *max_period* | `real` |  *True* | The maximal period length for which to search.|\n| *num_periods* | `long` |  *True* | The maximum number of periods to return. This number is the length of the output dynamic arrays.|\n\n> \n>\n> * The algorithm can detect periods containing at least 4 points and at most half of the series length.\n> * Set the *min_period* a little below and *max_period* a little above the periods you expect to find in the time series. For example, if you have an hourly aggregated signal, and you look for both daily and weekly periods (24 and 168 hours respectively), you can set *min_period*=0.8\\*24, *max_period*=1.2\\*168, and leave 20% margins around these periods.\n> * The input time series must be regular. That is, aggregated in constant bins, which is always the case if it has been created using make-series. Otherwise, the output is meaningless.",
        "example": "print y=dynamic([80, 139, 87, 110, 68, 54, 50, 51, 53, 133, 86, 141, 97, 156, 94, 149, 95, 140, 77, 61, 50, 54, 47, 133, 72, 152, 94, 148, 105, 162, 101, 160, 87, 63, 53, 55, 54, 151, 103, 189, 108, 183, 113, 175, 113, 178, 90, 71, 62, 62, 65, 165, 109, 181, 115, 182, 121, 178, 114, 170])\n| project x=range(1, array_length(y), 1), y  \n| render linechart\n\nprint y=dynamic([80, 139, 87, 110, 68, 54, 50, 51, 53, 133, 86, 141, 97, 156, 94, 149, 95, 140, 77, 61, 50, 54, 47, 133, 72, 152, 94, 148, 105, 162, 101, 160, 87, 63, 53, 55, 54, 151, 103, 189, 108, 183, 113, 175, 113, 178, 90, 71, 62, 62, 65, 165, 109, 181, 115, 182, 121, 178, 114, 170])\n| project x=range(1, array_length(y), 1), y  \n| project series_periods_detect(y, 0.0, 50.0, 2)",
        "sourceLength": 5806,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-periods-detect-function"
      }
    },
    {
      "name": "series_periods_validate",
      "category": "Function",
      "documentation": {
        "title": "series_periods_validate()",
        "description": "Checks whether a time series contains periodic patterns of given lengths.  \n\nOften a metric measuring the traffic of an application is characterized by a weekly or daily period. This period can be confirmed by running `series_periods_validate()` that checks for a weekly and daily period.",
        "syntax": "`series_periods_validate(`*series*`,` *period1* [ `,` *period2* `,` . . . ] `)`",
        "returnInfo": "The function outputs a table with two columns:\n\n* *periods*: A dynamic array that contains the periods to validate as supplied in the input.\n* *scores*: A dynamic array that contains a score between 0 and 1. The score shows the significance of a period in its respective position in the *periods* array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values, typically the resulting output of make-series or make_list operators.|\n| *period1*, *period2*, etc.| `real` |  *True* | The periods to validate in units of the bin size. For example, if the series is in 1h bins, a weekly period is 168 bins. At least one period is required.|\n\n> \n>\n> * The minimal value for each of the *period* parameters is **4** and the maximal is half of the length of the input series. For a *period* argument outside these bounds, the output score will be **0**.\n> * The input time series must be regular, that is, aggregated in constant bins, and is always the case if it has been created using make-series. Otherwise, the output is meaningless.\n> * The function accepts up to 16 periods to validate.\n>",
        "example": "print y=dynamic([80, 139, 87, 110, 68, 54, 50, 51, 53, 133, 86, 141, 97, 156, 94, 149, 95, 140, 77, 61, 50, 54, 47, 133, 72, 152, 94, 148, 105, 162, 101, 160, 87, 63, 53, 55, 54, 151, 103, 189, 108, 183, 113, 175, 113, 178, 90, 71, 62, 62, 65, 165, 109, 181, 115, 182, 121, 178, 114, 170])\n| project x=range(1, array_length(y), 1), y  \n| render linechart\n\nprint y=dynamic([80, 139, 87, 110, 68, 54, 50, 51, 53, 133, 86, 141, 97, 156, 94, 149, 95, 140, 77, 61, 50, 54, 47, 133, 72, 152, 94, 148, 105, 162, 101, 160, 87, 63, 53, 55, 54, 151, 103, 189, 108, 183, 113, 175, 113, 178, 90, 71, 62, 62, 65, 165, 109, 181, 115, 182, 121, 178, 114, 170])\n| project x=range(1, array_length(y), 1), y  \n| project series_periods_validate(y, 14.0, 10.0)",
        "sourceLength": 4802,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-periods-validate-function"
      }
    },
    {
      "name": "series_pow",
      "category": "Function",
      "documentation": {
        "title": "series_pow()",
        "description": "Calculates the element-wise power of two numeric series inputs.",
        "syntax": "`series_pow(`*series1*`,` *series2*`)`",
        "returnInfo": "A dynamic array of calculated element-wise power operation between the two inputs. Any non-numeric element or non-existing element, such as in the case of arrays of different sizes, yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | Arrays of numeric values. The first array, or base, is element-wise raised to the power of the second array, or power, into a dynamic array result.|",
        "example": "print x = dynamic([1, 2, 3, 4]), y=dynamic([1, 2, 3, 0.5])\n| extend x_pow_y = series_pow(x, y)",
        "sourceLength": 1810,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-pow-function"
      }
    },
    {
      "name": "series_product",
      "category": "Function",
      "documentation": {
        "title": "series_product()",
        "description": "Calculates the product of series elements.",
        "syntax": "`series_product(`*series*`)`",
        "returnInfo": "Returns a double type value with the product of the elements of the array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | Array of numeric values. |",
        "example": "print arr=dynamic([1,2,3,4]) \n| extend series_product=series_product(arr)",
        "sourceLength": 1432,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-product-function"
      }
    },
    {
      "name": "series_seasonal",
      "category": "Function",
      "documentation": {
        "title": "series_seasonal()",
        "description": "Calculates the seasonal component of a series, according to the detected or given seasonal period.",
        "syntax": "`series_seasonal(`*series* [`,` *period* ]`)`",
        "returnInfo": "A dynamic array of the same length as the *series* input that contains the calculated seasonal component of the series. The seasonal component is calculated as the *median* of all the values that correspond to the location of the bin, across the periods.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *period* | `int` | | The number of bins for each seasonal period. This value can be any positive integer. By default, the value is set to -1, which automatically detects the period using the series_periods_detect() with a threshold of *0.7*. If seasonality is not detected, the function returns zeros. If a different value is set, it ignores seasonality and returns a series of zeros.|",
        "example": "",
        "sourceLength": 4236,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-seasonal-function"
      }
    },
    {
      "name": "series_sign",
      "category": "Function",
      "documentation": {
        "title": "series_sign()",
        "description": "Calculates the element-wise sign of the numeric series input.",
        "syntax": "`series_sign(`*series*`)`",
        "returnInfo": "A dynamic array of calculated sign function values. -1 for negative, 0 for 0, and 1 for positive. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the sign function is applied.|",
        "example": "print arr = dynamic([-6, 0, 8])\n| extend arr_sign = series_sign(arr)",
        "sourceLength": 1572,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-sign-function"
      }
    },
    {
      "name": "series_sin",
      "category": "Function",
      "documentation": {
        "title": "series_sin()",
        "description": "Calculates the element-wise sine of the numeric series input.",
        "syntax": "`series_sin(`*series*`)`",
        "returnInfo": "A dynamic array of calculated sine function values. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values over which the sine function is applied.|",
        "example": "print arr = dynamic([-1, 0, 1])\n| extend arr_sin = series_sin(arr)",
        "sourceLength": 1559,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-sin-function"
      }
    },
    {
      "name": "series_stats",
      "category": "Function",
      "documentation": {
        "title": "series_stats()",
        "description": "Returns statistics for a numerical series in a table with a column for each statistic.\n\n> \n> This function returns multiple values. If you only need a single value, such as the average, consider using series_stats_dynamic.",
        "syntax": "`...` `|` `extend` `(` *Name*`,` ... `)` `=` `series_stats` `(` *series* [`,` *ignore_nonfinite*] `)`",
        "returnInfo": "A table with a column for each of the statistics displayed in the following table.\n\n|Statistic | Description|\n|:--|:--|\n| `min` | The minimum value in the input array.|\n| `min_idx`| The first position of the minimum value in the input array.|\n| `max` | The maximum value in the input array.|\n| `max_idx`| The first position of the maximum value in the input array.|\n| `avg`| The average value of the input array.|\n| `variance` | The sample variance of input array.|\n| `stdev`| The sample standard deviation of the input array.|",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Name* | `string` | | The column labels for the output table. If not provided, the system will generate them. If you provide a limited number of names, the table will show only those columns.|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *ignore_nonfinite* | `bool` | | Determines if the calculation includes non-finite values like `null`, `NaN`, `inf`, and so on. The default is `false`, which will result in `null` if non-finite values are present.|",
        "example": "print x=dynamic([23, 46, 23, 87, 4, 8, 3, 75, 2, 56, 13, 75, 32, 16, 29]) \n| project series_stats(x)",
        "sourceLength": 2859,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-stats-function"
      }
    },
    {
      "name": "series_stats_dynamic",
      "category": "Function",
      "documentation": {
        "title": "series_stats_dynamic()",
        "description": "Returns statistics for a series in a dynamic object.",
        "syntax": "`series_stats_dynamic(`*series* [`,` *ignore_nonfinite* ]`)`",
        "returnInfo": "A dynamic property bag object with the following content:\n\n* `min`: The minimum value in the input array.\n* `min_idx`: The first position of the minimum value in the input array.\n* `max`: The maximum value in the input array.\n* `max_idx`: The first position of the maximum value in the input array.\n* `avg`: The average value of the input array.\n* `variance`: The sample variance of input array.\n* `stdev`: The sample standard deviation of the input array.\n* `sum`: The sum of the values in the input array.\n* `len`: The length of the input array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values.|\n| *ignore_nonfinite* | `bool` | | Indicates whether to calculate the statistics while ignoring non-finite values, such as *null*, *NaN*, *inf*, and so on. The default is `false`, which returns `null` if non-finite values are present in the array.|",
        "example": "print x=dynamic([23, 46, 23, 87, 4, 8, 3, 75, 2, 56, 13, 75, 32, 16, 29]) \n| project stats=series_stats_dynamic(x)\n\nnyc_taxi\n| make-series Series=avg(fare_amount) on pickup_datetime step 1min\n| project Stats=series_stats_dynamic(Series)",
        "sourceLength": 3291,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-stats-dynamic-function"
      }
    },
    {
      "name": "series_subtract",
      "category": "Function",
      "documentation": {
        "title": "series_subtract()",
        "description": "Calculates the element-wise subtraction of two numeric series inputs.",
        "syntax": "`series_subtract(`*series1*`,` *series2*`)`",
        "returnInfo": "A dynamic array of calculated element-wise subtract operation between the two inputs. Any non-numeric element or non-existing element, such as in the case of arrays of different sizes, yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series1*, *series2* | `dynamic` |  *True* | Arrays of numeric values, the second array to be element-wise subtracted from the first array.|",
        "example": "range x from 1 to 3 step 1\n| extend y = x * 2\n| extend z = y * 2\n| project s1 = pack_array(x,y,z), s2 = pack_array(z, y, x)\n| extend s1_subtract_s2 = series_subtract(s1, s2)",
        "sourceLength": 1968,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-subtract-function"
      }
    },
    {
      "name": "series_sum",
      "category": "Function",
      "documentation": {
        "title": "series_sum()",
        "description": "Calculates the sum of series elements.",
        "syntax": "`series_sum(`*series*`)`",
        "returnInfo": "Returns a double type value with the sum of the elements of the array.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | Array of numeric values. |",
        "example": "print arr=dynamic([1,2,3,4]) \n| extend series_sum=series_sum(arr)",
        "sourceLength": 1392,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-sum-function"
      }
    },
    {
      "name": "series_tan",
      "category": "Function",
      "documentation": {
        "title": "series_tan()",
        "description": "Calculates the element-wise tangent of the numeric series input.",
        "syntax": "`series_tan(`*series*`)`",
        "returnInfo": "A dynamic array of calculated tangent function values. Any non-numeric element yields a `null` element value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *series* | `dynamic` |  *True* | An array of numeric values on which the tangent function is applied.|",
        "example": "print arr = dynamic([-1, 0, 1])\n| extend arr_tan = series_tan(arr)",
        "sourceLength": 1569,
        "url": "https://learn.microsoft.com/en-us/kusto/query/series-tan-function"
      }
    },
    {
      "name": "sign",
      "category": "Function",
      "documentation": {
        "title": "sign()",
        "description": "Returns the sign of the numeric expression.",
        "syntax": "`sign(`*number*`)`",
        "returnInfo": "The positive (+1), zero (0), or negative (-1) sign of the specified expression.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | `real` |  *True* | The number for which to return the sign.|",
        "example": "print s1 = sign(-42), s2 = sign(0), s3 = sign(11.2)",
        "sourceLength": 1346,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sign-function"
      }
    },
    {
      "name": "sin",
      "category": "Function",
      "documentation": {
        "title": "sin()",
        "description": "Returns the sine function value of the specified angle. The angle is specified in radians.",
        "syntax": "`sin(`*number*`)`",
        "returnInfo": "The sine of *number* of radians.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | `real` |  *True* | The value in radians for which to calculate the sine.|",
        "example": "print sin(1)",
        "sourceLength": 1028,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sin-function"
      }
    },
    {
      "name": "split",
      "category": "Function",
      "documentation": {
        "title": "split()",
        "description": "The `split()` function takes a string and splits it into substrings based on a specified delimiter, returning the substrings in an array. Optionally, you can retrieve a specific substring by specifying its index.",
        "syntax": "`split(`*source*`,` *delimiter* [`,` *requestedIndex*]`)`",
        "returnInfo": "An array of substrings obtained by separating the *source* string by the specified *delimiter*, or a single substring at the specified *requestedIndex*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | `string` |  *True* | The source string that is split according to the given delimiter.|\n| *delimiter* | `string` |  *True* | The delimiter that will be used in order to split the source string.|\n| *requestedIndex* | `int` | | A zero-based index. If provided, the returned string array contains the requested substring at the index if it exists.|",
        "example": "print\n    split(\"aa_bb\", \"_\"),           // [\"aa\",\"bb\"]\n    split(\"aaa_bbb_ccc\", \"_\", 1),  // [\"bbb\"]\n    split(\"\", \"_\"),                // [\"\"]\n    split(\"a__b\", \"_\"),            // [\"a\",\"\",\"b\"]\n    split(\"aabbcc\", \"bb\")          // [\"aa\",\"cc\"]",
        "sourceLength": 2360,
        "url": "https://learn.microsoft.com/en-us/kusto/query/split-function"
      }
    },
    {
      "name": "sqrt",
      "category": "Function",
      "documentation": {
        "title": "sqrt()",
        "description": "Returns the square root of the input.",
        "syntax": "`sqrt(`*number*`)`",
        "returnInfo": "* A positive number such that `sqrt(x) * sqrt(x) == x`\n* `null` if the argument is negative or can't be converted to a `real` value.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *number* | int, long, or real |  *True* | The number for which to calculate the square root.|",
        "example": "",
        "sourceLength": 1003,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sqrt-function"
      }
    },
    {
      "name": "startofday",
      "category": "Function",
      "documentation": {
        "title": "startofday()",
        "description": "Returns the start of the day containing the date, shifted by an offset, if provided.",
        "syntax": "`startofday(`*date* [`,` *offset* ]`)`",
        "returnInfo": "A datetime representing the start of the day for the given *date* value, with the offset, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to find the start.|\n| *offset* | `int` | | The number of days to offset from the input date. The default is 0.|",
        "example": "range offset from -1 to 1 step 1\n| project dayStart = startofday(datetime(2017-01-01 10:10:17), offset)",
        "sourceLength": 2112,
        "url": "https://learn.microsoft.com/en-us/kusto/query/startofday-function"
      }
    },
    {
      "name": "startofmonth",
      "category": "Function",
      "documentation": {
        "title": "startofmonth()",
        "description": "Returns the start of the month containing the date, shifted by an offset, if provided.",
        "syntax": "`startofmonth(`*date* [`,` *offset* ]`)`",
        "returnInfo": "A datetime representing the start of the month for the given *date* value, with the offset, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to find the start of month.|\n| *offset* | `int` | | The number of months to offset from the input date. The default is 0.|",
        "example": "range offset from -1 to 1 step 1\n| project monthStart = startofmonth(datetime(2017-01-01 10:10:17), offset)",
        "sourceLength": 2139,
        "url": "https://learn.microsoft.com/en-us/kusto/query/startofmonth-function"
      }
    },
    {
      "name": "startofweek",
      "category": "Function",
      "documentation": {
        "title": "startofweek()",
        "description": "Returns the start of the week containing the date, shifted by an offset, if provided.\n\nStart of the week is considered to be a Sunday.",
        "syntax": "`startofweek(`*date* [`,` *offset* ]`)`",
        "returnInfo": "A datetime representing the start of the week for the given *date* value, with the offset, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to find the start of week.|\n| *offset* | `int` | | The number of weeks to offset from the input date. The default is 0.|",
        "example": "range offset from -1 to 1 step 1\n| project weekStart = startofweek(datetime(2017-01-01 10:10:17), offset) \n\nlet startofweekFromMonday = (dateArg: datetime) {\n    datetime_add('day', 1, startofweek(datetime_add('day', -1, dateArg)))\n};\nlet data=datatable(Date: datetime, day: string)\n[\ndatetime(2025, 6, 14), \"Saturday\",\ndatetime(2025, 6, 15), \"Sunday\",\ndatetime(2025, 6, 16), \"Monday\",\ndatetime(2025, 6, 17), \"Tuesday\"\n];\ndata \n| extend MondayWeek=startofweekFromMonday(Date)",
        "sourceLength": 3326,
        "url": "https://learn.microsoft.com/en-us/kusto/query/startofweek-function"
      }
    },
    {
      "name": "startofyear",
      "category": "Function",
      "documentation": {
        "title": "startofyear()",
        "description": "Returns the start of the year containing the date, shifted by an offset, if provided.",
        "syntax": "`startofyear(`*date* [`,` *offset* ]`)`",
        "returnInfo": "A datetime representing the start of the year for the given *date* value, with the offset, if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to find the start of the year.|\n| *offset* | `int` | | The number of years to offset from the input date. The default is 0.|",
        "example": "range offset from -1 to 1 step 1\n| project yearStart = startofyear(datetime(2017-01-01 10:10:17), offset)",
        "sourceLength": 2133,
        "url": "https://learn.microsoft.com/en-us/kusto/query/startofyear-function"
      }
    },
    {
      "name": "stored_query_result",
      "category": "Function",
      "documentation": {
        "title": "stored_query_result()",
        "description": "Retrieves a previously created stored query result.\n\nTo set a stored query result, see .set stored_query_result command.",
        "syntax": "`stored_query_result(` *StoredQueryResultName* `)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *StoredQueryResultName* | `string` | *True* | The name of the stored query result. |",
        "example": "stored_query_result(\"Numbers\")",
        "sourceLength": 2588,
        "url": "https://learn.microsoft.com/en-us/kusto/query/stored-query-result-function"
      }
    },
    {
      "name": "strcat",
      "category": "Function",
      "documentation": {
        "title": "strcat()",
        "description": "Concatenates between 1 and 64 arguments.",
        "syntax": "`strcat(`*argument1*`,` *argument2* [`,` *argument3* ... ]`)`",
        "returnInfo": "The arguments concatenated to a single string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *argument1* ... *argumentN* | scalar |  *True* | The expressions to concatenate.|\n\n> \n> If the arguments aren't of string type, they'll be forcibly converted to string.",
        "example": "",
        "sourceLength": 2433,
        "url": "https://learn.microsoft.com/en-us/kusto/query/strcat-function"
      }
    },
    {
      "name": "strcat_array",
      "category": "Function",
      "documentation": {
        "title": "strcat_array()",
        "description": "Creates a concatenated string of array values using a specified delimiter.",
        "syntax": "`strcat_array(`*array*, *delimiter*`)`",
        "returnInfo": "The input *array* values concatenated to a single string with the specified *delimiter*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *array* | `dynamic` |  *True* | An array of values to be concatenated.|\n| *delimeter* | `string` |  *True* | The value used to concatenate the values in *array*.|",
        "example": "",
        "sourceLength": 2117,
        "url": "https://learn.microsoft.com/en-us/kusto/query/strcat-array-function"
      }
    },
    {
      "name": "strcat_delim",
      "category": "Function",
      "documentation": {
        "title": "strcat_delim()",
        "description": "Concatenates between 2 and 64 arguments, using a specified delimiter as the first argument.",
        "syntax": "`strcat_delim(`*delimiter*, *argument1*, *argument2*[ , *argumentN*]`)`",
        "returnInfo": "The arguments concatenated to a single string with *delimiter*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *delimiter* | `string` |  *True* | The string to be used as separator in the concatenation.|\n| *argument1* ... *argumentN* | scalar |  *True* | The expressions to concatenate.|\n\n> \n> If the arguments aren't of string type, they'll be forcibly converted to string.",
        "example": "print st = strcat_delim('-', 1, '2', 'A', 1s)",
        "sourceLength": 1704,
        "url": "https://learn.microsoft.com/en-us/kusto/query/strcat-delim-function"
      }
    },
    {
      "name": "strcmp",
      "category": "Function",
      "documentation": {
        "title": "strcmp()",
        "description": "Compares two strings.\n\nThe function starts comparing the first character of each string. If they're equal to each other, it continues with the following pairs until the characters differ or until the end of shorter string is reached.",
        "syntax": "`strcmp(`*string1*`,` *string2*`)`",
        "returnInfo": "Returns an integer value indicating the relationship between the strings:\n\n* *<0* - the first character that doesn't match has a lower value in *string1* than in *string2*\n* *0* - the contents of both strings are equal\n* *>0* - the first character that doesn't match has a greater value in *string1* than in *string2*",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *string1* | `string` |  *True* | The first input string for comparison.|\n| *string2* | `string` |  *True* | The second input string for comparison.|",
        "example": "datatable(string1:string, string2:string) [\n    \"ABC\",\"ABC\",\n    \"abc\",\"ABC\",\n    \"ABC\",\"abc\",\n    \"abcde\",\"abc\"\n]\n| extend result = strcmp(string1,string2)",
        "sourceLength": 2091,
        "url": "https://learn.microsoft.com/en-us/kusto/query/strcmp-function"
      }
    },
    {
      "name": "string_size",
      "category": "Function",
      "documentation": {
        "title": "string_size()",
        "description": "Returns the size, in bytes, of the input string.",
        "syntax": "`string_size(`*source*`)`",
        "returnInfo": "Returns the length, in bytes, of the input string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | `string` |  *True* | The string for which to return the byte size.|",
        "example": "",
        "sourceLength": 1734,
        "url": "https://learn.microsoft.com/en-us/kusto/query/string-size-function"
      }
    },
    {
      "name": "strlen",
      "category": "Function",
      "documentation": {
        "title": "strlen()",
        "description": "Returns the length, in characters, of the input string.\n\n> \n> This function counts Unicode code points.",
        "syntax": "`strlen(`*source*`)`",
        "returnInfo": "Returns the length, in characters, of the input string.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | `string` |  *True* | The string for which to return the length.|",
        "example": "",
        "sourceLength": 2387,
        "url": "https://learn.microsoft.com/en-us/kusto/query/strlen-function"
      }
    },
    {
      "name": "strrep",
      "category": "Function",
      "documentation": {
        "title": "strrep()",
        "description": "Replicates a string the number of times specified.",
        "syntax": "`strrep(`*value*`,` *multiplier*`,` [ *delimiter* ]`)`",
        "returnInfo": "The *value* string repeated the number of times as specified by *multiplier*, concatenated with *delimiter*.\n\nIf *multiplier* is more than the maximal allowed value of 1024, the input string will be repeated 1024 times.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | The string to replicate. |\n| *multiplier* | `int` |  *True* | The amount of times to replicate the string. Must be a value from 1 to 67108864.|\n| *delimiter* | `string` | | The delimeter used to separate the string replications. The default delimiter is an empty string.|\n\n> \n> If *value* or *delimiter* isn't a `string`, they'll be forcibly converted to string.",
        "example": "print from_str = strrep('ABC', 2), from_int = strrep(123,3,'.'), from_time = strrep(3s,2,' ')",
        "sourceLength": 2014,
        "url": "https://learn.microsoft.com/en-us/kusto/query/strrep-function"
      }
    },
    {
      "name": "substring",
      "category": "Function",
      "documentation": {
        "title": "substring()",
        "description": "Extracts a substring from the source string starting from some index to the end of the string.\n\nOptionally, the length of the requested substring can be specified.",
        "syntax": "`substring(`*source*`,` *startingIndex* [`,` *length*]`)`",
        "returnInfo": "A substring from the given string. The substring starts at startingIndex (zero-based) character position and continues to the end of the string or length characters if specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *source* | `string` |  *True* | The string from which to take the substring.|\n| *startingIndex* | `int` |  *True* | The zero-based starting character position of the requested substring. If a negative number, the substring will be retrieved from the end of the source string.|\n| *length* | `int` | | The requested number of characters in the substring. The default behavior is to take from *startingIndex* to the end of the *source* string.|",
        "example": "substring(\"123456\", 1)        // 23456\nsubstring(\"123456\", 2, 2)     // 34\nsubstring(\"ABCD\", 0, 2)       // AB\nsubstring(\"123456\", -2, 2)    // 56",
        "sourceLength": 1770,
        "url": "https://learn.microsoft.com/en-us/kusto/query/substring-function"
      }
    },
    {
      "name": "tan",
      "category": "Function",
      "documentation": {
        "title": "tan()",
        "description": "Returns the tangent value of the specified number.",
        "syntax": "`tan(`*x*`)`",
        "returnInfo": "The result of `tan(`*x*`)`",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *x* | `real` |  *True* | The number for which to calculate the tangent. |",
        "example": "",
        "sourceLength": 894,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tan-function"
      }
    },
    {
      "name": "tdigest_merge",
      "category": "Aggregation functions",
      "documentation": {
        "title": "tdigest_merge()",
        "description": "Merges tdigest results across the group.\n\nFor more information about the underlying algorithm (T-Digest) and the estimated error, see estimation error in percentiles.\n\n> The `tdigest_merge()` and `merge_tdigest()` functions are equivalent\n\n> \n>The results of tdigest() and tdigest_merge() can be stored and later retrieved. For example, you may want to create daily percentiles summary, which can then be used to calculate weekly percentiles.\n> However, the precise binary representation of these results may change over time. There's no guarantee that these functions will produce identical results for identical inputs, and therefore we don't advise relying on them.",
        "syntax": "`tdigest_merge(`*expr*`)`",
        "returnInfo": "Returns the merged tdigest values of *expr* across the group.\n\n> \n>\n> * Use the function percentile_tdigest() to calculate the percentiles from the `tdigest_merge` results.\n> * All tdigests that are included in the same group must be of the same type.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression used for the aggregation calculation.|",
        "example": "StormEvents\n| summarize PreAggDamageProperty=tdigest(DamageProperty) by State\n| summarize tdigest_merge(PreAggDamageProperty)",
        "sourceLength": 4694,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tdigest-merge-aggregation-function"
      }
    },
    {
      "name": "tobool",
      "category": "Function",
      "documentation": {
        "title": "tobool()",
        "description": "Convert inputs to boolean (signed 8-bit) representation.\n\n> The `tobool()` and `toboolean()` functions are equivalent\n\n> \n> When possible, use bool literals instead.",
        "syntax": "`tobool(`*value*`)`",
        "returnInfo": "If conversion is successful, result will be a boolean.\nIf conversion isn't successful, result will be `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | The value to convert to boolean.|",
        "example": "tobool(\"true\") == true\ntobool(\"false\") == false\ntobool(1) == true\ntobool(123) == true",
        "sourceLength": 1474,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tobool-function"
      }
    },
    {
      "name": "todatetime",
      "category": "Function",
      "documentation": {
        "title": "todatetime()",
        "description": "Converts the input to a datetime scalar value.\n\n> \n>\n> * To learn more about supported data and time formats and syntax, see The datetime data type.\n> * When possible, use datetime literals instead of the `todatetime()` function.",
        "syntax": "`todatetime(`*value*`)`",
        "returnInfo": "If the conversion is successful, the result is a datetime value.\nElse, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to datetime.|",
        "example": "print todatetime(\"2015-12-31 23:59:59.9\")\n\nprint todatetime('12-02-2022') == datetime('12-02-2022')",
        "sourceLength": 2593,
        "url": "https://learn.microsoft.com/en-us/kusto/query/todatetime-function"
      }
    },
    {
      "name": "todecimal",
      "category": "Function",
      "documentation": {
        "title": "todecimal()",
        "description": "Converts the input to a decimal number representation.\n\n> \n> When possible, use decimal literals instead.",
        "syntax": "`todecimal(`*value*`)`",
        "returnInfo": "If conversion is successful, result is a decimal number.\nIf conversion isn't successful, result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to a decimal.|",
        "example": "print todecimal(\"123.45678\") == decimal(123.45678)",
        "sourceLength": 1796,
        "url": "https://learn.microsoft.com/en-us/kusto/query/todecimal-function"
      }
    },
    {
      "name": "toguid",
      "category": "Function",
      "documentation": {
        "title": "toguid()",
        "description": "Converts a string to a `guid` scalar.\n\n> \n> When possible, use guid literals instead.",
        "syntax": "`toguid(`*value*`)`",
        "returnInfo": "The conversion process takes the first 32 characters of the input, ignoring properly located hyphens, validates that the characters are between 0-9 or a-f, and then converts the string into a `guid` scalar. The rest of the string is ignored.\n\nIf the conversion is successful, the result is a `guid` scalar. Otherwise, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to guid.|",
        "example": "datatable(str: string)\n[\n    \"0123456789abcdef0123456789abcdef\",\n    \"0123456789ab-cdef-0123-456789abcdef\",\n    \"a string that is not a guid\"\n]\n| extend guid = toguid(str)",
        "sourceLength": 2561,
        "url": "https://learn.microsoft.com/en-us/kusto/query/toguid-function"
      }
    },
    {
      "name": "tohex",
      "category": "Function",
      "documentation": {
        "title": "tohex()",
        "description": "Converts input to a hexadecimal string.",
        "syntax": "`tohex(`*value*`,` [`,` *minLength* ]`)`",
        "returnInfo": "If conversion is successful, result is a string value.\nIf conversion isn't successful, result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | int or long |  *True* | The value that is converted to a hex string.|\n| *minLength* | `int` | | The value representing the number of leading characters to include in the output. Values between 1 and 16 are supported. Values greater than 16 are truncated to 16. If the string is longer than *minLength* without leading characters, then *minLength* is effectively ignored. Negative numbers are only represented at minimum by their underlying data size, so for an integer (32-bit) the *minLength* is at minimum 8, for a long (64-bit) it's at minimum 16.|",
        "example": "print\n    tohex(256) == '100',\n    tohex(-256) == 'ffffffffffffff00', // 64-bit 2's complement of -256\n    tohex(toint(-256), 8) == 'ffffff00', // 32-bit 2's complement of -256\n    tohex(256, 8) == '00000100',\n    tohex(256, 2) == '100' // Exceeds min length of 2, so min length is ignored.",
        "sourceLength": 2581,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tohex-function"
      }
    },
    {
      "name": "toint",
      "category": "Function",
      "documentation": {
        "title": "toint()",
        "description": "Converts the input to an integer value (signed 32-bit) number representation.\n\n> \n> When possible, use int literals instead.",
        "syntax": "`toint(`*value*`)`",
        "returnInfo": "If the conversion is successful, the result is an integer. Otherwise, the result is `null`. If the input includes a decimal value, the result truncate to only the integer portion.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to an integer.|",
        "example": "",
        "sourceLength": 2542,
        "url": "https://learn.microsoft.com/en-us/kusto/query/toint-function"
      }
    },
    {
      "name": "tolong",
      "category": "Function",
      "documentation": {
        "title": "tolong()",
        "description": "Converts the input value to a long (signed 64-bit) number representation.\n\n> \n> When possible, use long literals instead.",
        "syntax": "`tolong(`*value*`)`",
        "returnInfo": "If conversion is successful, the result is a long number.\nIf conversion isn't successful, the result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to a long.|",
        "example": "tolong(\"123\") == 123",
        "sourceLength": 1774,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tolong-function"
      }
    },
    {
      "name": "tolower",
      "category": "Function",
      "documentation": {
        "title": "tolower()",
        "description": "Converts the input string to lower case.",
        "syntax": "`tolower(`*value*`)`",
        "returnInfo": "If conversion is successful, result is a lowercase string.\nIf conversion isn't successful, result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | The value to convert to a lowercase string.|",
        "example": "tolower(\"Hello\") == \"hello\"",
        "sourceLength": 1572,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tolower-function"
      }
    },
    {
      "name": "toreal",
      "category": "Function",
      "documentation": {
        "title": "toreal()",
        "description": "Converts the input expression to a value of type real.\n\n> The `todouble()` and `toreal()` functions are equivalent.\n\n> \n> When possible, use real literals instead.",
        "syntax": "`toreal(`*Expr*`)`",
        "returnInfo": "If conversion is successful, the result is a value of type `real`. Otherwise, the returned value is `real(null)`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to real.|",
        "example": "toreal(\"123.4\") == 123.4",
        "sourceLength": 1539,
        "url": "https://learn.microsoft.com/en-us/kusto/query/toreal-function"
      }
    },
    {
      "name": "tostring",
      "category": "Function",
      "documentation": {
        "title": "tostring()",
        "description": "Converts the input to a string representation.",
        "syntax": "`tostring(`*value*`)`",
        "returnInfo": "If *value* is non-null, the result is a string representation of *value*.\nIf *value* is null, the result is an empty string.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *value* | scalar |  *True* | The value to convert to a string.|",
        "example": "print tostring(123)",
        "sourceLength": 1524,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tostring-function"
      }
    },
    {
      "name": "totimespan",
      "category": "Function",
      "documentation": {
        "title": "totimespan()",
        "description": "Converts the input to a timespan scalar value.\n\n> **Deprecated aliases:** totime()\n\n> \n> When possible, we recommend using timespan literals instead.",
        "syntax": "`totimespan(`*value*`)`",
        "returnInfo": "If conversion is successful, result is a timespan value.\nElse, result is null.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | The value to convert to a timespan.|",
        "example": "let value=5;\nprint minsStr=totimespan(\"0.00:03:00\"), days=totimespan(4d), hour=totimespan(value * 1h), \n      mins=totimespan(value * 2m), seconds=totimespan(5 * 4s), timespanMin=timespan(25min)",
        "sourceLength": 2231,
        "url": "https://learn.microsoft.com/en-us/kusto/query/totimespan-function"
      }
    },
    {
      "name": "toupper",
      "category": "Function",
      "documentation": {
        "title": "toupper()",
        "description": "Converts a string to upper case.",
        "syntax": "`toupper(`*value*`)`",
        "returnInfo": "If conversion is successful, result is an uppercase string.\nIf conversion isn't successful, result is `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | The value to convert to an uppercase string.|",
        "example": "toupper(\"hello\") == \"HELLO\"",
        "sourceLength": 1560,
        "url": "https://learn.microsoft.com/en-us/kusto/query/toupper-function"
      }
    },
    {
      "name": "translate",
      "category": "Function",
      "documentation": {
        "title": "translate()",
        "description": "Replaces a set of characters ('searchList') with another set of characters ('replacementList') in a given a string.\nThe function searches for characters in the 'searchList' and replaces them with the corresponding characters in 'replacementList'",
        "syntax": "`translate(`*searchList*`,` *replacementList*`,` *source*`)`",
        "returnInfo": "*source* after replacing all occurrences of characters in 'replacementList' with the corresponding characters in 'searchList'",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *searchList* | `string` |  *True* | The list of characters that should be replaced.|\n| *replacementList* | `string` |  *True* | The list of characters that should replace the characters in *searchList*.|\n| *source* | `string` |  *True* | A string to search.|",
        "example": "",
        "sourceLength": 1760,
        "url": "https://learn.microsoft.com/en-us/kusto/query/translate-function"
      }
    },
    {
      "name": "treepath",
      "category": "Function",
      "documentation": {
        "title": "treepath()",
        "description": "Enumerates all the path expressions that identify leaves in a dynamic object.",
        "syntax": "`treepath(`*object*`)`",
        "returnInfo": "An array of path expressions.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *object* | `dynamic` |  *True*| A dynamic property bag object for which to enumerate the path expressions.|",
        "example": "",
        "sourceLength": 1302,
        "url": "https://learn.microsoft.com/en-us/kusto/query/treepath-function"
      }
    },
    {
      "name": "trim",
      "category": "Function",
      "documentation": {
        "title": "trim()",
        "description": "Removes all leading and trailing matches of the specified regular expression.",
        "syntax": "`trim(`*regex*`,` *source*`)`",
        "returnInfo": "*source* after trimming matches of *regex* found in the beginning and/or the end of *source*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *regex* | `string` |  *True* | The string or regular expression to be trimmed from *source*.|\n| *source* | `string` |  *True* | The source string from which to trim *regex*.|",
        "example": "",
        "sourceLength": 3445,
        "url": "https://learn.microsoft.com/en-us/kusto/query/trim-function"
      }
    },
    {
      "name": "trim_end",
      "category": "Function",
      "documentation": {
        "title": "trim_end()",
        "description": "Removes trailing match of the specified regular expression.",
        "syntax": "`trim_end(`*regex*`,` *source*`)`",
        "returnInfo": "*source* after trimming matches of *regex* found in the end of *source*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *regex* | `string` |  *True* | The string or regular expression to be trimmed from the end of *source*.|\n| *source* | `string` |  *True* | The source string from which to trim *regex*.|",
        "example": "let string_to_trim = @\"bing.com\";\nlet substring = \".com\";\nprint string_to_trim = string_to_trim,trimmed_string = trim_end(substring,string_to_trim)",
        "sourceLength": 3316,
        "url": "https://learn.microsoft.com/en-us/kusto/query/trim-end-function"
      }
    },
    {
      "name": "trim_start",
      "category": "Function",
      "documentation": {
        "title": "trim_start()",
        "description": "Removes leading match of the specified regular expression.",
        "syntax": "`trim_start(`*regex*`,` *source*`)`",
        "returnInfo": "*source* after trimming match of *regex* found in the beginning of *source*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *regex* | `string` |  *True* | The string or regular expression to be trimmed from the beginning of *source*.|\n| *source* | `string` |  *True* | The source string from which to trim *regex*.|",
        "example": "",
        "sourceLength": 3373,
        "url": "https://learn.microsoft.com/en-us/kusto/query/trim-start-function"
      }
    },
    {
      "name": "unicode_codepoints_from_string",
      "category": "Function",
      "documentation": {
        "title": "unicode_codepoints_from_string()",
        "description": "Returns a dynamic array of the Unicode codepoints of the input string. This function is the inverse operation of `unicode_codepoints_to_string()` function.\n\n> **Deprecated aliases:** to_utf8()",
        "syntax": "`unicode_codepoints_from_string(`*value*`)`",
        "returnInfo": "Returns a dynamic array of the Unicode codepoints of the characters that make up the string provided to this function.\nSee `unicode_codepoints_to_string()`)",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *value* | `string` |  *True* | The source string to convert. |",
        "example": "print arr = unicode_codepoints_from_string(\"⒦⒰⒮⒯⒪\")\n\nprint arr = unicode_codepoints_from_string(\"קוסטו - Kusto\")\n\nprint str = unicode_codepoints_to_string(unicode_codepoints_from_string(\"Kusto\"))",
        "sourceLength": 2817,
        "url": "https://learn.microsoft.com/en-us/kusto/query/unicode-codepoints-from-string-function"
      }
    },
    {
      "name": "unicode_codepoints_to_string",
      "category": "Function",
      "documentation": {
        "title": "unicode_codepoints_to_string()",
        "description": "Returns the string represented by the Unicode codepoints. This function is the inverse operation of `unicode_codepoints_from_string()` function.\n\n> **Deprecated aliases:** make_string()",
        "syntax": "`unicode_codepoints_to_string (`*values*`)`",
        "returnInfo": "Returns the string made of the UTF characters whose Unicode codepoint value is provided by the arguments to this function. The input must consist of valid Unicode codepoints.\nIf any argument isn't a valid Unicode codepoint, the function returns `null`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *values* | int, long, or dynamic |  *True* | One or more comma-separated values to convert. The values may also be a dynamic array.|\n\n> \n> This function receives up to 64 arguments.",
        "example": "print str = unicode_codepoints_to_string(75, 117, 115, 116, 111)\n\nprint str = unicode_codepoints_to_string(dynamic([75, 117, 115, 116, 111]))\n\nprint str = unicode_codepoints_to_string(dynamic([75, 117, 115]), 116, 111)\n\nprint str = unicode_codepoints_to_string(75, 10, 117, 10, 115, 10, 116, 10, 111)\n\nprint str = unicode_codepoints_to_string(range(48,57), range(65,90), range(97,122))",
        "sourceLength": 3959,
        "url": "https://learn.microsoft.com/en-us/kusto/query/unicode-codepoints-to-string-function"
      }
    },
    {
      "name": "unixtime_microseconds_todatetime",
      "category": "Function",
      "documentation": {
        "title": "unixtime_microseconds_todatetime()",
        "description": "Converts unix-epoch microseconds to UTC datetime.",
        "syntax": "`unixtime_microseconds_todatetime(`*microseconds*`)`",
        "returnInfo": "If the conversion is successful, the result is a datetime value. Otherwise, the result is null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *microseconds* | `real` |  *True* | The epoch timestamp in microseconds. A `datetime` value that occurs before the epoch time (1970-01-01 00:00:00) has a negative timestamp value.|",
        "example": "print date_time = unixtime_microseconds_todatetime(1546300800000000)",
        "sourceLength": 2115,
        "url": "https://learn.microsoft.com/en-us/kusto/query/unixtime-microseconds-todatetime-function"
      }
    },
    {
      "name": "unixtime_milliseconds_todatetime",
      "category": "Function",
      "documentation": {
        "title": "unixtime_milliseconds_todatetime()",
        "description": "Converts unix-epoch milliseconds to UTC datetime.",
        "syntax": "`unixtime_milliseconds_todatetime(`*milliseconds*`)`",
        "returnInfo": "If the conversion is successful, the result is a datetime value. Otherwise, the result is null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *milliseconds* | `real` |  *True* | The epoch timestamp in microseconds. A `datetime` value that occurs before the epoch time (1970-01-01 00:00:00) has a negative timestamp value.|",
        "example": "print date_time = unixtime_milliseconds_todatetime(1546300800000)",
        "sourceLength": 2112,
        "url": "https://learn.microsoft.com/en-us/kusto/query/unixtime-milliseconds-todatetime-function"
      }
    },
    {
      "name": "unixtime_nanoseconds_todatetime",
      "category": "Function",
      "documentation": {
        "title": "unixtime_nanoseconds_todatetime()",
        "description": "Converts unix-epoch nanoseconds to UTC datetime.",
        "syntax": "`unixtime_nanoseconds_todatetime(`*nanoseconds*`)`",
        "returnInfo": "If the conversion is successful, the result is a datetime value. Otherwise, the result is null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *nanoseconds* | `real` |  *True* | The epoch timestamp in nanoseconds. A `datetime` value that occurs before the epoch time (1970-01-01 00:00:00) has a negative timestamp value.|",
        "example": "print date_time = unixtime_nanoseconds_todatetime(1546300800000000000)",
        "sourceLength": 2107,
        "url": "https://learn.microsoft.com/en-us/kusto/query/unixtime-nanoseconds-todatetime-function"
      }
    },
    {
      "name": "unixtime_seconds_todatetime",
      "category": "Function",
      "documentation": {
        "title": "unixtime_seconds_todatetime()",
        "description": "Converts unix-epoch seconds to UTC datetime.",
        "syntax": "`unixtime_seconds_todatetime(`*seconds*`)`",
        "returnInfo": "If the conversion is successful, the result is a datetime value. Otherwise, the result is null.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *seconds* | `real` |  *True* | The epoch timestamp in seconds. A `datetime` value that occurs before the epoch time (1970-01-01 00:00:00) has a negative timestamp value.|",
        "example": "print date_time = unixtime_seconds_todatetime(1546300800)",
        "sourceLength": 2066,
        "url": "https://learn.microsoft.com/en-us/kusto/query/unixtime-seconds-todatetime-function"
      }
    },
    {
      "name": "url_decode",
      "category": "Function",
      "documentation": {
        "title": "url_decode()",
        "description": "The function converts an encoded URL into a regular URL representation.\n\nFor more information about URL encoding and decoding, see Percent-encoding.",
        "syntax": "`url_decode(`*encoded_url*`)`",
        "returnInfo": "URL (string) in a regular representation.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *encoded_url* | `string` |  *True* | The encoded URL to decode.|",
        "example": "let url = @'https%3a%2f%2fwww.bing.com%2f';\nprint original = url, decoded = url_decode(url)",
        "sourceLength": 1640,
        "url": "https://learn.microsoft.com/en-us/kusto/query/url-decode-function"
      }
    },
    {
      "name": "url_encode",
      "category": "Function",
      "documentation": {
        "title": "url_encode()",
        "description": "The function converts characters of the input URL into a format that can be transmitted over the internet.\nDiffers from url_encode_component by encoding spaces as '+' and not as '%20' (see application/x-www-form-urlencoded here).\n\nFor more information about URL encoding and decoding, see Percent-encoding.",
        "syntax": "`url_encode(`*url*`)`",
        "returnInfo": "URL (string) converted into a format that can be transmitted over the Internet.",
        "parametersTable": "|Name|Type|Required|Description|\n|:--|:--|:--|:--|\n|*url*| `string` | *True*|The URL to encode.|",
        "example": "let url = @'https://www.bing.com/hello world';\nprint original = url, encoded = url_encode(url)",
        "sourceLength": 1927,
        "url": "https://learn.microsoft.com/en-us/kusto/query/url-encode-function"
      }
    },
    {
      "name": "url_encode_component",
      "category": "Function",
      "documentation": {
        "title": "url_encode_component()",
        "description": "The function converts characters of the input URL into a format that can be transmitted over the internet. Differs from url_encode by encoding spaces as '%20' and not as '+'.\n\nFor more information about URL encoding and decoding, see Percent-encoding.",
        "syntax": "`url_encode_component(`*url*`)`",
        "returnInfo": "URL (string) converted into a format that can be transmitted over the Internet.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *url* | `string` |  *True* | The URL to encode.|",
        "example": "let url = @'https://www.bing.com/hello world/';\nprint original = url, encoded = url_encode_component(url)",
        "sourceLength": 1889,
        "url": "https://learn.microsoft.com/en-us/kusto/query/url-encode-component-function"
      }
    },
    {
      "name": "week_of_year",
      "category": "Function",
      "documentation": {
        "title": "week_of_year()",
        "description": "Returns an integer that represents the week number. The week number is calculated from the first week of a year, which is the one that includes the first Thursday, according to ISO 8601.\n\n **Deprecated aliases:** weekofyear()\n\n> \n> `weekofyear()` wasn't ISO 8601 compliant; the first week of a year was defined as the week with the year's first Wednesday in it.",
        "syntax": "`week_of_year(`*date*`)`",
        "returnInfo": "`week number` - The week number that contains the given date.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *date* | `datetime` |  *True* | The date for which to return the week of the year.|",
        "example": "",
        "sourceLength": 2234,
        "url": "https://learn.microsoft.com/en-us/kusto/query/week-of-year-function"
      }
    },
    {
      "name": "welch_test",
      "category": "Function",
      "documentation": {
        "title": "welch_test()",
        "description": "Computes the p_value of the Welch-test function",
        "syntax": "`welch_test(`*mean1*`,` *variance1*`,` *count1*`,` *mean2*`,` *variance2*`,` *count2*`)`",
        "returnInfo": "From Wikipedia:\n\nIn statistics, Welch's t-test is a two-sample location test that's used to test the hypothesis that two populations have equal means.\nWelch's t-test is an adaptation of Student's t-test, and is more reliable when the two samples have unequal variances and unequal sample sizes. These tests are often referred to as \"unpaired\" or \"independent samples\" t-tests.\nThe tests are typically applied when the statistical units underlying the two samples being compared are non-overlapping.\nWelch's t-test is less popular than Student's t-test, and may be less familiar to readers. The test is also called \"Welch's unequal variances t-test\", or \"unequal variances t-test\".",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *mean1* | real or long |  *True* | The mean (average) value of the first series.|\n| *variance1* | real or long |  *True* | The variance value of the first series.|\n| *count1* | real or long |  *True* | The count of values in the first series.|\n| *mean2* | real or long |  *True* | The mean (average) value of the second series.|\n| *variance2* | real or long |  *True* | The variance value of the second series.|\n| *count2* | real or long |  *True* | The count of values in the second series.|",
        "example": "// s1, s2 values are from https://en.wikipedia.org/wiki/Welch%27s_t-test\nprint\n    s1 = dynamic([27.5, 21.0, 19.0, 23.6, 17.0, 17.9, 16.9, 20.1, 21.9, 22.6, 23.1, 19.6, 19.0, 21.7, 21.4]),\n    s2 = dynamic([27.1, 22.0, 20.8, 23.4, 23.4, 23.5, 25.8, 22.0, 24.8, 20.2, 21.9, 22.1, 22.9, 20.5, 24.4])\n| mv-expand s1 to typeof(double), s2 to typeof(double)\n| summarize m1=avg(s1), v1=variance(s1), c1=count(), m2=avg(s2), v2=variance(s2), c2=count()\n| extend pValue=welch_test(m1,v1,c1,m2,v2,c2)\n// pValue = 0.021",
        "sourceLength": 3294,
        "url": "https://learn.microsoft.com/en-us/kusto/query/welch-test-function"
      }
    },
    {
      "name": "zip",
      "category": "Function",
      "documentation": {
        "title": "zip()",
        "description": "The `zip` function accepts any number of `dynamic` arrays, and returns an\narray whose elements are each an array holding the elements of the input\narrays of the same index.",
        "syntax": "`zip(`*arrays*`)`",
        "returnInfo": "",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *arrays* | `dynamic` |  *True* | The dynamic array values to zip. The function accepts between 2-16 arrays.|",
        "example": "print zip(dynamic([1,3,5]), dynamic([2,4,6]))\n\nprint zip(dynamic([\"A\", 1, 1.5]), dynamic([{}, \"B\"]))\n\ndatatable(a:int, b:string) [1,\"one\",2,\"two\",3,\"three\"]\n| summarize a = make_list(a), b = make_list(b)\n| project zip(a, b)",
        "sourceLength": 2369,
        "url": "https://learn.microsoft.com/en-us/kusto/query/zip-function"
      }
    },
    {
      "name": "arg_max",
      "category": "Aggregation function",
      "documentation": {
        "title": "arg_max()",
        "description": "Finds a row in the table that maximizes the specified expression. It returns all columns of the input table or specified columns.\n\n> **Deprecated aliases:** argmax()",
        "syntax": "`arg_max` `(`*ExprToMaximize*`,` *\\** | *ExprToReturn*  [`,` ...]`)`",
        "returnInfo": "Returns a row in the table that maximizes the specified expression *ExprToMaximize*, and the values of columns specified in *ExprToReturn*.\n\n> \n> To see the maximal value only, use the max() function.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ExprToMaximize* | `string` |  *True* | The expression for which the maximum value is determined. |\n| *ExprToReturn* | `string` |  *True* | The expression determines which columns' values are returned, from the row that has the maximum value for *ExprToMaximize*.  Use a wildcard `*` to return all columns. |",
        "example": "",
        "sourceLength": 7861,
        "url": "https://learn.microsoft.com/en-us/kusto/query/arg-max-aggregation-function"
      }
    },
    {
      "name": "arg_min",
      "category": "Aggregation function",
      "documentation": {
        "title": "arg_min()",
        "description": "Finds a row in the table that minimizes the specified expression. It returns all columns of the input table or specified columns.\n\n> **Deprecated aliases:** argmin()",
        "syntax": "`arg_min` `(`*ExprToMinimize*`,` *\\** | *ExprToReturn*  [`,` ...]`)`",
        "returnInfo": "Returns a row in the table that minimizes *ExprToMinimize*, and the values of columns specified in *ExprToReturn*. Use or `*` to return the entire row.\n\n> \n> To see the minimal value only, use the min() function.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *ExprToMinimize*| `string` |  *True* | The expression for which the minimum value is determined. |\n| *ExprToReturn* | `string` |  *True* | The expression determines which columns' values are returned, from the row that has the minimum value for *ExprToMinimize*.  Use a wildcard `*` to return all columns. |\n\nWhen *ExprToMinimize* is null for all rows in a table, one row in the table is picked. Otherwise, rows where *ExprToMinimize* is null are ignored.",
        "example": "StormEvents \n| summarize arg_min(BeginLat, BeginLocation) by State\n\nStormEvents\n| where DeathsDirect > 0\n| summarize arg_min(StartTime, *) by State\n\ndatatable(Fruit: string, Color: string, Version: int) [\n    \"Apple\", \"Red\", 1,\n    \"Apple\", \"Green\", int(null),\n    \"Banana\", \"Yellow\", int(null),\n    \"Banana\", \"Green\", int(null),\n    \"Pear\", \"Brown\", 1,\n    \"Pear\", \"Green\", 2,\n]\n| summarize arg_min(Version, *) by Fruit",
        "sourceLength": 7632,
        "url": "https://learn.microsoft.com/en-us/kusto/query/arg-min-aggregation-function"
      }
    },
    {
      "name": "avg",
      "category": "Aggregation function",
      "documentation": {
        "title": "avg()",
        "description": "Calculates the average (arithmetic mean) of *expr* across the group.",
        "syntax": "`avg(`*expr*`)`",
        "returnInfo": "Returns the average value of *expr* across the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for aggregation calculation. Records with `null` values are ignored and not included in the calculation. |",
        "example": "StormEvents\n| summarize AvgDamageToCrops = avg(DamageCrops) by State",
        "sourceLength": 2566,
        "url": "https://learn.microsoft.com/en-us/kusto/query/avg-aggregation-function"
      }
    },
    {
      "name": "avgif",
      "category": "Aggregation function",
      "documentation": {
        "title": "avgif()",
        "description": "Calculates the average of *expr* in records for which *predicate* evaluates to `true`.",
        "syntax": "`avgif` `(`*expr*`,` *predicate*`)`",
        "returnInfo": "Returns the average value of *expr* in records where *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for aggregation calculation. Records with `null` values are ignored and not included in the calculation. |\n| *predicate* | `string` |  *True* | The predicate that if true, the *expr* calculated value is added to the average. |",
        "example": "StormEvents\n| summarize Averagedamage=tolong(avg( DamageCrops)),AverageWhenDamage=tolong(avgif(DamageCrops,DamageCrops >0)) by State",
        "sourceLength": 3158,
        "url": "https://learn.microsoft.com/en-us/kusto/query/avgif-aggregation-function"
      }
    },
    {
      "name": "binary_all_and",
      "category": "Aggregation function",
      "documentation": {
        "title": "binary_all_and()",
        "description": "Accumulates values using the binary `AND` operation for each summarization group, or in total if a group isn't specified.",
        "syntax": "`binary_all_and` `(`*expr*`)`",
        "returnInfo": "Returns an aggregated value using the binary `AND` operation over records for each summarization group, or in total if a group isn't specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `long` |  *True* | The value used for the binary `AND`  calculation. |",
        "example": "datatable(num:long)\n[\n  0xFFFFFFFF, \n  0xFFFFF00F,\n  0xCFFFFFFD,\n  0xFAFEFFFF,\n]\n| summarize result = toupper(tohex(binary_all_and(num)))",
        "sourceLength": 2209,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-all-and-aggregation-function"
      }
    },
    {
      "name": "binary_all_or",
      "category": "Aggregation function",
      "documentation": {
        "title": "binary_all_or()",
        "description": "Accumulates values using the binary `OR` operation for each summarization group, or in total if a group isn't specified.",
        "syntax": "`binary_all_or` `(`*expr*`)`",
        "returnInfo": "Returns an aggregated value using the binary `OR` operation over records for each summarization group, or in total if a group isn't specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `long` |  *True* | The value used for the binary `OR`  calculation. |",
        "example": "datatable(num:long)\n[\n  0x88888008,\n  0x42000000,\n  0x00767000,\n  0x00000005, \n]\n| summarize result = toupper(tohex(binary_all_or(num)))",
        "sourceLength": 2258,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-all-or-aggregation-function"
      }
    },
    {
      "name": "binary_all_xor",
      "category": "Aggregation function",
      "documentation": {
        "title": "binary_all_xor()",
        "description": "Accumulates values using the binary `XOR` operation for each summarization group, or in total if a group is not specified.",
        "syntax": "`binary_all_xor` `(`*expr*`)`",
        "returnInfo": "Returns a value that is aggregated using the binary `XOR` operation over records for each summarization group, or in total if a group isn't specified.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `long` |  *True* | The value used for the binary `XOR`  calculation. |",
        "example": "datatable(num:long)\n[\n  0x44404440,\n  0x1E1E1E1E,\n  0x90ABBA09,\n  0x000B105A,\n]\n| summarize result = toupper(tohex(binary_all_xor(num)))",
        "sourceLength": 2248,
        "url": "https://learn.microsoft.com/en-us/kusto/query/binary-all-xor-aggregation-function"
      }
    },
    {
      "name": "count",
      "category": "Aggregation function",
      "documentation": {
        "title": "count()",
        "description": "Counts the number of records per summarization group, or total if summarization is done without grouping.",
        "syntax": "`count()`",
        "returnInfo": "Returns a count of the records per summarization group, or in total if summarization is done without grouping.",
        "parametersTable": "",
        "example": "StormEvents\n| summarize Count=count() by State",
        "sourceLength": 2436,
        "url": "https://learn.microsoft.com/en-us/kusto/query/count-aggregation-function"
      }
    },
    {
      "name": "count_distinct",
      "category": "Aggregation function",
      "documentation": {
        "title": "count_distinct()",
        "description": "Counts unique values specified by the scalar expression per summary group, or the total number of unique values if the summary group is omitted.\n\nIf you only need an estimation of unique values count, we recommend using the less resource-consuming `dcount` aggregation function.\n\nTo count only records for which a predicate returns `true`, use the count_distinctif aggregation function.\n\n> \n>\n> * This function is limited to 100M unique values. An attempt to apply the function on an expression returning too many values produce a runtime error (HRESULT: 0x80DA0012).\n:::moniker range=\"azure-data-explorer\"\n> * Function performance can be degraded when operating on multiple data sources from different clusters.\n::: moniker-end\n:::moniker range=\"microsoft-fabric\"\n> * Function performance can be degraded when operating on multiple data sources from different Eventhouses.\n::: moniker-end",
        "syntax": "`count_distinct` `(`*expr*`)`",
        "returnInfo": "Long integer value indicating the number of unique values of *expr* per summary group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr*| scalar |  *True* | The expression whose unique values are to be counted. |",
        "example": "StormEvents\n| summarize UniqueEvents=count_distinct(EventType) by State\n| top 5 by UniqueEvents",
        "sourceLength": 3433,
        "url": "https://learn.microsoft.com/en-us/kusto/query/count-distinct-aggregation-function"
      }
    },
    {
      "name": "count_distinctif",
      "category": "Aggregation function",
      "documentation": {
        "title": "count_distinctif()",
        "description": "Conditionally counts unique values specified by the scalar expression per summary group, or the total number of unique values if the summary group is omitted. Only records for which *predicate* evaluates to `true` are counted.\n\nIf you only need an estimation of unique values count, we recommend using the less resource-consuming dcountif aggregation function.\n\n> \n>\n> * This function is limited to 100M unique values. An attempt to apply the function on an expression returning too many values produces a runtime error (HRESULT: 0x80DA0012).\n:::moniker range=\"azure-data-explorer\"\n> * Function performance can be degraded when operating on multiple data sources from different clusters.\n::: moniker-end\n:::moniker range=\"microsoft-fabric\"\n> * Function performance can be degraded when operating on multiple data sources from different Eventhouses.\n::: moniker-end",
        "syntax": "`count_distinctif` `(`*expr*`,` *predicate*`)`",
        "returnInfo": "Integer value indicating the number of unique values of *expr* per summary group, for all records for which the *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr*| scalar |  *True* | The expression whose unique values are to be counted. |\n| *predicate* | `string` |  *True* | The expression used to filter records to be aggregated. |",
        "example": "StormEvents\n| summarize UniqueFatalEvents=count_distinctif(EventType,(DeathsDirect + DeathsIndirect)>0) by State\n| where UniqueFatalEvents > 0\n| top 5 by UniqueFatalEvents",
        "sourceLength": 3749,
        "url": "https://learn.microsoft.com/en-us/kusto/query/count-distinctif-aggregation-function"
      }
    },
    {
      "name": "countif",
      "category": "Aggregation function",
      "documentation": {
        "title": "countif()",
        "description": "Counts the rows in which *predicate* evaluates to `true`.",
        "syntax": "`countif` `(`*predicate*`)`",
        "returnInfo": "Returns a count of rows in which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *predicate*| `string` |  *True* | The expression used for aggregation calculation. The value can be any scalar expression with a return type of bool.",
        "example": "",
        "sourceLength": 3137,
        "url": "https://learn.microsoft.com/en-us/kusto/query/countif-aggregation-function"
      }
    },
    {
      "name": "covariance",
      "category": "Aggregation function",
      "documentation": {
        "title": "covariance()",
        "description": "Calculates the sample covariance of two random variables *expr1* and *expr2*.\n\nThe following formula is used:",
        "syntax": "`covariance(`*expr1* `,` *expr2 `)`",
        "returnInfo": "Returns the covariance value of *expr1* and *expr2*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr1* | `real` |  *True* | First random variable expression.|\n|*expr2* | `real` |  *True* | Second random variable expression.|",
        "example": "datatable(x:real, y:real) [\n    1.0, 14.0,\n    2.0, 10.0,\n    3.0, 17.0,\n    4.0, 20.0,\n    5.0, 50.0,\n]\n| summarize covariance(x, y)",
        "sourceLength": 2099,
        "url": "https://learn.microsoft.com/en-us/kusto/query/covariance-aggregation-function"
      }
    },
    {
      "name": "covarianceif",
      "category": "Aggregation function",
      "documentation": {
        "title": "covarianceif()",
        "description": "Calculates the sample covariance of two random variables *expr1* and *expr2* in records for which *predicate* evaluates to `true`.\n\nThe following formula is used:",
        "syntax": "`covarianceif(`*expr1* `,` *expr2 `,` *predicate*`)`",
        "returnInfo": "Returns the covariance value of *expr1* and *expr2* in records for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr1* | `real` |  *True* | First random variable expression.|\n|*expr2* | `real` |  *True* | Second random variable expression.|\n|*predicate*| `string` |  *True* | If *predicate* evaluates to `true`, values of *expr1* and *expr2* will be added to the covariance.|",
        "example": "range x from 1 to 100 step 1\n| extend y = iff(x % 2 == 0, x * 2, x * 3)\n| summarize covarianceif(x, y, x % 3 == 0)",
        "sourceLength": 2502,
        "url": "https://learn.microsoft.com/en-us/kusto/query/covarianceif-aggregation-function"
      }
    },
    {
      "name": "covariancep",
      "category": "Aggregation function",
      "documentation": {
        "title": "covariancep()",
        "description": "Calculates the population covariance of two random variables *expr1* and *expr2*.\n\nThe following formula is used:",
        "syntax": "`covariancep(`*expr1* `,` *expr2* `)`",
        "returnInfo": "Returns the covariance value of *expr1* and *expr2*.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr1* | `real` |  *True* | First random variable expression.|\n|*expr2* | `real` |  *True* | Second random variable expression.|",
        "example": "datatable(x:real, y:real) [\n    1.0, 14.0,\n    2.0, 10.0,\n    3.0, 17.0,\n    4.0, 20.0,\n    5.0, 50.0,\n]\n| summarize covariancep(x, y)",
        "sourceLength": 2071,
        "url": "https://learn.microsoft.com/en-us/kusto/query/covariancep-aggregation-function"
      }
    },
    {
      "name": "covariancepif",
      "category": "Aggregation function",
      "documentation": {
        "title": "covariancepif()",
        "description": "Calculates the sample covariance of two random variables *expr1* and *expr2* in records for which *predicate* evaluates to `true`.\n\nThe following formula is used:",
        "syntax": "`covariancepif(`*expr1* `,` *expr2 `,` *predicate*`)`",
        "returnInfo": "Returns the covariance value of *expr1* and *expr2* in records for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr1* | `real` |  *True* | First random variable expression.|\n|*expr2* | `real` |  *True* | Second random variable expression.|\n|*predicate*| `string` |  *True* | If *predicate* evaluates to `true`, values of *expr1* and *expr2* will be added to the covariance.|",
        "example": "range x from 1 to 100 step 1\n| extend y = iff(x % 2 == 0, x * 2, x * 3)\n| summarize covariancepif(x, y, x % 3 == 0)",
        "sourceLength": 2612,
        "url": "https://learn.microsoft.com/en-us/kusto/query/covariancepif-aggregation-function"
      }
    },
    {
      "name": "dcount",
      "category": "Aggregation function",
      "documentation": {
        "title": "dcount()",
        "description": "Calculates an estimate of the number of distinct values that are taken by a scalar expression in the summary group.\n\n> \n> The `dcount()` aggregation function is primarily useful for estimating the cardinality of huge sets. It trades accuracy for performance, and might return a result that varies between executions. The order of inputs might have an effect on its output.",
        "syntax": "`dcount` `(`*expr*[`,` *accuracy*]`)`",
        "returnInfo": "Returns an estimate of the number of distinct values of *expr* in the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr*| `string` |  *True* | The input whose distinct values are to be counted. |\n| *accuracy* | `int` |   | The value that defines the requested estimation accuracy. The default value is `1`. See Estimation accuracy for supported values. |",
        "example": "StormEvents\n| summarize DifferentEvents=dcount(EventType) by State\n| order by DifferentEvents",
        "sourceLength": 3292,
        "url": "https://learn.microsoft.com/en-us/kusto/query/dcount-aggregation-function"
      }
    },
    {
      "name": "dcountif",
      "category": "Aggregation function",
      "documentation": {
        "title": "dcountif()",
        "description": "Estimates the number of distinct values of *expr* for rows in which *predicate* evaluates to `true`.",
        "syntax": "`dcountif` `(`*expr*, *predicate*, [`,` *accuracy*]`)`",
        "returnInfo": "Returns an estimate of the number of distinct values of *expr* for rows in which *predicate* evaluates to `true`.\n\n> \n> `dcountif()` might return an error in cases where all, or none of the rows pass the `Predicate` expression.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *predicate* | `string` |  *True* | The expression used to filter rows. |\n| *accuracy* | `int` |  | The control between speed and accuracy. If unspecified, the default value is `1`. See Estimation accuracy for supported values. |",
        "example": "StormEvents\n| summarize DifferentFatalEvents=dcountif(EventType,(DeathsDirect + DeathsIndirect)>0) by State\n| where DifferentFatalEvents > 0\n| order by DifferentFatalEvents",
        "sourceLength": 3430,
        "url": "https://learn.microsoft.com/en-us/kusto/query/dcountif-aggregation-function"
      }
    },
    {
      "name": "hll",
      "category": "Aggregation function",
      "documentation": {
        "title": "hll()",
        "description": "The `hll()` function is a way to estimate the number of unique values in a set of values. It does so by calculating intermediate results for aggregation within the summarize operator for a group of data using the `dcount` function.\n\nRead about the underlying algorithm (*H*yper*L*og*L*og) and the estimation accuracy.",
        "syntax": "`hll` `(`*expr* [`,` *accuracy*]`)`",
        "returnInfo": "Returns the intermediate results of distinct count of *expr* across the group.\n\n> \n> - The results of hll(), hll_if(), and hll_merge() can be stored and later retrieved. For example, you might want to create a daily unique user summary, which can then be used to calculate weekly counts.\n> However, the precise binary representation of these results might change over time. There's no guarantee that these functions produce identical results for identical inputs, and therefore we don't advise relying on them.\n> - Use the hll_merge function to merge the results of multiple `hll()` functions.\n> - Use the dcount_hll function to calculate the number of distinct values from the output of the `hll()` or `hll_merge` functions.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *accuracy* | `int` |   | The value that controls the balance between speed and accuracy. If unspecified, the default value is `1`. For supported values, see Estimation accuracy. |",
        "example": "StormEvents\n| summarize hll(DamageProperty) by bin(StartTime,10m)",
        "sourceLength": 4198,
        "url": "https://learn.microsoft.com/en-us/kusto/query/hll-aggregation-function"
      }
    },
    {
      "name": "make_bag",
      "category": "Aggregation function",
      "documentation": {
        "title": "make_bag()",
        "description": "Creates a `dynamic` JSON property bag (dictionary) of all the values of *expr* in the group.",
        "syntax": "`make_bag` `(`*expr* [`,` *maxSize*]`)`",
        "returnInfo": "Returns a `dynamic` JSON property bag (dictionary) of all the values of *Expr* in the group, which are property bags. Nondictionary values are skipped.\nIf a key appears in more than one row, an arbitrary value, out of the possible values for this key, is selected.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `dynamic` |  *True* | The expression used for the aggregation calculation. |\n| *maxSize* | `int` |  | The limit on the maximum number of elements returned. The default and max value is 1048576. |\n\n> \n> `make_dictionary()` has been deprecated in favor of `make_bag()`. The legacy version has a default *maxSize* limit of 128.",
        "example": "let T = datatable(prop:string, value:string)\n[\n    \"prop01\", \"val_a\",\n    \"prop02\", \"val_b\",\n    \"prop03\", \"val_c\",\n];\nT\n| extend p = bag_pack(prop, value)\n| summarize dict=make_bag(p)\n\nlet T = datatable(prop:string, value:string)\n[\n    \"prop01\", \"val_a\",\n    \"prop02\", \"val_b\",\n    \"prop03\", \"val_c\",\n];\nT\n| extend p = bag_pack(prop, value)\n| summarize bag=make_bag(p)\n| evaluate bag_unpack(bag)",
        "sourceLength": 3630,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-bag-aggregation-function"
      }
    },
    {
      "name": "make_bag_if",
      "category": "Aggregation function",
      "documentation": {
        "title": "make_bag_if()",
        "description": "Creates a `dynamic` JSON property bag (dictionary) of *expr* values in records for which *predicate* evaluates to `true`.",
        "syntax": "`make_bag_if(`*expr*`,` *predicate* [`,` *maxSize*]`)`",
        "returnInfo": "Returns a `dynamic` JSON property bag (dictionary) of *expr* values in records for which *predicate* evaluates to `true`. Nondictionary values are skipped.\nIf a key appears in more than one row, an arbitrary value, out of the possible values for this key, are selected.\n\n> \n> This function without the predicate is similar to `make_bag`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `dynamic` |  *True* | The expression used for the aggregation calculation. |\n| *predicate* | `bool` |  *True* | The predicate that evaluates to `true`, in order for *expr* to be added to the result. |\n| *maxSize* | `int` |  | The limit on the maximum number of elements returned. The default and max value is 1048576. |",
        "example": "let T = datatable(prop:string, value:string, predicate:bool)\n[\n    \"prop01\", \"val_a\", true,\n    \"prop02\", \"val_b\", false,\n    \"prop03\", \"val_c\", true\n];\nT\n| extend p = bag_pack(prop, value)\n| summarize dict=make_bag_if(p, predicate)\n\nlet T = datatable(prop:string, value:string, predicate:bool)\n[\n    \"prop01\", \"val_a\", true,\n    \"prop02\", \"val_b\", false,\n    \"prop03\", \"val_c\", true\n];\nT\n| extend p = bag_pack(prop, value)\n| summarize bag=make_bag_if(p, predicate)\n| evaluate bag_unpack(bag)",
        "sourceLength": 3963,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-bag-if-aggregation-function"
      }
    },
    {
      "name": "make_list",
      "category": "Aggregation function",
      "documentation": {
        "title": "make_list()",
        "description": "Creates a `dynamic` array of all the values of *expr* in the group.\n\n> **Deprecated aliases:** makelist()",
        "syntax": "`make_list(`*expr* [`,` *maxSize*]`)`",
        "returnInfo": "Returns a `dynamic` array of all the values of *expr* in the group.\nIf the input to the `summarize` operator isn't sorted, the order of elements in the resulting array is undefined.\nIf the input to the `summarize` operator is sorted, the order of elements in the resulting array tracks that of the input.\n\n> \n> Use the `array_sort_asc()` or `array_sort_desc()` function to create an ordered list by some key.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `dynamic` |  *True* | The expression used for the aggregation calculation. |\n| *maxSize* | `int` |  | The maximum number of elements returned. The default and max value is 1048576. |\n\n> \n> The deprecated version has a default *maxSize* limit of 128.",
        "example": "",
        "sourceLength": 5936,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-list-aggregation-function"
      }
    },
    {
      "name": "make_list_if",
      "category": "Aggregation function",
      "documentation": {
        "title": "make_list_if()",
        "description": "Creates a `dynamic` array of *expr* values in the group for which *predicate* evaluates to `true`.",
        "syntax": "`make_list_if(`*expr*`,` *predicate* [`,` *maxSize*]`)`",
        "returnInfo": "Returns a `dynamic` array of *expr* values in the group for which *predicate* evaluates to `true`.\nIf the input to the `summarize` operator isn't sorted, the order of elements in the resulting array is undefined.\nIf the input to the `summarize` operator is sorted, the order of elements in the resulting array tracks that of the input.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *predicate* | `string` |  *True* | A predicate that has to evaluate to `true` in order for *expr* to be added to the result. |\n| *maxSize* | integer |  | The maximum number of elements returned. The default and max value is 1048576. |",
        "example": "let T = datatable(name:string, day_of_birth:long)\n[\n   \"John\", 9,\n   \"Paul\", 18,\n   \"George\", 25,\n   \"Ringo\", 7\n];\nT\n| summarize make_list_if(name, strlen(name) > 4)",
        "sourceLength": 2786,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-list-if-aggregation-function"
      }
    },
    {
      "name": "make_set",
      "category": "Aggregation function",
      "documentation": {
        "title": "make_set()",
        "description": "Creates a `dynamic` array of the set of distinct values that *expr* takes in the group.\n\n> **Deprecated aliases:** makeset()",
        "syntax": "`make_set(`*expr* [`,` *maxSize*]`)`",
        "returnInfo": "Returns a `dynamic` array of the set of distinct values that *expr* takes in the group.\nThe array's sort order is undefined.\n\n> \n> To only count distinct values, use dcount() or count_distinct().",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *maxSize* | `int` |  | The maximum number of elements returned. The default and max value is 1048576. |\n\n> \n> The deprecated version has a default *maxSize* limit of 128.",
        "example": "",
        "sourceLength": 4929,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-set-aggregation-function"
      }
    },
    {
      "name": "make_set_if",
      "category": "Aggregation function",
      "documentation": {
        "title": "make_set_if()",
        "description": "Creates a `dynamic` array of the set of distinct values that *expr* takes in records for which *predicate* evaluates to `true`.",
        "syntax": "`make_set_if(`*expr*`,` *predicate* [`,` *maxSize*]`)`",
        "returnInfo": "Returns a `dynamic` array of the set of distinct values that *expr* takes in records for which *predicate* evaluates to `true`. The array's sort order is undefined.\n\n> \n> To only count the distinct values, use dcountif().",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *predicate* | `string` |  *True* | A predicate that has to evaluate to `true` in order for *expr* to be added to the result. |\n| *maxSize* | `int` |  | The maximum number of elements returned. The default and max value is 1048576. |",
        "example": "let T = datatable(name:string, day_of_birth:long)\n[\n   \"John\", 9,\n   \"Paul\", 18,\n   \"George\", 25,\n   \"Ringo\", 7\n];\nT\n| summarize make_set_if(name, strlen(name) > 4)",
        "sourceLength": 2889,
        "url": "https://learn.microsoft.com/en-us/kusto/query/make-set-if-aggregation-function"
      }
    },
    {
      "name": "max",
      "category": "Aggregation function",
      "documentation": {
        "title": "max()",
        "description": "Finds the maximum value of the expression in the table.",
        "syntax": "`max(`*expr*`)`",
        "returnInfo": "Returns the value in the table that maximizes the specified expression.\n\n> \n> This function gives you the max on its own. If you want to see other columns in addition to the max, use arg_max.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression for which the maximum value is determined. |",
        "example": "StormEvents\n| summarize LatestEvent=max(StartTime)",
        "sourceLength": 2098,
        "url": "https://learn.microsoft.com/en-us/kusto/query/max-aggregation-function"
      }
    },
    {
      "name": "maxif",
      "category": "Aggregation function",
      "documentation": {
        "title": "maxif()",
        "description": "Calculates the maximum value of *expr* in records for which *predicate* evaluates to `true`.\n\nSee also - max() function, which returns the maximum value across the group without predicate expression.",
        "syntax": "`maxif(`*expr*`,`*predicate*`)`",
        "returnInfo": "Returns the maximum value of *expr* in records for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *predicate* | `string` |  *True* | The expression used to filter rows. |",
        "example": "StormEvents\n| extend Damage=DamageCrops + DamageProperty, Deaths=DeathsDirect + DeathsIndirect\n| summarize MaxDamageNoCasualties=maxif(Damage, Deaths == 0) by State",
        "sourceLength": 2692,
        "url": "https://learn.microsoft.com/en-us/kusto/query/maxif-aggregation-function"
      }
    },
    {
      "name": "merge_tdigest",
      "category": "Function",
      "documentation": {
        "title": "merge_tdigest()",
        "description": "Merges `tdigest` results (scalar version of the aggregate version `tdigest_merge()`).\n\nRead more about the underlying algorithm (T-Digest) and the estimated error here.\n\n> The `merge_tdigest()` and `tdigest_merge()` functions are equivalent\n\n> \n>The results of tdigest() and tdigest_merge() can be stored and later retrieved. For example, you may want to create daily percentiles summary, which can then be used to calculate weekly percentiles.\n> However, the precise binary representation of these results may change over time. There's no guarantee that these functions will produce identical results for identical inputs, and therefore we don't advise relying on them.",
        "syntax": "`merge_tdigest(`*exprs*`)`",
        "returnInfo": "The result for merging the columns `*Expr1*`, `*Expr2*`, ... `*ExprN*` to one `tdigest`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *exprs* | `dynamic` |  *True* | One or more comma-separated column references that have the `tdigest` values to be merged. |",
        "example": "range x from 1 to 10 step 1 \n| extend y = x + 10\n| summarize tdigestX = tdigest(x), tdigestY = tdigest(y)\n| project merged = merge_tdigest(tdigestX, tdigestY)\n| project percentile_tdigest(merged, 100, typeof(long))",
        "sourceLength": 2457,
        "url": "https://learn.microsoft.com/en-us/kusto/query/merge-tdigest-function"
      }
    },
    {
      "name": "min",
      "category": "Aggregation function",
      "documentation": {
        "title": "min()",
        "description": "Finds the minimum value of the expression in the table.",
        "syntax": "`min` `(`*expr*`)`",
        "returnInfo": "Returns the minimum value of *expr* across the table.\n\n> \n> This gives you the min on its own. If you want to see other columns in addition to the min, use arg_min.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression for which the minimum value is determined. |",
        "example": "StormEvents\n| summarize FirstEvent=min(StartTime)",
        "sourceLength": 1976,
        "url": "https://learn.microsoft.com/en-us/kusto/query/min-aggregation-function"
      }
    },
    {
      "name": "minif",
      "category": "Aggregation function",
      "documentation": {
        "title": "minif()",
        "description": "Returns the minimum of *Expr* in records for which *Predicate* evaluates to `true`.\n\n* Can be used only in context of aggregation inside summarize\n\nSee also - min() function, which returns the minimum value across the group without predicate expression.",
        "syntax": "`minif` `(`*Expr*`,`*Predicate*`)`",
        "returnInfo": "The minimum value of *Expr* in records for which *Predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *Expr* | `string` |  *True* | Expression that will be used for aggregation calculation. |\n| *Predicate* | `string` |  *True* | Expression that will be used to filter rows. |",
        "example": "StormEvents\n| extend Damage=DamageCrops+DamageProperty, Deaths=DeathsDirect+DeathsIndirect\n| summarize MinDamageWithCasualties=minif(Damage,(Deaths >0) and (Damage >0)) by State \n| where MinDamageWithCasualties >0 and isnotnull(MinDamageWithCasualties)",
        "sourceLength": 2806,
        "url": "https://learn.microsoft.com/en-us/kusto/query/minif-aggregation-function"
      }
    },
    {
      "name": "percentiles",
      "category": "Aggregation function",
      "documentation": {
        "title": "percentile(), percentiles()",
        "description": "The `percentile()` function calculates an estimate for the specified nearest-rank percentile of the population defined by *expr*.\nThe accuracy depends on the density of population in the region of the percentile.\n\n`percentiles()` works similarly to `percentile()`. However, `percentiles()` can calculate multiple percentile values at once, which is more efficient than calculating each percentile value separately.\n\nTo calculate weighted percentiles, see percentilesw().",
        "syntax": "`percentile(`*expr*`,` *percentile*`)`\n\n`percentiles(`*expr*`,` *percentiles*`)`",
        "returnInfo": "Instead of returning the values in individual columns, use the `percentiles_array()` function to return the percentiles in a single column of dynamic array type.\n\n### Syntax\n\n`percentiles_array(`*expr*`,` *percentiles*`)`\n\n### Parameters\n\n| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for aggregation calculation.|\n|*percentiles*| real or dynamic |  *True*| One or more comma-separated percentiles or a dynamic array of percentiles. Each percentile must be a real value.|\n\n### Returns\n\nReturns an estimate for *expr* of the specified percentiles in the group as a single column of dynamic array type.\n\n### Examples\n\n#### Comma-separated percentiles\n\nMultiple percentiles can be obtained as an array in a single dynamic column, instead of in multiple columns as with percentiles().\n\n:::moniker range=\"azure-data-explorer\"\n> [!div class=\"nextstepaction\"]\n> <a href=\"https://dataexplorer.azure.com/clusters/help/databases/SampleIoTData?query=H4sIAAAAAAAAAwspSswrTssvyk1NCU7NK84vKnZJLEnk5apRKC7NzU0syqxKVShILUpOzSvJzEktjk8sKkqs1AhLzClN1VEw1VEwAmJTAx0FcyBtaaqpo5BYlg6R1lRIqlSAmOmXmJsKANY0tLFpAAAA\" target=\"_blank\">Run the query</a>\n::: moniker-end\n\n```kusto\nTransformedSensorsData\n| summarize percentiles_array(Value, 5, 25, 50, 75, 95), avg(Value) by SensorName\n```\n\n**Output**\n\nThe results table displays only the first 10 rows.\n\n|SensorName|percentiles_Value|avg_Value |\n|:--|:--|:--|\n|sensor-82|[\"0.048141473520867069\",\"0.24407515500271132\",\"0.48974511106780577\",\"0.74160998970950343\",\"0.94587903204190071\"]|0.493950914|\n|sensor-130|[\"0.049200214398937764\",\"0.25735850440187535\",\"0.51206374010048239\",\"0.74182335059053839\",\"0.95210342463616771\"]|0.505111463|\n|sensor-56|[\"0.04857779335488676\",\"0.24709868149337144\",\"0.49668762923789589\",\"0.74458470404241883\",\"0.94889104840865857\"]|0.497955018|\n|sensor-24|[\"0.051507199150534679\",\"0.24803904945640423\",\"0.50397070213183581\",\"0.75653888126010793\",\"0.9518782718727431\"]|0.501084379|\n|sensor-47|[\"0.045991246974755672\",\"0.24644331118208851\",\"0.48089197707088743\",\"0.74475142784472248\",\"0.9518322864959039\"]|0.49386228|\n|sensor-135|[\"0.05132897529660399\",\"0.24204987641954018\",\"0.48470113942206461\",\"0.74275730068433621\",\"0.94784079559229406\"]|0.494817619|\n|sensor-74|[\"0.048914714739047828\",\"0.25160926036445724\",\"0.49832498850160978\",\"0.75257887767110776\",\"0.94932261924236094\"]|0.501627252|\n|sensor-173|[\"0.048333149363009836\",\"0.26084250046756496\",\"0.51288012531934613\",\"0.74964772791583412\",\"0.95156058795294\"]|0.505401226|\n|sensor-28|[\"0.048511161184567046\",\"0.2547387968731824\",\"0.50101318228599656\",\"0.75693845702682039\",\"0.95243122486483989\"]|0.502066244|\n|sensor-34|[\"0.049980293859462954\",\"0.25094722564949412\",\"0.50914023067384762\",\"0.75571549713447961\",\"0.95176564809278674\"]|0.504309494|\n|...|...|...|\n\n#### Dynamic array of percentiles\n\nPercentiles for `percentiles_array` can be specified in a dynamic array of integer or floating-point numbers. The array must be constant but doesn't have to be literal.\n\n:::moniker range=\"azure-data-explorer\"\n> [!div class=\"nextstepaction\"]\n> <a href=\"https://dataexplorer.azure.com/clusters/help/databases/SampleIoTData?query=H4sIAAAAAAAAAwspSswrTssvyk1NCU7NK84vKnZJLEnkqlEoLs3NTSzKrEpVKEgtSk7NK8nMSS2OTywqSqzUCEvMKU3VUUipzEvMzUzWiDbVUTACYlMDHQVzIG1pGqupqaOQWJYOUampkFSpADHdLzE3FQAgg+RhcwAAAA==\" target=\"_blank\">Run the query</a>\n::: moniker-end\n\n```kusto\nTransformedSensorsData\n| summarize percentiles_array(Value, dynamic([5, 25, 50, 75, 95])), avg(Value) by SensorName\n```\n\n**Output**\n\nThe results table displays only the first 10 rows.\n\n|SensorName|percentiles_Value|avg_Value |\n|:--|:--|:--|\n|sensor-82|[\"0.048141473520867069\",\"0.24407515500271132\",\"0.48974511106780577\",\"0.74160998970950343\",\"0.94587903204190071\"]|0.493950914|\n|sensor-130|[\"0.049200214398937764\",\"0.25735850440187535\",\"0.51206374010048239\",\"0.74182335059053839\",\"0.95210342463616771\"]|0.505111463|\n|sensor-56|[\"0.04857779335488676\",\"0.24709868149337144\",\"0.49668762923789589\",\"0.74458470404241883\",\"0.94889104840865857\"]|0.497955018|\n|sensor-24|[\"0.051507199150534679\",\"0.24803904945640423\",\"0.50397070213183581\",\"0.75653888126010793\",\"0.9518782718727431\"]|0.501084379|\n|sensor-47|[\"0.045991246974755672\",\"0.24644331118208851\",\"0.48089197707088743\",\"0.74475142784472248\",\"0.9518322864959039\"]|0.49386228|\n|sensor-135|[\"0.05132897529660399\",\"0.24204987641954018\",\"0.48470113942206461\",\"0.74275730068433621\",\"0.94784079559229406\"]|0.494817619|\n|sensor-74|[\"0.048914714739047828\",\"0.25160926036445724\",\"0.49832498850160978\",\"0.75257887767110776\",\"0.94932261924236094\"]|0.501627252|\n|sensor-173|[\"0.048333149363009836\",\"0.26084250046756496\",\"0.51288012531934613\",\"0.74964772791583412\",\"0.95156058795294\"]|0.505401226|\n|sensor-28|[\"0.048511161184567046\",\"0.2547387968731824\",\"0.50101318228599656\",\"0.75693845702682039\",\"0.95243122486483989\"]|0.502066244|\n|sensor-34|[\"0.049980293859462954\",\"0.25094722564949412\",\"0.50914023067384762\",\"0.75571549713447961\",\"0.95176564809278674\"]|0.504309494|\n|...|...|...|\n\n*P*-th percentile (0 < *P* <= 100) of a list of ordered values, sorted in ascending order, is the smallest value in the list. The *P* percent of the data is less or equal to *P*-th percentile value (from Wikipedia article on percentiles).\n\nDefine *0*-th percentiles to be the smallest member of the population.\n\n>\n> Given the approximating nature of the calculation, the actual returned value may not be a member of the population.\n> Nearest-rank definition means that *P*=50 does not conform to the interpolative definition of the median. When evaluating the significance of this discrepancy for the specific application, the size of the population and an estimation error should be taken into account.\n\nThe percentiles aggregate provides an approximate value using T-Digest.\n\n>\n>\n> * The bounds on the estimation error vary with the value of the requested percentile. The best accuracy is at both ends of the [0..100] scale. Percentiles 0 and 100 are the exact minimum and maximum values of the distribution. The accuracy gradually decreases towards the middle of the scale. It's worst at the median and is capped at 1%.\n> * Error bounds are observed on the rank, not on the value. Suppose percentile(X, 50) returned a value of Xm. The estimate guarantees that at least 49% and at most 51% of the values of X are less or equal to Xm. There is no theoretical limit on the difference between Xm and the actual median value of X.\n> * The estimation may sometimes result in a precise value but there are no reliable conditions to define when it will be the case.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for aggregation calculation.|\n|*percentile*| real |  *True*| A constant that specifies the percentile.|\n|*percentiles* | real |  *True* | One or more comma-separated percentiles.|",
        "example": "",
        "sourceLength": 11369,
        "url": "https://learn.microsoft.com/en-us/kusto/query/percentiles-aggregation-function"
      }
    },
    {
      "name": "percentilesw",
      "category": "Aggregation function",
      "documentation": {
        "title": "percentilew(), percentilesw()",
        "description": "The `percentilew()` function calculates a weighted estimate for the specified nearest-rank percentile of the population defined by *expr*. `percentilesw()` works similarly to `percentilew()`. However, `percentilesw()` can calculate multiple weighted percentile values at once, which is more efficient than calculating each weighted percentile value separately.\n\nWeighted percentiles calculate percentiles in a dataset by giving each value in the input dataset a weight. In this method, each value is considered to be repeated a number of times equal to its weight, which is then used to calculate the percentile. By giving more importance to certain values, weighted percentiles provide a way to calculate percentiles in a \"weighted\" manner.\n\nTo calculate unweighted percentiles, see percentiles().",
        "syntax": "`percentilew(`*expr*`,` *weightExpr*`,` *percentile*`)`\n\n`percentilesw(`*expr*`,` *weightExpr*`,` *percentiles*`)`",
        "returnInfo": "Instead of returning the values in individual columns, use the `percentilesw_array()` function to return the percentiles in a single column of dynamic array type.\n\n### Syntax\n\n`percentilesw_array(`*expr*`,` *weightExpr*`,` *percentiles*`)`\n\n### Parameters\n\n| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for aggregation calculation.|\n|*percentiles*| real or dynamic |  *True*| One or more comma-separated percentiles or a dynamic array of percentiles. Each percentile must be a real value.|\n|*weightExpr*| `long` | *True*|The weight to give each value.|\n\n### Returns\n\nReturns an estimate for *expr* of the specified percentiles in the group as a single column of dynamic array type.\n\n### Examples\n\nThe examples in this section show how to use the syntax to help you get started.\n\n#### Comma-separated percentiles\n\n:::moniker range=\"azure-data-explorer\"\n> [!div class=\"nextstepaction\"]\n> <a href=\"https://dataexplorer.azure.com/clusters/help/databases/SampleIoTData?query=H4sIAAAAAAAAA1WOQQuCQBCF7/sr3lFhCM2sLLrUtVN0i4hpG0Ja11pXwujHZ8hCzVw+Ho/5xoiHYS9Wd3s+G8EKF/b9fjnayWNTt9YvTG2vhO1QXLf6JkMWQx2g0M+ckCY08JQwDpwRssApYZJAHZfqV6neaNqqYle+BHdxWqwvjTTPEzvHXfRnJYSfCHl/d5YTimJUxB+W4nlIyQAAAA==\" target=\"_blank\">Run the query</a>\n::: moniker-end\n\n```kusto\nlet latencyTable = datatable (ReqCount:long, LatencyBucket:long) \n[ \n    8, 10, \n    6, 20, \n    3, 30, \n    1, 40 \n];\nlatencyTable\n| summarize percentilesw_array(LatencyBucket, ReqCount, 50, 75, 99.9)\n```\n\n**Output**\n\n| percentile_LatencyBucket |\n|:---|:---|:---|\n| [20, 20, 40] |\n\n#### Dynamic array of percentiles\n\n:::moniker range=\"azure-data-explorer\"\n> [!div class=\"nextstepaction\"]\n> <a href=\"https://dataexplorer.azure.com/clusters/help/databases/SampleIoTData?query=H4sIAAAAAAAAA1WOQQuCQBCF7/sr3lFhiMysLLrUtVN0E4lpHUJa11pXwujHZ4hQ8y4fjwffGPEw7MXq7sQXI9iiYN/ny8FRHvu6tX5tanslHIbhrtU3GboQKoNCfytCNKWBF4TZyDEhHjkizKdQ+Ub9KtUbTVtV7MqX4C5Oi/WlkeZ5Zue4C/6shPEnQtFZrkodZEkvWCaENJ2keRh+AIIR/2/UAAAA\" target=\"_blank\">Run the query</a>\n::: moniker-end\n\n```kusto\nlet latencyTable = datatable (ReqCount:long, LatencyBucket:long) \n[ \n    8, 10, \n    6, 20, \n    3, 30, \n    1, 40 \n];\nlatencyTable\n| summarize percentilesw_array(LatencyBucket, ReqCount, dynamic([50, 75, 99.9]))\n```\n\n**Output**\n\n| percentile_LatencyBucket |\n|:---|:---|:---|\n| [20, 20, 40] |",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for aggregation calculation.|\n|*weightExpr*| `long` | *True*|The weight to give each value.|\n|*percentile*| real |  *True*| A constant that specifies the percentile.|\n|*percentiles* | real |  *True* | One or more comma-separated percentiles.|",
        "example": "",
        "sourceLength": 7995,
        "url": "https://learn.microsoft.com/en-us/kusto/query/percentilesw-aggregation-function"
      }
    },
    {
      "name": "stdev",
      "category": "Aggregation function",
      "documentation": {
        "title": "stdev()",
        "description": "Calculates the standard deviation of *expr* across the group, using Bessel's correction for a small dataset that is considered a sample.\n\nFor a large dataset that is representative of the population, use stdevp() (aggregation function).",
        "syntax": "`stdev(`*expr*`)`",
        "returnInfo": "Returns the standard deviation value of *expr* across the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the standard deviation aggregation calculation. |",
        "example": "range x from 1 to 5 step 1\n| summarize make_list(x), stdev(x)",
        "sourceLength": 2265,
        "url": "https://learn.microsoft.com/en-us/kusto/query/stdev-aggregation-function"
      }
    },
    {
      "name": "stdevif",
      "category": "Aggregation function",
      "documentation": {
        "title": "stdevif()",
        "description": "Calculates the standard deviation of *expr* in records for which *predicate* evaluates to `true`.",
        "syntax": "`stdevif(`*expr*`,`*predicate*`)`",
        "returnInfo": "Returns the standard deviation value of *expr* in records for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the standards deviation aggregation calculation. |\n| *predicate* | `string` |  *True* | The predicate that has to evaluate to `true` in order for *expr* to be added to the result. |",
        "example": "range x from 1 to 100 step 1\n| summarize stdevif(x, x % 2 == 0)",
        "sourceLength": 2024,
        "url": "https://learn.microsoft.com/en-us/kusto/query/stdevif-aggregation-function"
      }
    },
    {
      "name": "stdevp",
      "category": "Aggregation function",
      "documentation": {
        "title": "stdevp()",
        "description": "Calculates the standard deviation of *expr* across the group, considering the group as a population for a large dataset that is representative of the population.\n\nFor a small dataset that is a sample, use stdev() (aggregation function).",
        "syntax": "`stdevp(`*expr*`)`",
        "returnInfo": "Returns the standard deviation value of *expr* across the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression used for the standards deviation aggregation calculation. |",
        "example": "range x from 1 to 5 step 1\n| summarize make_list(x), stdevp(x)",
        "sourceLength": 2132,
        "url": "https://learn.microsoft.com/en-us/kusto/query/stdevp-aggregation-function"
      }
    },
    {
      "name": "sum",
      "category": "Aggregation function",
      "documentation": {
        "title": "sum()",
        "description": "Calculates the sum of *expr* across the group.",
        "syntax": "`sum(`*expr*`)`",
        "returnInfo": "Returns the sum value of *expr* across the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr*  string |  *True* | The expression used for the aggregation calculation. |",
        "example": "StormEvents \n| summarize EventCount=count(), TotalDamages = sum(DamageCrops+DamageProperty) by State \n| sort by TotalDamages",
        "sourceLength": 2245,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sum-aggregation-function"
      }
    },
    {
      "name": "sumif",
      "category": "Aggregation function",
      "documentation": {
        "title": "sumif()",
        "description": "Calculates the sum of *expr* in records for which *predicate* evaluates to `true`.\n\nYou can also use the sum() function, which sums rows without predicate expression.",
        "syntax": "`sumif(`*expr*`,`*predicate*`)`",
        "returnInfo": "Returns the sum of *expr* for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *predicate* | `string` |  *True* | The expression used to filter rows. If the predicate evaluates to `true`, the row will be included in the result.|",
        "example": "let T = datatable(name:string, day_of_birth:long)\n[\n   \"John\", 9,\n   \"Paul\", 18,\n   \"George\", 25,\n   \"Ringo\", 7\n];\nT\n| summarize sumif(day_of_birth, strlen(name) > 4)",
        "sourceLength": 3193,
        "url": "https://learn.microsoft.com/en-us/kusto/query/sumif-aggregation-function"
      }
    },
    {
      "name": "take_any",
      "category": "Aggregation function",
      "documentation": {
        "title": "take_any()",
        "description": "Arbitrarily chooses one record for each group in a summarize operator,\nand returns the value of one or more expressions over each such record.\n\n> **Deprecated aliases:** any()\n\n> \n> The deprecated version adds `any_` prefix to the columns returned by the `any()` aggregation.",
        "syntax": "`take_any(`*expr_1* [`,` *expr_2* ...]`)`\n\n`take_any(`*`)`",
        "returnInfo": "The `take_any` aggregation function returns the values of the expressions calculated\nfor each of the records selected Indeterministically from each group of the summarize operator.\n\nIf the `*` argument is provided, the function behaves as if the expressions are all columns\nof the input to the summarize operator barring the group-by columns, if any.\n\nThis function is useful when you want to get a sample value of one or more columns\nper value of the compound group key.\n\nWhen the function is provided with a single column reference, it will attempt to\nreturn a non-null/non-empty value, if such value is present.\n\nAs a result of the indeterministic nature of this function, using this function multiple times in\na single application of the `summarize` operator isn't equivalent to using\nthis function a single time with multiple expressions. The former may have each application\nselect a different record, while the latter guarantees that all values are calculated\nover a single record (per distinct group).",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr_N* | `string` |  *True* | The expression used for selecting a record. If the wildcard value (`*`) is given in place of an expression, all records will be selected.|",
        "example": "StormEvents\n| summarize take_any(State)\n\nStormEvents\n| project StartTime, EpisodeId, State, EventType\n| summarize take_any(*)\n\nStormEvents\n| where State startswith \"A\"\n| project StartTime, EpisodeId, State, EventType\n| summarize take_any(*) by State",
        "sourceLength": 4761,
        "url": "https://learn.microsoft.com/en-us/kusto/query/take-any-aggregation-function"
      }
    },
    {
      "name": "take_anyif",
      "category": "Aggregation function",
      "documentation": {
        "title": "take_anyif()",
        "description": "Arbitrarily selects one record for each group in a summarize operator in records for which the *predicate*\nis 'true'. The function returns the value of an expression over each such record.\n\nThis function is useful when you want to get a sample value of one column per value of the compound group key, subject to some predicate that is *true*. If such a value is present, the function attempts to return a non-null/non-empty value.\n\n> **Deprecated aliases:** anyif()\n\n> \n> The deprecated version adds `any_` prefix to the columns returned by the `any()` aggregation.",
        "syntax": "`take_anyif(` *expr*`,` *predicate* `)`",
        "returnInfo": "The `take_anyif` aggregation function returns the value of the expression calculated\nfor each of the records randomly selected from each group of the summarize operator. Only records for which *predicate* returns 'true' may be selected. If the predicate doesn't return 'true', a null value is produced.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for selecting a record. |\n| *predicate* | `string` |  *True* | Indicates which records may be considered for evaluation. |",
        "example": "StormEvents\n| summarize take_anyif(EventType, EventNarrative has 'strong wind')",
        "sourceLength": 2744,
        "url": "https://learn.microsoft.com/en-us/kusto/query/take-anyif-aggregation-function"
      }
    },
    {
      "name": "tdigest",
      "category": "Aggregation function",
      "documentation": {
        "title": "tdigest()",
        "description": "Calculates the intermediate results of `percentiles()` across the group.\n\nFor more information, see the underlying algorithm (T-Digest) and the estimated error.\n\n> \n> The results of tdigest() and tdigest_merge() can be stored and later retrieved. For example, you may want to create daily percentiles summary, which can then be used to calculate weekly percentiles.\n> However, the precise binary representation of these results may change over time, and is not documented. There's no guarantee that these functions will produce identical results for identical inputs.",
        "syntax": "`tdigest(`*expr* [`,` *weight*]`)`",
        "returnInfo": "The Intermediate results of weighted percentiles of `*expr*` across the group.\n\n> \n>\n>- Use the aggregation function tdigest_merge() to merge the output of `tdigest` again across another group.\n>- Use the function percentile_tdigest() to calculate the percentile/percentilew of the `tdigest` results.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n| *expr* | `string` |  *True* | The expression used for the aggregation calculation. |\n| *weight* | `string` | | The weights of the values for the aggregation calculation. |",
        "example": "",
        "sourceLength": 6437,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tdigest-aggregation-function"
      }
    },
    {
      "name": "tdigest_merge",
      "category": "Function",
      "documentation": {
        "title": "tdigest_merge()",
        "description": "Merges tdigest results across the group.\n\nFor more information about the underlying algorithm (T-Digest) and the estimated error, see estimation error in percentiles.\n\n> The `tdigest_merge()` and `merge_tdigest()` functions are equivalent\n\n> \n>The results of tdigest() and tdigest_merge() can be stored and later retrieved. For example, you may want to create daily percentiles summary, which can then be used to calculate weekly percentiles.\n> However, the precise binary representation of these results may change over time. There's no guarantee that these functions will produce identical results for identical inputs, and therefore we don't advise relying on them.",
        "syntax": "`tdigest_merge(`*expr*`)`",
        "returnInfo": "Returns the merged tdigest values of *expr* across the group.\n\n> \n>\n> * Use the function percentile_tdigest() to calculate the percentiles from the `tdigest_merge` results.\n> * All tdigests that are included in the same group must be of the same type.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression used for the aggregation calculation.|",
        "example": "StormEvents\n| summarize PreAggDamageProperty=tdigest(DamageProperty) by State\n| summarize tdigest_merge(PreAggDamageProperty)",
        "sourceLength": 4694,
        "url": "https://learn.microsoft.com/en-us/kusto/query/tdigest-merge-aggregation-function"
      }
    },
    {
      "name": "variance",
      "category": "Aggregation function",
      "documentation": {
        "title": "variance()",
        "description": "Calculates the variance of *expr* across the group, considering the group as a sample.\n\nThe following formula is used:",
        "syntax": "`variance(`*expr*`)`",
        "returnInfo": "Returns the variance value of *expr* across the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `real` |  *True* | The expression used for the variance calculation.|",
        "example": "range x from 1 to 5 step 1\n| summarize make_list(x), variance(x)",
        "sourceLength": 1910,
        "url": "https://learn.microsoft.com/en-us/kusto/query/variance-aggregation-function"
      }
    },
    {
      "name": "varianceif",
      "category": "Aggregation function",
      "documentation": {
        "title": "varianceif()",
        "description": "Calculates the variance of *expr* in records for which *predicate* evaluates to `true`.",
        "syntax": "`varianceif(`*expr*`,` *predicate*`)`",
        "returnInfo": "Returns the variance value of *expr* in records for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for the variance calculation.|\n|*predicate*| `string` |  *True* | If *predicate* evaluates to `true`, the *expr* calculated value will be added to the variance.|",
        "example": "range x from 1 to 100 step 1\n| summarize varianceif(x, x%2 == 0)",
        "sourceLength": 1906,
        "url": "https://learn.microsoft.com/en-us/kusto/query/varianceif-aggregation-function"
      }
    },
    {
      "name": "variancep",
      "category": "Aggregation function",
      "documentation": {
        "title": "variancep()",
        "description": "Calculates the variance of *expr* across the group, considering the group as a population.\n\nThe following formula is used:",
        "syntax": "`variancep(`*expr*`)`",
        "returnInfo": "Returns the variance value of *expr* across the group.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for the variance calculation.|",
        "example": "range x from 1 to 5 step 1\n| summarize make_list(x), variancep(x)",
        "sourceLength": 1877,
        "url": "https://learn.microsoft.com/en-us/kusto/query/variancep-aggregation-function"
      }
    },
    {
      "name": "variancepif",
      "category": "Aggregation function",
      "documentation": {
        "title": "variancepif()",
        "description": "Calculates the variance of *expr* in records for which *predicate* evaluates to `true`.",
        "syntax": "`variancepif(`*expr*`,` *predicate*`)`",
        "returnInfo": "Returns the variance value of *expr* in records for which *predicate* evaluates to `true`.",
        "parametersTable": "| Name | Type | Required | Description |\n|:--|:--|:--|:--|\n|*expr* | `string` |  *True* | The expression to use for the variance calculation.|\n|*predicate*| `string` |  *True* | If *predicate* evaluates to `true`, the *expr* calculated value will be added to the variance.|",
        "example": "range x from 1 to 100 step 1\n| summarize variancepif(x, x%2 == 0)",
        "sourceLength": 2047,
        "url": "https://learn.microsoft.com/en-us/kusto/query/variancepif-aggregation-function"
      }
    }
  ],
  "lastUpdated": "2025-09-15T12:39:05.852Z"
}