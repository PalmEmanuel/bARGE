name: Build, Test, and Release (if tag)

on:
  push:
    branches: [main]
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-?*
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22'

jobs:
  build:
    name: Build Extension
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-info.outputs.version }}
      vsix-name: ${{ steps.package-info.outputs.vsix-name }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type checking
        run: npm run check-types

      - name: Lint code
        run: npm run lint

      - name: Build extension
        run: npm run package

      - name: Get package info
        id: package-info
        shell: pwsh
        run: |
          # Otherwise, use the version from package.json
          $Version = node -p "require('./package.json').version"
          $Version = "v$Version"
          if ('${{ github.ref_type }}' -eq 'tag') {
            # If this is a tag push, use the tag name as the version
            $Version = '${{ github.ref_name }}'
          }
          $VsixName = "barge-vscode-$Version.vsix"
          "version=$Version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "vsix-name=$VsixName" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Install VSCE
        run: npm install -g @vscode/vsce

      - name: Package VSIX
        shell: pwsh
        run: |
          $Version = '${{ steps.package-info.outputs.version }}'
          $VsixName = '${{ steps.package-info.outputs.vsix-name }}'
          # If we've triggered on a tag and the version hasn't already been updated in package.json, pass the version to vsce
          # This will make vsce update package.json version to match the tag
          if ($Version -ne '${{ github.ref_name }}' -and '${{ github.ref_type }}' -eq 'tag') {
            vsce package --out $VsixName $Version --no-git-tag-version
          }
          else {
            vsce package --out $VsixName --no-git-tag-version
          }

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: ${{ steps.package-info.outputs.vsix-name }}

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-build
          path: dist/
          retention-days: 7

  test:
    name: Test Extension
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-build
          path: dist/

      - name: Compile tests
        run: npm run compile-tests

      - name: Run tests
        run: |
          # Install and start virtual display for headless testing
          sudo apt-get update
          sudo apt-get install -y xvfb
          xvfb-run -a npm test
        env:
          # Disable VS Code telemetry during tests
          VSCODE_DISABLE_CRASH_REPORTER: true
          # Suppress punycode deprecation warnings from dependencies
          NODE_NO_WARNINGS: 1

  release:
    name: Release to Marketplace
    runs-on: ubuntu-latest
    needs: [build, test]
    if: startsWith(github.ref_name, 'v')
    permissions:
      id-token: write # For OIDC to Azure for publishing to Marketplace
      contents: write # For creating GitHub Release of new version
      pull-requests: write # For pushing CHANGELOG update back to main
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-package

      - name: Install VSCE
        run: npm install -g @vscode/vsce

      - name: Azure Login (Workload Identity Federation)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          reverseOrder: true
          excludeTypes: docs, style, refactor, test, ci, dev
          excludeScopes: dev, test, release

      - name: Publish to VS Code Marketplace
        shell: pwsh
        run: |
          # The --azure-credential option relies on DefaultAzureCredential (and we're logged into Azure CLI using OIDC)
          # vsce publish without --no-update-package-json allows us to update the version in package.json and PR it later
          if ("${{ github.ref_name }}" -match '-preview') {
            vsce publish --packagePath ${{ needs.build.outputs.vsix-name }} --azure-credential --no-git-tag-version ${{ github.ref_name }} --pre-release
          } else {
            vsce publish --packagePath ${{ needs.build.outputs.vsix-name }} --azure-credential --no-git-tag-version ${{ github.ref_name }}
          }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ needs.build.outputs.vsix-name }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-preview') }}

      - name: Create Pull Request for CHANGELOG and package.json
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ github.token }}
          commit-message: |
            chore(release): Release ${{ github.ref_name }}

            - Update CHANGELOG for ${{ github.ref_name }}
            - Bump package.json version to ${{ github.ref_name }}
          title: Update CHANGELOG and Version for ${{ github.ref_name }}
          body: Automatic update of CHANGELOG and package.json for release ${{ github.ref_name }}.
          labels: release
